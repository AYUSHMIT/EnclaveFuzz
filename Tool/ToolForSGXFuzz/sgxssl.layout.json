"ghidra/libsgx_tsgxssl_a/bionic_localtime.o": [
    "increment_overflow",
    "leaps_thru_end_of",
    "sgxssl_gmtime_r",
    "sgxssl_gmtime"
],
"ghidra/libsgx_tsgxssl_a/bionic_sscanf.o": [
    "sgxssl_vsscanf",
    "sgxssl_sscanf"
],
"ghidra/libsgx_tsgxssl_a/tcpu_utils.o": [
    "update_feature_mask",
    "sgxssl_cpuid_leaf_info"
],
"ghidra/libsgx_tsgxssl_a/tctype.o": [
    "sgxssl___ctype_b_loc",
    "sgxssl___ctype_tolower_loc"
],
"ghidra/libsgx_tsgxssl_a/texceptions.o": [
    "sgxssl_exception_handler",
    "init_exception_handler",
    "const_init_exception_handler"
],
"ghidra/libsgx_tsgxssl_a/tmem_mgmt.o": [
    "destroy",
    "~map",
    "sgxssl_mprotect",
    "sgxssl_madvise",
    "sgxssl_mlock",
    "__tree_left_rotate<std::__1::__tree_node_base<void*>*>",
    "__tree_right_rotate<std::__1::__tree_node_base<void*>*>",
    "__tree_remove<std::__1::__tree_node_base<void*>*>",
    "sgxssl_munmap",
    "_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_",
    "sgxssl_mmap",
    "_GLOBAL__sub_I_tmem_mgmt.cpp",
    "~map"
],
"ghidra/libsgx_tsgxssl_a/tpthread.o": [
    "destroy",
    "~map",
    "destroy",
    "~map",
    "sgxssl_pthread_once",
    "sgxssl_pthread_atfork",
    "find<unsigned_int>",
    "find<unsigned_int>",
    "sgxssl_pthread_getspecific",
    "destroy",
    "__tree_left_rotate<std::__1::__tree_node_base<void*>*>",
    "__tree_right_rotate<std::__1::__tree_node_base<void*>*>",
    "__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>",
    "operator[]",
    "sgxssl_pthread_setspecific",
    "sgxssl_pthread_key_create",
    "__tree_remove<std::__1::__tree_node_base<void*>*>",
    "sgxssl_pthread_key_delete",
    "_GLOBAL__sub_I_tpthread.cpp",
    "~map",
    "~map"
],
"ghidra/libsgx_tsgxssl_a/trand.o": [
    "sgxssl_read_rand",
    "sgx_rand_status",
    "get_sgx_rand_bytes"
],
"ghidra/libsgx_tsgxssl_a/tSgxSSL_api.o": [
    "SGXSSLSetPrintToStdoutStderrCB",
    "SGXSSLSetUnreachableCodePolicy"
],
"ghidra/libsgx_tsgxssl_a/tsgxssl_version.o": [],
"ghidra/libsgx_tsgxssl_a/tsocket.o": [
    "sgxssl_getsockname",
    "sgxssl_getsockopt",
    "sgxssl_setsockopt",
    "sgxssl_socket",
    "sgxssl_bind",
    "sgxssl_listen",
    "sgxssl_connect",
    "sgxssl_accept",
    "sgxssl_freeaddrinfo",
    "sgxssl_gethostbyname",
    "sgxssl_getnameinfo",
    "sgxssl_getaddrinfo",
    "sgxssl_ioctl"
],
"ghidra/libsgx_tsgxssl_a/tstdio.o": [
    "sgx_print"
],
"ghidra/libsgx_tsgxssl_a/tstdlib.o": [
    "tssl_access_version_dummy1",
    "sgxssl_getenv"
],
"ghidra/libsgx_tsgxssl_a/tstring.o": [
    "sgxssl___builtin___strcpy_chk",
    "sgxssl___builtin___strcat_chk"
],
"ghidra/libsgx_tsgxssl_a/ttime.o": [
    "sgxssl_time",
    "sgxssl_gettimeofday",
    "sgxssl_clock_gettime"
],
"ghidra/libsgx_tsgxssl_a/tucontext.o": [
    "sgxssl_getcontext",
    "sgxssl_setcontext",
    "sgxssl_makecontext"
],
"ghidra/libsgx_tsgxssl_a/tunistd.o": [
    "sgxssl_pipe",
    "sgxssl_write",
    "sgxssl_read",
    "sgxssl_close",
    "sgxssl_sysconf",
    "sgxssl_getpid",
    "sgxssl_OPENSSL_issetugid",
    "sgxssl_syscall",
    "sgxssl_stat",
    "sgxssl_readdir",
    "sgxssl_closedir",
    "sgxssl_opendir"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_bitstr.o": [
    "i2c_ASN1_BIT_STRING",
    "c2i_ASN1_BIT_STRING",
    "ASN1_BIT_STRING_set_bit",
    "ASN1_BIT_STRING_get_bit",
    "ASN1_BIT_STRING_check"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_d2i_fp.o": [
    "asn1_d2i_read_bio",
    "ASN1_d2i_bio",
    "ASN1_item_d2i_bio"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_digest.o": [
    "ASN1_digest",
    "ASN1_item_digest"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_dup.o": [
    "ASN1_dup",
    "ASN1_item_dup"
],
"ghidra/libsgx_tsgxssl_crypto_a/aes_cbc.o": [
    "AES_cbc_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/aes_cfb.o": [
    "AES_cfb128_encrypt",
    "AES_cfb1_encrypt",
    "AES_cfb8_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/aes_core.o": [
    "AES_set_encrypt_key",
    "AES_set_decrypt_key",
    "AES_encrypt",
    "AES_decrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/aes_ecb.o": [
    "AES_ecb_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/aes_ige.o": [
    "AES_ige_encrypt",
    "AES_bi_ige_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/aes_misc.o": [
    "AES_options"
],
"ghidra/libsgx_tsgxssl_crypto_a/aesni-gcm-x86_64.o": [
    "_aesni_ctr32_ghash_6x",
    "aesni_gcm_decrypt",
    "_aesni_ctr32_6x",
    "aesni_gcm_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/aesni-mb-x86_64.o": [
    "aesni_multi_cbc_encrypt",
    "aesni_multi_cbc_decrypt",
    "aesni_multi_cbc_encrypt_avx",
    "aesni_multi_cbc_decrypt_avx"
],
"ghidra/libsgx_tsgxssl_crypto_a/aesni-sha1-x86_64.o": [
    "aesni_cbc_sha1_enc",
    "aesni_cbc_sha1_enc_ssse3",
    "aesni_cbc_sha1_enc_avx",
    "aesni_cbc_sha1_enc_shaext"
],
"ghidra/libsgx_tsgxssl_crypto_a/aesni-sha256-x86_64.o": [
    "aesni_cbc_sha256_enc",
    "aesni_cbc_sha256_enc_xop",
    "aesni_cbc_sha256_enc_avx",
    "aesni_cbc_sha256_enc_avx2",
    "aesni_cbc_sha256_enc_shaext"
],
"ghidra/libsgx_tsgxssl_crypto_a/aesni-x86_64.o": [
    "aesni_encrypt",
    "aesni_decrypt",
    "_aesni_encrypt2",
    "_aesni_decrypt2",
    "_aesni_encrypt3",
    "_aesni_decrypt3",
    "_aesni_encrypt4",
    "_aesni_decrypt4",
    "_aesni_encrypt6",
    "FUN_001003b0",
    "_aesni_decrypt6",
    "_aesni_encrypt8",
    "FUN_0010059a",
    "_aesni_decrypt8",
    "aesni_ecb_encrypt",
    "aesni_ccm64_encrypt_blocks",
    "aesni_ccm64_decrypt_blocks",
    "aesni_ctr32_encrypt_blocks",
    "aesni_xts_encrypt",
    "aesni_xts_decrypt",
    "aesni_ocb_encrypt",
    "__ocb_encrypt6",
    "__ocb_encrypt4",
    "__ocb_encrypt1",
    "aesni_ocb_decrypt",
    "__ocb_decrypt6",
    "__ocb_decrypt4",
    "__ocb_decrypt1",
    "aesni_cbc_encrypt",
    "aesni_set_decrypt_key",
    "aesni_set_encrypt_key",
    "FUN_00104240",
    "FUN_00104247",
    "FUN_00104260",
    "FUN_00104267",
    "FUN_001042a0",
    "FUN_001042c0",
    "FUN_001042c7",
    "FUN_001042e0"
],
"ghidra/libsgx_tsgxssl_crypto_a/aes_ofb.o": [
    "AES_ofb128_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/aes_wrap.o": [
    "AES_wrap_key",
    "AES_unwrap_key"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_gentm.o": [
    "asn1_generalizedtime_to_tm",
    "ASN1_GENERALIZEDTIME_check",
    "ASN1_GENERALIZEDTIME_set_string",
    "ASN1_GENERALIZEDTIME_adj",
    "ASN1_GENERALIZEDTIME_set",
    "ASN1_GENERALIZEDTIME_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_i2d_fp.o": [
    "ASN1_i2d_bio",
    "ASN1_item_i2d_bio"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_int.o": [
    "c2i_ibuf",
    "ASN1_INTEGER_cmp",
    "i2c_ASN1_INTEGER",
    "c2i_ASN1_INTEGER",
    "d2i_ASN1_UINTEGER",
    "ASN1_INTEGER_get_int64",
    "ASN1_INTEGER_set_int64",
    "ASN1_INTEGER_get_uint64",
    "ASN1_INTEGER_set_uint64",
    "ASN1_INTEGER_get",
    "BN_to_ASN1_INTEGER",
    "ASN1_INTEGER_to_BN",
    "ASN1_ENUMERATED_get_int64",
    "ASN1_ENUMERATED_set_int64",
    "ASN1_ENUMERATED_get",
    "BN_to_ASN1_ENUMERATED",
    "ASN1_ENUMERATED_to_BN",
    "c2i_uint64_int",
    "i2c_uint64_int"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_mbstr.o": [
    "in_utf8",
    "cpy_asc",
    "cpy_bmp",
    "cpy_univ",
    "cpy_utf8",
    "out_utf8",
    "type_str",
    "ASN1_mbstring_ncopy",
    "ASN1_mbstring_copy"
],
"ghidra/libsgx_tsgxssl_crypto_a/ameth_lib.o": [
    "ameth_cmp",
    "ameth_cmp_BSEARCH_CMP_FN",
    "pkey_asn1_find",
    "EVP_PKEY_asn1_get_count",
    "EVP_PKEY_asn1_get0",
    "EVP_PKEY_asn1_find",
    "EVP_PKEY_asn1_find_str",
    "EVP_PKEY_asn1_add0",
    "EVP_PKEY_asn1_get0_info",
    "EVP_PKEY_get0_asn1",
    "EVP_PKEY_asn1_copy",
    "EVP_PKEY_asn1_free",
    "EVP_PKEY_asn1_new",
    "EVP_PKEY_asn1_add_alias",
    "EVP_PKEY_asn1_set_public",
    "EVP_PKEY_asn1_set_private",
    "EVP_PKEY_asn1_set_param",
    "EVP_PKEY_asn1_set_free",
    "EVP_PKEY_asn1_set_ctrl",
    "EVP_PKEY_asn1_set_security_bits",
    "EVP_PKEY_asn1_set_item",
    "EVP_PKEY_asn1_set_siginf",
    "EVP_PKEY_asn1_set_check",
    "EVP_PKEY_asn1_set_public_check",
    "EVP_PKEY_asn1_set_param_check",
    "EVP_PKEY_asn1_set_set_priv_key",
    "EVP_PKEY_asn1_set_set_pub_key",
    "EVP_PKEY_asn1_set_get_priv_key",
    "EVP_PKEY_asn1_set_get_pub_key"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_object.o": [
    "i2d_ASN1_OBJECT",
    "a2d_ASN1_OBJECT",
    "i2t_ASN1_OBJECT",
    "i2a_ASN1_OBJECT",
    "ASN1_OBJECT_new",
    "ASN1_OBJECT_free",
    "c2i_ASN1_OBJECT",
    "d2i_ASN1_OBJECT",
    "ASN1_OBJECT_create"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_octet.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/a_print.o": [
    "ASN1_PRINTABLE_type",
    "ASN1_UNIVERSALSTRING_to_string",
    "ASN1_STRING_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/aria.o": [
    "aria_encrypt",
    "aria_set_encrypt_key",
    "aria_set_decrypt_key"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_sign.o": [
    "ASN1_sign",
    "ASN1_item_sign_ctx",
    "ASN1_item_sign"
],
"ghidra/libsgx_tsgxssl_crypto_a/asn1_err.o": [
    "ERR_load_ASN1_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/asn1_gen.o": [
    "generate_v3",
    "parse_tagging.part.0",
    "bitstr_cb",
    "mask_cb",
    "asn1_cb",
    "ASN1_generate_v3",
    "ASN1_generate_nconf",
    "ASN1_str2mask"
],
"ghidra/libsgx_tsgxssl_crypto_a/asn1_item_list.o": [
    "ASN1_ITEM_lookup",
    "ASN1_ITEM_get"
],
"ghidra/libsgx_tsgxssl_crypto_a/asn1_lib.o": [
    "ASN1_check_infinite_end",
    "ASN1_const_check_infinite_end",
    "ASN1_get_object",
    "ASN1_put_object",
    "ASN1_put_eoc",
    "ASN1_object_size",
    "ASN1_STRING_set",
    "ASN1_STRING_copy",
    "ASN1_STRING_set0",
    "ASN1_STRING_type_new",
    "ASN1_STRING_new",
    "asn1_string_embed_free",
    "ASN1_STRING_free",
    "ASN1_STRING_dup",
    "ASN1_STRING_clear_free",
    "ASN1_STRING_cmp",
    "ASN1_STRING_length",
    "ASN1_STRING_length_set",
    "ASN1_STRING_type",
    "ASN1_STRING_get0_data",
    "ASN1_STRING_data"
],
"ghidra/libsgx_tsgxssl_crypto_a/asn1_par.o": [
    "ASN1_tag2str",
    "asn1_parse2",
    "ASN1_parse",
    "ASN1_parse_dump"
],
"ghidra/libsgx_tsgxssl_crypto_a/asn_mime.o": [
    "mime_param_free",
    "mime_hdr_cmp",
    "mime_param_cmp",
    "multi_split",
    "mime_hdr_new",
    "mime_hdr_addparam.isra.0",
    "b64_read_asn1",
    "mime_hdr_free",
    "mime_parse_hdr",
    "SMIME_read_ASN1",
    "SMIME_crlf_copy",
    "i2d_ASN1_bio_stream",
    "PEM_write_bio_ASN1_stream",
    "SMIME_write_ASN1",
    "SMIME_text"
],
"ghidra/libsgx_tsgxssl_crypto_a/asn_moid.o": [
    "oid_module_finish",
    "oid_module_init",
    "ASN1_add_oid_module"
],
"ghidra/libsgx_tsgxssl_crypto_a/asn_mstbl.o": [
    "stbl_module_init",
    "ASN1_add_stable_module"
],
"ghidra/libsgx_tsgxssl_crypto_a/asn_pack.o": [
    "ASN1_item_pack",
    "ASN1_item_unpack"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_strex.o": [
    "send_bio_chars",
    "do_dump.constprop.0",
    "do_buf.constprop.0",
    "X509_NAME_print_ex",
    "ASN1_STRING_print_ex",
    "ASN1_STRING_to_UTF8"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_strnid.o": [
    "sk_table_cmp",
    "table_cmp_BSEARCH_CMP_FN",
    "st_free",
    "ASN1_STRING_set_default_mask",
    "ASN1_STRING_get_default_mask",
    "ASN1_STRING_set_default_mask_asc",
    "ASN1_STRING_TABLE_get",
    "ASN1_STRING_set_by_NID",
    "ASN1_STRING_TABLE_add",
    "ASN1_STRING_TABLE_cleanup"
],
"ghidra/libsgx_tsgxssl_crypto_a/async_err.o": [
    "ERR_load_ASYNC_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/async_null.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/async.o": [
    "async_fibre_swapcontext.constprop.0",
    "async_get_ctx",
    "async_start_func",
    "ASYNC_pause_job",
    "async_init",
    "async_deinit",
    "ASYNC_init_thread",
    "ASYNC_start_job",
    "async_delete_thread_state",
    "ASYNC_cleanup_thread",
    "ASYNC_get_current_job",
    "ASYNC_get_wait_ctx",
    "ASYNC_block_pause",
    "ASYNC_unblock_pause"
],
"ghidra/libsgx_tsgxssl_crypto_a/async_posix.o": [
    "ASYNC_is_capable",
    "async_local_cleanup",
    "async_fibre_makecontext",
    "async_fibre_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/async_wait.o": [
    "ASYNC_WAIT_CTX_new",
    "ASYNC_WAIT_CTX_free",
    "ASYNC_WAIT_CTX_set_wait_fd",
    "ASYNC_WAIT_CTX_get_fd",
    "ASYNC_WAIT_CTX_get_all_fds",
    "ASYNC_WAIT_CTX_get_changed_fds",
    "ASYNC_WAIT_CTX_clear_fd",
    "async_wait_ctx_reset_counts"
],
"ghidra/libsgx_tsgxssl_crypto_a/async_win.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/a_time.o": [
    "d2i_ASN1_TIME",
    "i2d_ASN1_TIME",
    "ASN1_TIME_new",
    "ASN1_TIME_free",
    "asn1_time_to_tm",
    "asn1_time_from_tm",
    "ASN1_TIME_adj",
    "ASN1_TIME_set",
    "ASN1_TIME_check",
    "ASN1_TIME_set_string",
    "ASN1_TIME_set_string_X509",
    "ASN1_TIME_to_tm",
    "ASN1_TIME_to_generalizedtime",
    "ASN1_TIME_diff",
    "ASN1_TIME_print",
    "ASN1_TIME_cmp_time_t",
    "ASN1_TIME_normalize",
    "ASN1_TIME_compare"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_type.o": [
    "ASN1_TYPE_get",
    "ASN1_TYPE_set",
    "ASN1_TYPE_set1",
    "ASN1_TYPE_cmp",
    "ASN1_TYPE_pack_sequence",
    "ASN1_TYPE_unpack_sequence"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_utctm.o": [
    "asn1_utctime_to_tm",
    "ASN1_UTCTIME_check",
    "ASN1_UTCTIME_set_string",
    "ASN1_UTCTIME_adj",
    "ASN1_UTCTIME_set",
    "ASN1_UTCTIME_cmp_time_t",
    "ASN1_UTCTIME_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_utf8.o": [
    "UTF8_getc",
    "UTF8_putc"
],
"ghidra/libsgx_tsgxssl_crypto_a/a_verify.o": [
    "ASN1_verify",
    "ASN1_item_verify"
],
"ghidra/libsgx_tsgxssl_crypto_a/b_addr.o": [
    "BIO_ADDR_new",
    "BIO_ADDR_free",
    "BIO_ADDR_clear",
    "BIO_ADDR_make",
    "BIO_ADDR_rawmake",
    "BIO_ADDR_family",
    "BIO_ADDR_rawaddress",
    "BIO_ADDR_rawport",
    "BIO_ADDR_path_string",
    "BIO_ADDR_sockaddr",
    "BIO_ADDR_sockaddr_noconst",
    "BIO_ADDR_sockaddr_size",
    "addr_strings.part.0",
    "BIO_ADDR_hostname_string",
    "BIO_ADDR_service_string",
    "BIO_ADDRINFO_next",
    "BIO_ADDRINFO_family",
    "BIO_ADDRINFO_socktype",
    "BIO_ADDRINFO_protocol",
    "BIO_ADDRINFO_sockaddr_size",
    "BIO_ADDRINFO_sockaddr",
    "BIO_ADDRINFO_address",
    "BIO_ADDRINFO_free",
    "BIO_parse_hostserv",
    "BIO_lookup_ex",
    "BIO_lookup"
],
"ghidra/libsgx_tsgxssl_crypto_a/b_dump.o": [
    "write_bio",
    "BIO_dump_indent_cb",
    "BIO_dump_cb",
    "BIO_dump",
    "BIO_dump_indent",
    "BIO_hex_string"
],
"ghidra/libsgx_tsgxssl_crypto_a/bf_buff.o": [
    "buffer_callback_ctrl",
    "buffer_new",
    "buffer_gets",
    "buffer_read",
    "buffer_ctrl",
    "buffer_free",
    "buffer_write.part.0",
    "buffer_write",
    "buffer_puts",
    "BIO_f_buffer"
],
"ghidra/libsgx_tsgxssl_crypto_a/bf_lbuf.o": [
    "linebuffer_callback_ctrl",
    "linebuffer_ctrl",
    "linebuffer_gets",
    "linebuffer_read",
    "linebuffer_free",
    "linebuffer_new",
    "linebuffer_write.part.0",
    "linebuffer_write",
    "linebuffer_puts",
    "BIO_f_linebuffer"
],
"ghidra/libsgx_tsgxssl_crypto_a/bf_nbio.o": [
    "nbiof_callback_ctrl",
    "nbiof_gets",
    "nbiof_puts",
    "nbiof_free",
    "nbiof_new",
    "nbiof_ctrl",
    "nbiof_read",
    "nbiof_write",
    "BIO_f_nbio_test"
],
"ghidra/libsgx_tsgxssl_crypto_a/bf_null.o": [
    "nullf_callback_ctrl",
    "nullf_gets",
    "nullf_puts",
    "nullf_read",
    "nullf_ctrl",
    "nullf_write",
    "BIO_f_null"
],
"ghidra/libsgx_tsgxssl_crypto_a/bio_asn1.o": [
    "asn1_bio_callback_ctrl",
    "asn1_bio_gets",
    "asn1_bio_read",
    "asn1_bio_free",
    "asn1_bio_ctrl",
    "asn1_bio_new",
    "asn1_bio_write",
    "asn1_bio_puts",
    "BIO_f_asn1",
    "BIO_asn1_set_prefix",
    "BIO_asn1_get_prefix",
    "BIO_asn1_set_suffix",
    "BIO_asn1_get_suffix"
],
"ghidra/libsgx_tsgxssl_crypto_a/bio_b64.o": [
    "b64_callback_ctrl",
    "b64_write",
    "b64_ctrl",
    "b64_puts",
    "b64_free",
    "b64_new",
    "b64_read",
    "BIO_f_base64"
],
"ghidra/libsgx_tsgxssl_crypto_a/bio_cb.o": [
    "BIO_debug_callback"
],
"ghidra/libsgx_tsgxssl_crypto_a/bio_enc.o": [
    "enc_callback_ctrl",
    "enc_write",
    "enc_ctrl",
    "enc_free",
    "enc_new",
    "enc_read",
    "BIO_f_cipher",
    "BIO_set_cipher"
],
"ghidra/libsgx_tsgxssl_crypto_a/bio_err.o": [
    "ERR_load_BIO_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/bio_lib.o": [
    "BIO_new",
    "BIO_free",
    "BIO_set_data",
    "BIO_get_data",
    "BIO_set_init",
    "BIO_get_init",
    "BIO_set_shutdown",
    "BIO_get_shutdown",
    "BIO_up_ref",
    "BIO_clear_flags",
    "BIO_test_flags",
    "BIO_set_flags",
    "BIO_get_callback",
    "BIO_set_callback",
    "BIO_get_callback_ex",
    "BIO_set_callback_ex",
    "BIO_set_callback_arg",
    "BIO_get_callback_arg",
    "BIO_method_name",
    "BIO_method_type",
    "BIO_read",
    "BIO_read_ex",
    "BIO_write",
    "BIO_write_ex",
    "BIO_puts",
    "BIO_gets",
    "BIO_indent",
    "BIO_ctrl",
    "BIO_int_ctrl",
    "BIO_ptr_ctrl",
    "BIO_callback_ctrl",
    "BIO_ctrl_pending",
    "BIO_ctrl_wpending",
    "BIO_push",
    "BIO_pop",
    "BIO_get_retry_BIO",
    "BIO_get_retry_reason",
    "BIO_set_retry_reason",
    "BIO_find_type",
    "BIO_next",
    "BIO_set_next",
    "BIO_free_all",
    "BIO_dup_chain",
    "BIO_copy_next_retry",
    "BIO_set_ex_data",
    "BIO_get_ex_data",
    "BIO_number_read",
    "BIO_number_written",
    "bio_free_ex_data",
    "bio_cleanup"
],
"ghidra/libsgx_tsgxssl_crypto_a/bio_md.o": [
    "md_callback_ctrl",
    "md_new",
    "md_ctrl",
    "md_gets",
    "md_free",
    "md_read",
    "md_write",
    "BIO_f_md"
],
"ghidra/libsgx_tsgxssl_crypto_a/bio_meth.o": [
    "bwrite_conv",
    "bread_conv",
    "do_bio_type_init_ossl_",
    "BIO_get_new_index",
    "BIO_meth_new",
    "BIO_meth_free",
    "BIO_meth_get_write",
    "BIO_meth_get_write_ex",
    "BIO_meth_set_write",
    "BIO_meth_set_write_ex",
    "BIO_meth_get_read",
    "BIO_meth_get_read_ex",
    "BIO_meth_set_read",
    "BIO_meth_set_read_ex",
    "BIO_meth_get_puts",
    "BIO_meth_set_puts",
    "BIO_meth_get_gets",
    "BIO_meth_set_gets",
    "BIO_meth_get_ctrl",
    "BIO_meth_set_ctrl",
    "BIO_meth_get_create",
    "BIO_meth_set_create",
    "BIO_meth_get_destroy",
    "BIO_meth_set_destroy",
    "BIO_meth_get_callback_ctrl",
    "BIO_meth_set_callback_ctrl"
],
"ghidra/libsgx_tsgxssl_crypto_a/bio_ndef.o": [
    "ndef_prefix_free",
    "ndef_suffix_free",
    "ndef_suffix",
    "ndef_prefix",
    "BIO_new_NDEF"
],
"ghidra/libsgx_tsgxssl_crypto_a/bio_ok.o": [
    "ok_callback_ctrl",
    "block_out",
    "ok_ctrl",
    "ok_free",
    "ok_new",
    "ok_read",
    "ok_write",
    "BIO_f_reliable"
],
"ghidra/libsgx_tsgxssl_crypto_a/bio_pk7.o": [
    "BIO_new_PKCS7"
],
"ghidra/libsgx_tsgxssl_crypto_a/blake2b.o": [
    "blake2b_compress",
    "BLAKE2b_Init",
    "BLAKE2b_Update",
    "BLAKE2b_Final"
],
"ghidra/libsgx_tsgxssl_crypto_a/blake2s.o": [
    "blake2s_compress",
    "BLAKE2s_Init",
    "BLAKE2s_Update",
    "BLAKE2s_Final"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_add.o": [
    "BN_uadd",
    "BN_usub",
    "BN_add",
    "BN_sub"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_blind.o": [
    "BN_BLINDING_free",
    "BN_BLINDING_invert_ex",
    "BN_BLINDING_invert",
    "BN_BLINDING_is_current_thread",
    "BN_BLINDING_set_current_thread",
    "BN_BLINDING_new",
    "BN_BLINDING_lock",
    "BN_BLINDING_unlock",
    "BN_BLINDING_get_flags",
    "BN_BLINDING_set_flags",
    "BN_BLINDING_create_param",
    "BN_BLINDING_update",
    "BN_BLINDING_convert_ex",
    "BN_BLINDING_convert"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_const.o": [
    "BN_get_rfc2409_prime_768",
    "BN_get_rfc2409_prime_1024",
    "BN_get_rfc3526_prime_1536",
    "BN_get_rfc3526_prime_2048",
    "BN_get_rfc3526_prime_3072",
    "BN_get_rfc3526_prime_4096",
    "BN_get_rfc3526_prime_6144",
    "BN_get_rfc3526_prime_8192"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_ctx.o": [
    "BN_CTX_new",
    "BN_CTX_secure_new",
    "BN_CTX_free",
    "BN_CTX_start",
    "BN_CTX_end",
    "BN_CTX_get"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_depr.o": [
    "BN_generate_prime",
    "BN_is_prime",
    "BN_is_prime_fasttest"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_dh.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/bn_div.o": [
    "bn_div_fixed_top",
    "BN_div"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_err.o": [
    "ERR_load_BN_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_exp2.o": [
    "BN_mod_exp2_mont"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_exp.o": [
    "MOD_EXP_CTIME_COPY_FROM_PREBUF",
    "BN_mod_exp_recp.part.0",
    "BN_exp",
    "BN_mod_exp_recp",
    "BN_mod_exp_mont_consttime",
    "BN_mod_exp_mont",
    "BN_mod_exp_mont_word",
    "BN_mod_exp",
    "BN_mod_exp_simple"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_gcd.o": [
    "int_bn_mod_inverse",
    "BN_mod_inverse",
    "BN_gcd"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_gf2m.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/bn_intern.o": [
    "bn_compute_wNAF",
    "bn_get_top",
    "bn_get_dmax",
    "bn_set_all_zero",
    "bn_copy_words",
    "bn_get_words",
    "bn_set_static_words",
    "bn_set_words"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_kron.o": [
    "BN_kronecker"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_lib.o": [
    "BN_set_params",
    "BN_get_params",
    "BN_value_one",
    "BN_num_bits_word",
    "bn_init",
    "BN_new",
    "BN_secure_new",
    "BN_swap",
    "BN_clear",
    "BN_get_word",
    "BN_ucmp",
    "BN_cmp",
    "BN_is_bit_set",
    "bn_cmp_words",
    "bn_cmp_part_words",
    "BN_consttime_swap",
    "BN_security_bits",
    "BN_zero_ex",
    "BN_abs_is_word",
    "BN_is_zero",
    "BN_num_bits",
    "BN_bn2bin",
    "BN_set_negative",
    "BN_is_one",
    "BN_is_word",
    "BN_is_odd",
    "BN_is_negative",
    "BN_to_montgomery",
    "BN_with_flags",
    "BN_GENCB_new",
    "BN_GENCB_free",
    "BN_set_flags",
    "BN_get_flags",
    "BN_clear_free",
    "bn_expand2",
    "BN_set_word",
    "BN_free",
    "BN_GENCB_set_old",
    "BN_GENCB_set",
    "BN_GENCB_get_arg",
    "bn_wexpand",
    "BN_copy",
    "BN_dup",
    "BN_set_bit",
    "bn_correct_top",
    "BN_bin2bn",
    "BN_lebin2bn",
    "BN_clear_bit",
    "BN_mask_bits",
    "BN_bn2binpad",
    "BN_bn2lebinpad"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_mod.o": [
    "BN_nnmod",
    "BN_mod_add",
    "bn_mod_add_fixed_top",
    "BN_mod_add_quick",
    "BN_mod_sub",
    "bn_mod_sub_fixed_top",
    "BN_mod_sub_quick",
    "BN_mod_mul",
    "BN_mod_sqr",
    "BN_mod_lshift1",
    "BN_mod_lshift1_quick",
    "BN_mod_lshift_quick",
    "BN_mod_lshift"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_mont.o": [
    "bn_from_montgomery_word",
    "bn_mul_mont_fixed_top",
    "BN_mod_mul_montgomery",
    "bn_from_mont_fixed_top",
    "BN_from_montgomery",
    "bn_to_mont_fixed_top",
    "BN_MONT_CTX_init",
    "BN_MONT_CTX_new",
    "BN_MONT_CTX_free",
    "BN_MONT_CTX_set",
    "BN_MONT_CTX_copy",
    "BN_MONT_CTX_set_locked"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_mpi.o": [
    "BN_bn2mpi",
    "BN_mpi2bn"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_mul.o": [
    "bn_sub_part_words",
    "bn_mul_normal",
    "bn_mul_recursive",
    "bn_mul_part_recursive",
    "bn_mul_fixed_top",
    "BN_mul",
    "bn_mul_low_normal",
    "bn_mul_low_recursive"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_nist.o": [
    "BN_nist_mod_192",
    "BN_nist_mod_224",
    "BN_nist_mod_256",
    "BN_nist_mod_384",
    "BN_nist_mod_521",
    "BN_get0_nist_prime_192",
    "BN_get0_nist_prime_224",
    "BN_get0_nist_prime_256",
    "BN_get0_nist_prime_384",
    "BN_get0_nist_prime_521",
    "BN_nist_mod_func"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_prime.o": [
    "BN_GENCB_call",
    "BN_is_prime_fasttest_ex",
    "BN_generate_prime_ex",
    "BN_is_prime_ex"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_print.o": [
    "BN_bn2hex",
    "BN_bn2dec",
    "BN_hex2bn",
    "BN_dec2bn",
    "BN_asc2bn",
    "BN_print",
    "BN_options"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_rand.o": [
    "bnrand.part.0",
    "bnrand_range.part.0",
    "BN_rand",
    "BN_bntest_rand",
    "BN_priv_rand",
    "BN_rand_range",
    "BN_priv_rand_range",
    "BN_generate_dsa_nonce"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_recp.o": [
    "BN_RECP_CTX_init",
    "BN_RECP_CTX_new",
    "BN_RECP_CTX_free",
    "BN_RECP_CTX_set",
    "BN_reciprocal",
    "BN_div_recp",
    "BN_mod_mul_reciprocal"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_shift.o": [
    "BN_lshift1",
    "BN_rshift1",
    "bn_lshift_fixed_top",
    "BN_lshift",
    "bn_rshift_fixed_top",
    "BN_rshift"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_sqr.o": [
    "bn_sqr_normal",
    "bn_sqr_recursive",
    "bn_sqr_fixed_top",
    "BN_sqr"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_sqrt.o": [
    "BN_mod_sqrt"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_srp.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/bn_word.o": [
    "BN_div_word",
    "BN_mod_word",
    "BN_sub_word",
    "BN_add_word",
    "BN_mul_word"
],
"ghidra/libsgx_tsgxssl_crypto_a/bn_x931p.o": [
    "bn_x931_derive_pi",
    "BN_X931_derive_prime_ex",
    "BN_X931_generate_Xpq",
    "BN_X931_generate_prime_ex"
],
"ghidra/libsgx_tsgxssl_crypto_a/b_print.o": [
    "doapr_outch",
    "fmtint",
    "fmtfp",
    "_dopr",
    "BIO_vprintf",
    "BIO_printf",
    "BIO_vsnprintf",
    "BIO_snprintf"
],
"ghidra/libsgx_tsgxssl_crypto_a/b_sock2.o": [
    "BIO_socket",
    "BIO_connect",
    "BIO_bind",
    "BIO_listen",
    "BIO_accept_ex",
    "BIO_closesocket"
],
"ghidra/libsgx_tsgxssl_crypto_a/b_sock.o": [
    "BIO_sock_error",
    "BIO_sock_init",
    "BIO_get_host_ip",
    "BIO_get_port",
    "bio_sock_cleanup_int",
    "BIO_socket_ioctl",
    "BIO_get_accept_socket",
    "BIO_accept",
    "BIO_set_tcp_ndelay",
    "BIO_socket_nbio",
    "BIO_sock_info"
],
"ghidra/libsgx_tsgxssl_crypto_a/bss_acpt.o": [
    "acpt_new",
    "acpt_state",
    "acpt_read",
    "acpt_write",
    "acpt_ctrl",
    "acpt_free",
    "acpt_puts",
    "BIO_s_accept",
    "BIO_new_accept"
],
"ghidra/libsgx_tsgxssl_crypto_a/bss_bio.o": [
    "bio_free",
    "bio_new",
    "bio_read",
    "bio_write",
    "bio_puts",
    "bio_nwrite0",
    "bio_ctrl",
    "BIO_s_bio",
    "BIO_new_bio_pair",
    "BIO_ctrl_get_write_guarantee",
    "BIO_ctrl_get_read_request",
    "BIO_ctrl_reset_read_request",
    "BIO_nread0",
    "BIO_nread",
    "BIO_nwrite0",
    "BIO_nwrite"
],
"ghidra/libsgx_tsgxssl_crypto_a/bss_conn.o": [
    "conn_callback_ctrl",
    "conn_state",
    "conn_write",
    "conn_ctrl",
    "conn_read",
    "conn_puts",
    "BIO_CONNECT_new",
    "conn_new",
    "BIO_CONNECT_free",
    "conn_free",
    "BIO_s_connect",
    "BIO_new_connect"
],
"ghidra/libsgx_tsgxssl_crypto_a/bss_dgram.o": [
    "dgram_new",
    "dgram_free",
    "dgram_ctrl",
    "BIO_s_datagram",
    "BIO_new_dgram",
    "BIO_dgram_non_fatal_error",
    "dgram_read",
    "dgram_write",
    "dgram_puts"
],
"ghidra/libsgx_tsgxssl_crypto_a/bss_fd.o": [
    "fd_new",
    "fd_ctrl",
    "fd_free",
    "BIO_s_fd",
    "BIO_new_fd",
    "BIO_fd_non_fatal_error",
    "BIO_fd_should_retry",
    "fd_read",
    "fd_write",
    "fd_puts",
    "fd_gets",
    "fd_gets.cold"
],
"ghidra/libsgx_tsgxssl_crypto_a/bss_file.o": [
    "file_write",
    "file_puts",
    "file_gets",
    "file_ctrl",
    "file_new",
    "file_free",
    "file_read",
    "BIO_s_file",
    "BIO_new_file"
],
"ghidra/libsgx_tsgxssl_crypto_a/bss_log.o": [
    "slg_free",
    "slg_new",
    "slg_ctrl",
    "slg_write",
    "slg_puts",
    "BIO_s_log"
],
"ghidra/libsgx_tsgxssl_crypto_a/bss_mem.o": [
    "mem_new",
    "mem_read",
    "mem_gets",
    "mem_free",
    "mem_ctrl",
    "secmem_new",
    "mem_write",
    "mem_puts",
    "BIO_s_mem",
    "BIO_s_secmem",
    "BIO_new_mem_buf"
],
"ghidra/libsgx_tsgxssl_crypto_a/bss_null.o": [
    "null_read",
    "null_write",
    "null_ctrl",
    "null_puts",
    "null_gets",
    "BIO_s_null"
],
"ghidra/libsgx_tsgxssl_crypto_a/bss_sock.o": [
    "sock_new",
    "sock_ctrl",
    "sock_free",
    "BIO_s_socket",
    "BIO_new_socket",
    "BIO_sock_non_fatal_error",
    "BIO_sock_should_retry",
    "sock_read",
    "sock_write",
    "sock_puts"
],
"ghidra/libsgx_tsgxssl_crypto_a/buf_err.o": [
    "ERR_load_BUF_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/buffer.o": [
    "BUF_MEM_new",
    "BUF_MEM_new_ex",
    "BUF_MEM_free",
    "BUF_MEM_grow",
    "BUF_MEM_grow_clean",
    "BUF_reverse"
],
"ghidra/libsgx_tsgxssl_crypto_a/by_dir.o": [
    "by_dir_hash_cmp",
    "by_dir_hash_free",
    "get_cert_by_subject",
    "by_dir_entry_free",
    "free_dir",
    "new_dir",
    "add_cert_dir.isra.0",
    "dir_ctrl",
    "X509_LOOKUP_hash_dir"
],
"ghidra/libsgx_tsgxssl_crypto_a/by_file.o": [
    "X509_LOOKUP_file",
    "X509_load_cert_file",
    "X509_load_crl_file",
    "X509_load_cert_crl_file",
    "by_file_ctrl"
],
"ghidra/libsgx_tsgxssl_crypto_a/c_allc.o": [
    "openssl_add_all_ciphers_int"
],
"ghidra/libsgx_tsgxssl_crypto_a/c_alld.o": [
    "openssl_add_all_digests_int"
],
"ghidra/libsgx_tsgxssl_crypto_a/cbc128.o": [
    "CRYPTO_cbc128_encrypt",
    "CRYPTO_cbc128_decrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/cbc_cksm.o": [
    "DES_cbc_cksum"
],
"ghidra/libsgx_tsgxssl_crypto_a/cbc_enc.o": [
    "DES_cbc_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/ccm128.o": [
    "CRYPTO_ccm128_init",
    "CRYPTO_ccm128_setiv",
    "CRYPTO_ccm128_aad",
    "CRYPTO_ccm128_encrypt",
    "CRYPTO_ccm128_decrypt",
    "CRYPTO_ccm128_encrypt_ccm64",
    "CRYPTO_ccm128_decrypt_ccm64",
    "CRYPTO_ccm128_tag"
],
"ghidra/libsgx_tsgxssl_crypto_a/cfb128.o": [
    "CRYPTO_cfb128_encrypt",
    "CRYPTO_cfb128_1_encrypt",
    "CRYPTO_cfb128_8_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/cfb64ede.o": [
    "DES_ede3_cfb64_encrypt",
    "DES_ede3_cfb_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/cfb64enc.o": [
    "DES_cfb64_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/cfb_enc.o": [
    "DES_cfb_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/chacha-x86_64.o": [
    "ChaCha20_ctr32",
    "ChaCha20_ssse3",
    "ChaCha20_128",
    "ChaCha20_4x",
    "ChaCha20_4xop",
    "ChaCha20_8x",
    "ChaCha20_avx512",
    "ChaCha20_avx512vl",
    "ChaCha20_16x",
    "ChaCha20_8xvl"
],
"ghidra/libsgx_tsgxssl_crypto_a/cmac.o": [
    "CMAC_CTX_new",
    "CMAC_CTX_cleanup",
    "CMAC_CTX_get0_cipher_ctx",
    "CMAC_CTX_free",
    "CMAC_CTX_copy",
    "CMAC_Init",
    "CMAC_Update",
    "CMAC_Final",
    "CMAC_resume"
],
"ghidra/libsgx_tsgxssl_crypto_a/cm_ameth.o": [
    "cmac_size",
    "cmac_key_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/cmeth_lib.o": [
    "EVP_CIPHER_meth_new",
    "EVP_CIPHER_meth_dup",
    "EVP_CIPHER_meth_free",
    "EVP_CIPHER_meth_set_iv_length",
    "EVP_CIPHER_meth_set_flags",
    "EVP_CIPHER_meth_set_impl_ctx_size",
    "EVP_CIPHER_meth_set_init",
    "EVP_CIPHER_meth_set_do_cipher",
    "EVP_CIPHER_meth_set_cleanup",
    "EVP_CIPHER_meth_set_set_asn1_params",
    "EVP_CIPHER_meth_set_get_asn1_params",
    "EVP_CIPHER_meth_set_ctrl",
    "EVP_CIPHER_meth_get_init",
    "EVP_CIPHER_meth_get_do_cipher",
    "EVP_CIPHER_meth_get_cleanup",
    "EVP_CIPHER_meth_get_set_asn1_params",
    "EVP_CIPHER_meth_get_get_asn1_params",
    "EVP_CIPHER_meth_get_ctrl"
],
"ghidra/libsgx_tsgxssl_crypto_a/cm_pmeth.o": [
    "pkey_cmac_ctrl",
    "cmac_signctx",
    "cmac_signctx_init",
    "int_update",
    "pkey_cmac_init",
    "pkey_cmac_copy",
    "pkey_cmac_cleanup",
    "pkey_cmac_keygen",
    "pkey_cmac_ctrl_str"
],
"ghidra/libsgx_tsgxssl_crypto_a/cms_asn1.o": [
    "cms_rek_cb",
    "cms_kari_cb",
    "cms_cb",
    "cms_si_cb",
    "cms_ri_cb",
    "CMS_SharedInfo_encode"
],
"ghidra/libsgx_tsgxssl_crypto_a/cms_att.o": [
    "CMS_signed_get_attr_count",
    "CMS_signed_get_attr_by_NID",
    "CMS_signed_get_attr_by_OBJ",
    "CMS_signed_get_attr",
    "CMS_signed_delete_attr",
    "CMS_signed_add1_attr",
    "CMS_signed_add1_attr_by_OBJ",
    "CMS_signed_add1_attr_by_NID",
    "CMS_signed_add1_attr_by_txt",
    "CMS_signed_get0_data_by_OBJ",
    "CMS_unsigned_get_attr_count",
    "CMS_unsigned_get_attr_by_NID",
    "CMS_unsigned_get_attr_by_OBJ",
    "CMS_unsigned_get_attr",
    "CMS_unsigned_delete_attr",
    "CMS_unsigned_add1_attr",
    "CMS_unsigned_add1_attr_by_OBJ",
    "CMS_unsigned_add1_attr_by_NID",
    "CMS_unsigned_add1_attr_by_txt",
    "CMS_unsigned_get0_data_by_OBJ",
    "CMS_si_check_attributes"
],
"ghidra/libsgx_tsgxssl_crypto_a/cms_cd.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/cms_dd.o": [
    "cms_DigestedData_create",
    "cms_DigestedData_init_bio",
    "cms_DigestedData_do_final"
],
"ghidra/libsgx_tsgxssl_crypto_a/cms_enc.o": [
    "cms_EncryptedContent_init_bio",
    "cms_EncryptedContent_init",
    "CMS_EncryptedData_set1_key",
    "cms_EncryptedData_init_bio"
],
"ghidra/libsgx_tsgxssl_crypto_a/cms_env.o": [
    "cms_get0_enveloped",
    "cms_env_asn1_ctrl",
    "CMS_get0_RecipientInfos",
    "CMS_RecipientInfo_type",
    "CMS_RecipientInfo_get0_pkey_ctx",
    "CMS_EnvelopedData_create",
    "CMS_RecipientInfo_ktri_get0_algs",
    "CMS_RecipientInfo_ktri_get0_signer_id",
    "CMS_RecipientInfo_ktri_cert_cmp",
    "CMS_RecipientInfo_set0_pkey",
    "CMS_RecipientInfo_kekri_id_cmp",
    "CMS_add0_recipient_key",
    "CMS_RecipientInfo_kekri_get0_id",
    "CMS_RecipientInfo_set0_key",
    "CMS_RecipientInfo_decrypt",
    "CMS_RecipientInfo_encrypt",
    "cms_EnvelopedData_init_bio",
    "cms_pkey_get_ri_type",
    "CMS_add1_recipient_cert"
],
"ghidra/libsgx_tsgxssl_crypto_a/cms_err.o": [
    "ERR_load_CMS_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/cms_ess.o": [
    "d2i_CMS_ReceiptRequest",
    "i2d_CMS_ReceiptRequest",
    "CMS_ReceiptRequest_new",
    "CMS_ReceiptRequest_free",
    "CMS_get1_ReceiptRequest",
    "CMS_ReceiptRequest_create0",
    "CMS_add1_ReceiptRequest",
    "CMS_ReceiptRequest_get0_values",
    "cms_msgSigDigest_add1",
    "cms_Receipt_verify",
    "cms_encode_Receipt"
],
"ghidra/libsgx_tsgxssl_crypto_a/cms_io.o": [
    "CMS_stream",
    "d2i_CMS_bio",
    "i2d_CMS_bio",
    "PEM_read_bio_CMS",
    "PEM_write_bio_CMS",
    "BIO_new_CMS",
    "i2d_CMS_bio_stream",
    "PEM_write_bio_CMS_stream",
    "SMIME_write_CMS",
    "SMIME_read_CMS"
],
"ghidra/libsgx_tsgxssl_crypto_a/cms_kari.o": [
    "cms_kek_cipher.isra.0",
    "CMS_RecipientInfo_kari_get0_alg",
    "CMS_RecipientInfo_kari_get0_reks",
    "CMS_RecipientInfo_kari_get0_orig_id",
    "CMS_RecipientInfo_kari_orig_id_cmp",
    "CMS_RecipientEncryptedKey_get0_id",
    "CMS_RecipientEncryptedKey_cert_cmp",
    "CMS_RecipientInfo_kari_set0_pkey",
    "CMS_RecipientInfo_kari_get0_ctx",
    "CMS_RecipientInfo_kari_decrypt",
    "cms_RecipientInfo_kari_init",
    "cms_RecipientInfo_kari_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/cms_lib.o": [
    "d2i_CMS_ContentInfo",
    "i2d_CMS_ContentInfo",
    "CMS_ContentInfo_new",
    "CMS_ContentInfo_free",
    "CMS_ContentInfo_print_ctx",
    "CMS_get0_type",
    "CMS_get0_content",
    "cms_content_bio",
    "CMS_dataInit",
    "CMS_dataFinal",
    "CMS_get0_eContentType",
    "CMS_set1_eContentType",
    "CMS_is_detached",
    "CMS_set_detached",
    "cms_Data_create",
    "cms_DigestAlgorithm_init_bio",
    "cms_DigestAlgorithm_find_ctx",
    "CMS_add0_CertificateChoices",
    "CMS_add0_cert",
    "CMS_add1_cert",
    "CMS_add0_RevocationInfoChoice",
    "CMS_add0_crl",
    "CMS_add1_crl",
    "CMS_get1_certs",
    "CMS_get1_crls",
    "cms_ias_cert_cmp",
    "cms_keyid_cert_cmp",
    "cms_set1_ias",
    "cms_set1_keyid"
],
"ghidra/libsgx_tsgxssl_crypto_a/cms_pwri.o": [
    "CMS_RecipientInfo_set0_password",
    "CMS_add0_recipient_password",
    "cms_RecipientInfo_pwri_crypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/cms_sd.o": [
    "CMS_SignedData_init",
    "cms_set1_SignerIdentifier",
    "cms_SignerIdentifier_get0_signer_id",
    "cms_SignerIdentifier_cert_cmp",
    "CMS_SignerInfo_get0_pkey_ctx",
    "CMS_SignerInfo_get0_md_ctx",
    "CMS_get0_SignerInfos",
    "CMS_get0_signers",
    "CMS_SignerInfo_set1_signer_cert",
    "CMS_SignerInfo_get0_signer_id",
    "CMS_SignerInfo_cert_cmp",
    "CMS_set1_signers_certs",
    "CMS_SignerInfo_get0_algs",
    "CMS_SignerInfo_get0_signature",
    "CMS_SignerInfo_sign",
    "cms_SignedData_final",
    "CMS_SignerInfo_verify",
    "cms_SignedData_init_bio",
    "CMS_SignerInfo_verify_content",
    "CMS_add_smimecap",
    "CMS_add_simple_smimecap",
    "CMS_add_standard_smimecap",
    "CMS_add1_signer"
],
"ghidra/libsgx_tsgxssl_crypto_a/cms_smime.o": [
    "cms_copy_content",
    "CMS_data",
    "CMS_digest_verify",
    "CMS_EncryptedData_decrypt",
    "CMS_verify",
    "CMS_verify_receipt",
    "CMS_decrypt_set1_pkey",
    "CMS_decrypt_set1_key",
    "CMS_decrypt_set1_password",
    "CMS_decrypt",
    "CMS_final",
    "CMS_data_create",
    "CMS_digest_create",
    "CMS_EncryptedData_encrypt",
    "CMS_sign",
    "CMS_sign_receipt",
    "CMS_encrypt",
    "CMS_uncompress",
    "CMS_compress"
],
"ghidra/libsgx_tsgxssl_crypto_a/comp_err.o": [
    "ERR_load_COMP_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/comp_lib.o": [
    "COMP_CTX_new",
    "COMP_CTX_get_method",
    "COMP_get_type",
    "COMP_get_name",
    "COMP_CTX_free",
    "COMP_compress_block",
    "COMP_expand_block",
    "COMP_CTX_get_type"
],
"ghidra/libsgx_tsgxssl_crypto_a/conf_api.o": [
    "conf_value_cmp",
    "conf_value_hash",
    "value_free_hash",
    "value_free_stack_doall",
    "_CONF_get_section",
    "_CONF_get_section_values",
    "_CONF_add_string",
    "_CONF_get_string",
    "_CONF_new_data",
    "_CONF_free_data",
    "_CONF_new_section"
],
"ghidra/libsgx_tsgxssl_crypto_a/conf_def.o": [
    "def_init_default",
    "def_init_WIN32",
    "def_is_number",
    "def_to_int",
    "def_dump",
    "def_create",
    "get_next_file",
    "str_copy",
    "def_destroy_data",
    "dump_value_doall_arg",
    "def_destroy",
    "def_load_bio",
    "def_load",
    "NCONF_default",
    "NCONF_WIN32"
],
"ghidra/libsgx_tsgxssl_crypto_a/conf_err.o": [
    "ERR_load_CONF_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/conf_lib.o": [
    "default_to_int",
    "default_is_number",
    "CONF_set_nconf",
    "CONF_set_default_method",
    "NCONF_new",
    "NCONF_free",
    "NCONF_free_data",
    "CONF_free",
    "NCONF_load",
    "NCONF_load_bio",
    "CONF_load_bio",
    "CONF_load",
    "NCONF_get_section",
    "CONF_get_section",
    "NCONF_get_string",
    "CONF_get_string",
    "NCONF_get_number_e",
    "CONF_get_number",
    "NCONF_dump_bio",
    "CONF_dump_bio",
    "OPENSSL_INIT_new",
    "OPENSSL_INIT_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/conf_mall.o": [
    "OPENSSL_load_builtin_modules"
],
"ghidra/libsgx_tsgxssl_crypto_a/conf_mod.o": [
    "CONF_modules_load",
    "CONF_modules_finish",
    "CONF_modules_unload",
    "CONF_module_add",
    "conf_modules_free_int",
    "CONF_imodule_get_name",
    "CONF_imodule_get_value",
    "CONF_imodule_get_usr_data",
    "CONF_imodule_set_usr_data",
    "CONF_imodule_get_module",
    "CONF_imodule_get_flags",
    "CONF_imodule_set_flags",
    "CONF_module_get_usr_data",
    "CONF_module_set_usr_data",
    "CONF_get1_default_config_file",
    "CONF_modules_load_file",
    "CONF_parse_list"
],
"ghidra/libsgx_tsgxssl_crypto_a/conf_sap.o": [
    "OPENSSL_config",
    "openssl_config_int",
    "openssl_no_config_int"
],
"ghidra/libsgx_tsgxssl_crypto_a/conf_ssl.o": [
    "ssl_module_free.part.0",
    "ssl_module_free",
    "ssl_module_init",
    "conf_ssl_get",
    "conf_ssl_name_find",
    "conf_ssl_get_cmd",
    "conf_add_ssl_module"
],
"ghidra/libsgx_tsgxssl_crypto_a/cpt_err.o": [
    "ERR_load_CRYPTO_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/cryptlib.o": [
    "OPENSSL_cpuid_setup",
    "OPENSSL_showfatal",
    "OPENSSL_isservice",
    "OPENSSL_die"
],
"ghidra/libsgx_tsgxssl_crypto_a/ct_b64.o": [
    "ct_base64_decode",
    "SCT_new_from_base64",
    "CTLOG_new_from_base64"
],
"ghidra/libsgx_tsgxssl_crypto_a/ct_err.o": [
    "ERR_load_CT_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/ct_log.o": [
    "CTLOG_free",
    "ctlog_store_load_log",
    "CTLOG_STORE_new",
    "CTLOG_STORE_free",
    "CTLOG_STORE_load_file",
    "CTLOG_STORE_load_default_file",
    "CTLOG_new",
    "CTLOG_get0_name",
    "CTLOG_get0_log_id",
    "CTLOG_get0_public_key",
    "CTLOG_STORE_get0_log_by_id"
],
"ghidra/libsgx_tsgxssl_crypto_a/ct_oct.o": [
    "o2i_SCT_signature",
    "o2i_SCT",
    "i2o_SCT_signature",
    "i2o_SCT",
    "o2i_SCT_LIST",
    "i2o_SCT_LIST",
    "d2i_SCT_LIST",
    "i2d_SCT_LIST"
],
"ghidra/libsgx_tsgxssl_crypto_a/ct_policy.o": [
    "CT_POLICY_EVAL_CTX_new",
    "CT_POLICY_EVAL_CTX_free",
    "CT_POLICY_EVAL_CTX_set1_cert",
    "CT_POLICY_EVAL_CTX_set1_issuer",
    "CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE",
    "CT_POLICY_EVAL_CTX_set_time",
    "CT_POLICY_EVAL_CTX_get0_cert",
    "CT_POLICY_EVAL_CTX_get0_issuer",
    "CT_POLICY_EVAL_CTX_get0_log_store",
    "CT_POLICY_EVAL_CTX_get_time"
],
"ghidra/libsgx_tsgxssl_crypto_a/ct_prn.o": [
    "SCT_validation_status_string",
    "SCT_print",
    "SCT_LIST_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/ctr128.o": [
    "CRYPTO_ctr128_encrypt",
    "CRYPTO_ctr128_encrypt_ctr32"
],
"ghidra/libsgx_tsgxssl_crypto_a/cts128.o": [
    "CRYPTO_cts128_encrypt_block",
    "CRYPTO_nistcts128_encrypt_block",
    "CRYPTO_cts128_encrypt",
    "CRYPTO_nistcts128_encrypt",
    "CRYPTO_cts128_decrypt_block",
    "CRYPTO_nistcts128_decrypt_block",
    "CRYPTO_cts128_decrypt",
    "CRYPTO_nistcts128_decrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/ct_sct_ctx.o": [
    "SCT_CTX_new",
    "SCT_CTX_free",
    "SCT_CTX_set1_cert",
    "SCT_CTX_set1_issuer_pubkey",
    "SCT_CTX_set1_issuer",
    "SCT_CTX_set1_pubkey",
    "SCT_CTX_set_time"
],
"ghidra/libsgx_tsgxssl_crypto_a/ct_sct.o": [
    "SCT_free",
    "SCT_new",
    "SCT_LIST_free",
    "SCT_set_version",
    "SCT_set_log_entry_type",
    "SCT_set0_log_id",
    "SCT_set1_log_id",
    "SCT_set_timestamp",
    "SCT_set_signature_nid",
    "SCT_set0_extensions",
    "SCT_set1_extensions",
    "SCT_set0_signature",
    "SCT_set1_signature",
    "SCT_get_version",
    "SCT_get_log_entry_type",
    "SCT_get0_log_id",
    "SCT_get_timestamp",
    "SCT_get_signature_nid",
    "SCT_get0_extensions",
    "SCT_get0_signature",
    "SCT_signature_is_complete",
    "SCT_is_complete",
    "SCT_get_source",
    "SCT_set_source",
    "SCT_get_validation_status",
    "SCT_validate",
    "SCT_LIST_validate"
],
"ghidra/libsgx_tsgxssl_crypto_a/ct_vfy.o": [
    "SCT_CTX_verify"
],
"ghidra/libsgx_tsgxssl_crypto_a/ct_x509v3.o": [
    "i2s_poison",
    "i2r_SCT_LIST",
    "x509_ext_d2i_SCT_LIST",
    "ocsp_ext_d2i_SCT_LIST"
],
"ghidra/libsgx_tsgxssl_crypto_a/ctype.o": [
    "ossl_ctype_check",
    "ossl_tolower",
    "ossl_toupper",
    "ascii_isdigit"
],
"ghidra/libsgx_tsgxssl_crypto_a/curve25519.o": [
    "fe_tobytes",
    "fe_mul",
    "fe_sq",
    "fe_invert",
    "ge_p2_dbl",
    "ge_madd",
    "ge_add",
    "cmov",
    "slide",
    "x25519_sc_reduce",
    "table_select",
    "x25519_scalar_mult",
    "ge_scalarmult_base",
    "ED25519_sign",
    "ED25519_verify",
    "ED25519_public_from_private",
    "X25519",
    "X25519_public_from_private"
],
"ghidra/libsgx_tsgxssl_crypto_a/curve448.o": [
    "recode_wnaf",
    "point_double_internal.constprop.0",
    "add_niels_to_pt",
    "sub_niels_from_pt",
    "curve448_point_eq",
    "curve448_point_valid",
    "curve448_precomputed_scalarmul",
    "curve448_point_decode_like_eddsa_and_mul_by_ratio",
    "x448_int",
    "curve448_point_destroy",
    "curve448_point_mul_by_ratio_and_encode_like_eddsa",
    "curve448_point_mul_by_ratio_and_encode_like_x448",
    "x448_derive_public_key",
    "curve448_base_double_scalarmul_non_secret",
    "X448"
],
"ghidra/libsgx_tsgxssl_crypto_a/curve448_tables.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/cversion.o": [
    "OpenSSL_version_num",
    "OpenSSL_version"
],
"ghidra/libsgx_tsgxssl_crypto_a/c_zlib.o": [
    "COMP_zlib",
    "comp_zlib_cleanup_int"
],
"ghidra/libsgx_tsgxssl_crypto_a/d2i_pr.o": [
    "d2i_PrivateKey",
    "d2i_AutoPrivateKey"
],
"ghidra/libsgx_tsgxssl_crypto_a/d2i_pu.o": [
    "d2i_PublicKey"
],
"ghidra/libsgx_tsgxssl_crypto_a/des_enc.o": [
    "DES_encrypt1",
    "DES_encrypt2",
    "DES_encrypt3",
    "DES_decrypt3",
    "DES_ncbc_encrypt",
    "DES_ede3_cbc_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/dh_ameth.o": [
    "dh_missing_parameters",
    "int_dh_free",
    "dh_bits",
    "dh_private_print",
    "dh_pkey_param_check",
    "dh_security_bits",
    "int_dh_size",
    "dh_pkey_public_check",
    "dh_cmp_parameters",
    "dh_priv_encode",
    "dh_priv_decode",
    "dh_param_encode",
    "dh_pub_encode",
    "dh_param_decode",
    "dh_pub_decode",
    "dh_pub_cmp",
    "dh_copy_parameters",
    "dh_public_print",
    "dh_param_print",
    "DHparams_dup",
    "dh_pkey_ctrl",
    "DHparams_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/dh_asn1.o": [
    "dh_cb",
    "d2i_DHparams",
    "i2d_DHparams",
    "d2i_int_dhx",
    "i2d_int_dhx",
    "d2i_DHxparams",
    "i2d_DHxparams"
],
"ghidra/libsgx_tsgxssl_crypto_a/dh_check.o": [
    "DH_check_params",
    "DH_check_params_ex",
    "DH_check",
    "DH_check_ex",
    "DH_check_pub_key",
    "DH_check_pub_key_ex"
],
"ghidra/libsgx_tsgxssl_crypto_a/dh_depr.o": [
    "DH_generate_parameters"
],
"ghidra/libsgx_tsgxssl_crypto_a/dh_err.o": [
    "ERR_load_DH_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/dh_gen.o": [
    "DH_generate_parameters_ex"
],
"ghidra/libsgx_tsgxssl_crypto_a/dh_kdf.o": [
    "DH_KDF_X9_42"
],
"ghidra/libsgx_tsgxssl_crypto_a/dh_key.o": [
    "dh_init",
    "dh_finish",
    "dh_bn_mod_exp",
    "compute_key",
    "generate_key",
    "DH_generate_key",
    "DH_compute_key",
    "DH_compute_key_padded",
    "DH_OpenSSL",
    "DH_set_default_method",
    "DH_get_default_method"
],
"ghidra/libsgx_tsgxssl_crypto_a/dh_lib.o": [
    "DH_set_method",
    "DH_free",
    "DH_new_method",
    "DH_new",
    "DH_up_ref",
    "DH_set_ex_data",
    "DH_get_ex_data",
    "DH_bits",
    "DH_size",
    "DH_security_bits",
    "DH_get0_pqg",
    "DH_set0_pqg",
    "DH_get_length",
    "DH_set_length",
    "DH_get0_key",
    "DH_set0_key",
    "DH_get0_p",
    "DH_get0_q",
    "DH_get0_g",
    "DH_get0_priv_key",
    "DH_get0_pub_key",
    "DH_clear_flags",
    "DH_test_flags",
    "DH_set_flags",
    "DH_get0_engine"
],
"ghidra/libsgx_tsgxssl_crypto_a/dh_meth.o": [
    "DH_meth_new",
    "DH_meth_free",
    "DH_meth_dup",
    "DH_meth_get0_name",
    "DH_meth_set1_name",
    "DH_meth_get_flags",
    "DH_meth_set_flags",
    "DH_meth_get0_app_data",
    "DH_meth_set0_app_data",
    "DH_meth_get_generate_key",
    "DH_meth_set_generate_key",
    "DH_meth_get_compute_key",
    "DH_meth_set_compute_key",
    "DH_meth_get_bn_mod_exp",
    "DH_meth_set_bn_mod_exp",
    "DH_meth_get_init",
    "DH_meth_set_init",
    "DH_meth_get_finish",
    "DH_meth_set_finish",
    "DH_meth_get_generate_params",
    "DH_meth_set_generate_params"
],
"ghidra/libsgx_tsgxssl_crypto_a/dh_pmeth.o": [
    "pkey_dh_ctrl",
    "pkey_dh_cleanup",
    "pkey_dh_derive",
    "pkey_dh_paramgen",
    "pkey_dh_ctrl_str",
    "pkey_dh_keygen",
    "pkey_dh_init",
    "pkey_dh_copy"
],
"ghidra/libsgx_tsgxssl_crypto_a/dh_prn.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/dh_rfc5114.o": [
    "DH_get_1024_160",
    "DH_get_2048_224",
    "DH_get_2048_256"
],
"ghidra/libsgx_tsgxssl_crypto_a/dh_rfc7919.o": [
    "DH_new_by_nid",
    "DH_get_nid"
],
"ghidra/libsgx_tsgxssl_crypto_a/digest.o": [
    "EVP_MD_CTX_reset",
    "EVP_MD_CTX_new",
    "EVP_MD_CTX_free",
    "EVP_DigestInit_ex",
    "EVP_DigestInit",
    "EVP_DigestUpdate",
    "EVP_DigestFinal_ex",
    "EVP_DigestFinal",
    "EVP_DigestFinalXOF",
    "EVP_MD_CTX_copy_ex",
    "EVP_MD_CTX_copy",
    "EVP_Digest",
    "EVP_MD_CTX_ctrl"
],
"ghidra/libsgx_tsgxssl_crypto_a/drbg_ctr.o": [
    "drbg_ctr_uninstantiate",
    "ctr_BCC_update.part.0",
    "ctr_update",
    "drbg_ctr_reseed",
    "drbg_ctr_instantiate",
    "drbg_ctr_generate",
    "drbg_ctr_init"
],
"ghidra/libsgx_tsgxssl_crypto_a/drbg_lib.o": [
    "RAND_DRBG_set",
    "RAND_DRBG_set_defaults",
    "RAND_DRBG_free",
    "RAND_DRBG_instantiate",
    "RAND_DRBG_uninstantiate",
    "RAND_DRBG_reseed",
    "rand_drbg_restart",
    "RAND_DRBG_generate",
    "RAND_DRBG_bytes",
    "RAND_DRBG_set_callbacks",
    "RAND_DRBG_set_reseed_interval",
    "RAND_DRBG_set_reseed_time_interval",
    "RAND_DRBG_set_reseed_defaults",
    "rand_drbg_lock",
    "rand_drbg_unlock",
    "RAND_DRBG_secure_new",
    "RAND_DRBG_new",
    "rand_drbg_enable_locking",
    "do_rand_drbg_init_ossl_",
    "RAND_DRBG_set_ex_data",
    "RAND_DRBG_get_ex_data",
    "rand_drbg_cleanup_int",
    "drbg_delete_thread_state",
    "rand_drbg_seedlen",
    "RAND_DRBG_get0_master",
    "drbg_status",
    "drbg_add",
    "drbg_seed",
    "RAND_DRBG_get0_public",
    "drbg_bytes",
    "RAND_DRBG_get0_private",
    "RAND_OpenSSL"
],
"ghidra/libsgx_tsgxssl_crypto_a/dsa_ameth.o": [
    "dsa_missing_parameters",
    "old_dsa_priv_encode",
    "dsa_pkey_ctrl",
    "int_dsa_free",
    "dsa_sig_print",
    "dsa_priv_print",
    "dsa_cmp_parameters",
    "dsa_pub_cmp",
    "dsa_copy_parameters",
    "dsa_param_encode",
    "dsa_security_bits",
    "dsa_bits",
    "int_dsa_size",
    "dsa_priv_encode",
    "dsa_priv_decode",
    "dsa_pub_encode",
    "dsa_pub_decode",
    "old_dsa_priv_decode",
    "dsa_param_decode",
    "dsa_param_print",
    "dsa_pub_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/dsa_asn1.o": [
    "dsa_cb",
    "d2i_DSA_SIG",
    "i2d_DSA_SIG",
    "DSA_SIG_new",
    "DSA_SIG_free",
    "DSA_SIG_get0",
    "DSA_SIG_set0",
    "d2i_DSAPrivateKey",
    "i2d_DSAPrivateKey",
    "d2i_DSAparams",
    "i2d_DSAparams",
    "d2i_DSAPublicKey",
    "i2d_DSAPublicKey",
    "DSAparams_dup",
    "DSA_sign",
    "DSA_verify"
],
"ghidra/libsgx_tsgxssl_crypto_a/dsa_depr.o": [
    "DSA_generate_parameters"
],
"ghidra/libsgx_tsgxssl_crypto_a/dsa_err.o": [
    "ERR_load_DSA_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/dsa_gen.o": [
    "dsa_builtin_paramgen",
    "DSA_generate_parameters_ex",
    "dsa_builtin_paramgen2"
],
"ghidra/libsgx_tsgxssl_crypto_a/dsa_key.o": [
    "DSA_generate_key"
],
"ghidra/libsgx_tsgxssl_crypto_a/dsa_lib.o": [
    "DSA_set_method",
    "DSA_get_method",
    "DSA_free",
    "DSA_new_method",
    "DSA_new",
    "DSA_up_ref",
    "DSA_size",
    "DSA_set_ex_data",
    "DSA_get_ex_data",
    "DSA_security_bits",
    "DSA_dup_DH",
    "DSA_get0_pqg",
    "DSA_set0_pqg",
    "DSA_get0_key",
    "DSA_set0_key",
    "DSA_get0_p",
    "DSA_get0_q",
    "DSA_get0_g",
    "DSA_get0_pub_key",
    "DSA_get0_priv_key",
    "DSA_clear_flags",
    "DSA_test_flags",
    "DSA_set_flags",
    "DSA_get0_engine",
    "DSA_bits"
],
"ghidra/libsgx_tsgxssl_crypto_a/dsa_meth.o": [
    "DSA_meth_new",
    "DSA_meth_free",
    "DSA_meth_dup",
    "DSA_meth_get0_name",
    "DSA_meth_set1_name",
    "DSA_meth_get_flags",
    "DSA_meth_set_flags",
    "DSA_meth_get0_app_data",
    "DSA_meth_set0_app_data",
    "DSA_meth_get_sign",
    "DSA_meth_set_sign",
    "DSA_meth_get_sign_setup",
    "DSA_meth_set_sign_setup",
    "DSA_meth_get_verify",
    "DSA_meth_set_verify",
    "DSA_meth_get_mod_exp",
    "DSA_meth_set_mod_exp",
    "DSA_meth_get_bn_mod_exp",
    "DSA_meth_set_bn_mod_exp",
    "DSA_meth_get_init",
    "DSA_meth_set_init",
    "DSA_meth_get_finish",
    "DSA_meth_set_finish",
    "DSA_meth_get_paramgen",
    "DSA_meth_set_paramgen",
    "DSA_meth_get_keygen",
    "DSA_meth_set_keygen"
],
"ghidra/libsgx_tsgxssl_crypto_a/dsa_ossl.o": [
    "dsa_init",
    "dsa_finish",
    "dsa_do_verify",
    "dsa_do_sign",
    "dsa_sign_setup_no_digest",
    "DSA_set_default_method",
    "DSA_get_default_method",
    "DSA_OpenSSL"
],
"ghidra/libsgx_tsgxssl_crypto_a/dsa_pmeth.o": [
    "pkey_dsa_ctrl_str",
    "pkey_dsa_ctrl",
    "pkey_dsa_verify",
    "pkey_dsa_sign",
    "pkey_dsa_paramgen",
    "pkey_dsa_cleanup",
    "pkey_dsa_init",
    "pkey_dsa_keygen",
    "pkey_dsa_copy"
],
"ghidra/libsgx_tsgxssl_crypto_a/dsa_prn.o": [
    "DSA_print",
    "DSAparams_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/dsa_sign.o": [
    "DSA_do_sign",
    "DSA_sign_setup"
],
"ghidra/libsgx_tsgxssl_crypto_a/dsa_vrf.o": [
    "DSA_do_verify"
],
"ghidra/libsgx_tsgxssl_crypto_a/dso_dlfcn.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/dso_dl.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/dso_err.o": [
    "ERR_load_DSO_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/dso_lib.o": [
    "DSO_free",
    "DSO_new_method.isra.0",
    "DSO_flags",
    "DSO_up_ref",
    "DSO_bind_func",
    "DSO_ctrl",
    "DSO_get_filename",
    "DSO_set_filename",
    "DSO_load",
    "DSO_merge",
    "DSO_convert_filename",
    "DSO_pathbyaddr",
    "DSO_dsobyaddr",
    "DSO_global_lookup"
],
"ghidra/libsgx_tsgxssl_crypto_a/dso_openssl.o": [
    "DSO_METHOD_openssl"
],
"ghidra/libsgx_tsgxssl_crypto_a/dso_vms.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/dso_win32.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/e_aes_cbc_hmac_sha1.o": [
    "sha1_update",
    "aesni_cbc_hmac_sha1_cipher",
    "aesni_cbc_hmac_sha1_init_key",
    "tls1_1_multi_block_encrypt",
    "aesni_cbc_hmac_sha1_ctrl",
    "EVP_aes_128_cbc_hmac_sha1",
    "EVP_aes_256_cbc_hmac_sha1"
],
"ghidra/libsgx_tsgxssl_crypto_a/e_aes_cbc_hmac_sha256.o": [
    "sha256_update",
    "aesni_cbc_hmac_sha256_cipher",
    "aesni_cbc_hmac_sha256_init_key",
    "tls1_1_multi_block_encrypt",
    "aesni_cbc_hmac_sha256_ctrl",
    "EVP_aes_128_cbc_hmac_sha256",
    "EVP_aes_256_cbc_hmac_sha256"
],
"ghidra/libsgx_tsgxssl_crypto_a/e_aes.o": [
    "aes_xts_ctrl",
    "aes_cbc_cipher",
    "aes_init_key",
    "aesni_cbc_cipher",
    "aesni_init_key",
    "aes_ecb_cipher",
    "aes_ofb_cipher",
    "aes_cfb_cipher",
    "aes_cfb1_cipher",
    "aes_cfb8_cipher",
    "aes_ctr_cipher",
    "aes_gcm_ctrl",
    "aes_gcm_cleanup",
    "aes_gcm_cipher",
    "aes_xts_init_key",
    "aesni_xts_init_key",
    "aes_gcm_init_key",
    "aesni_gcm_init_key",
    "aes_xts_cipher",
    "aes_ccm_ctrl",
    "aes_ccm_cipher",
    "aes_ccm_init_key",
    "aesni_ccm_init_key",
    "aes_wrap_init_key",
    "aes_wrap_cipher",
    "aes_ocb_ctrl",
    "aes_ocb_cleanup",
    "aes_ocb_cipher",
    "aes_ocb_init_key",
    "aesni_ocb_init_key",
    "aesni_ecb_cipher",
    "EVP_aes_128_cbc",
    "EVP_aes_128_ecb",
    "EVP_aes_128_ofb",
    "EVP_aes_128_cfb128",
    "EVP_aes_128_cfb1",
    "EVP_aes_128_cfb8",
    "EVP_aes_128_ctr",
    "EVP_aes_192_cbc",
    "EVP_aes_192_ecb",
    "EVP_aes_192_ofb",
    "EVP_aes_192_cfb128",
    "EVP_aes_192_cfb1",
    "EVP_aes_192_cfb8",
    "EVP_aes_192_ctr",
    "EVP_aes_256_cbc",
    "EVP_aes_256_ecb",
    "EVP_aes_256_ofb",
    "EVP_aes_256_cfb128",
    "EVP_aes_256_cfb1",
    "EVP_aes_256_cfb8",
    "EVP_aes_256_ctr",
    "EVP_aes_128_gcm",
    "EVP_aes_192_gcm",
    "EVP_aes_256_gcm",
    "EVP_aes_128_xts",
    "EVP_aes_256_xts",
    "EVP_aes_128_ccm",
    "EVP_aes_192_ccm",
    "EVP_aes_256_ccm",
    "EVP_aes_128_wrap",
    "EVP_aes_192_wrap",
    "EVP_aes_256_wrap",
    "EVP_aes_128_wrap_pad",
    "EVP_aes_192_wrap_pad",
    "EVP_aes_256_wrap_pad",
    "EVP_aes_128_ocb",
    "EVP_aes_192_ocb",
    "EVP_aes_256_ocb"
],
"ghidra/libsgx_tsgxssl_crypto_a/e_aria.o": [
    "aria_128_ecb_cipher",
    "aria_init_key",
    "aria_128_cfb128_cipher",
    "aria_128_ofb_cipher",
    "aria_128_cfb1_cipher",
    "aria_128_cfb8_cipher",
    "aria_ctr_cipher",
    "aria_gcm_cleanup",
    "aria_gcm_ctrl",
    "aria_gcm_cipher",
    "aria_gcm_init_key",
    "aria_ccm_ctrl",
    "aria_ccm_cipher",
    "aria_ccm_init_key",
    "aria_128_cbc_cipher",
    "aria_192_ecb_cipher",
    "aria_256_ecb_cipher",
    "EVP_aria_128_cbc",
    "EVP_aria_128_cfb128",
    "EVP_aria_128_ofb",
    "EVP_aria_128_ecb",
    "EVP_aria_192_cbc",
    "EVP_aria_192_cfb128",
    "EVP_aria_192_ofb",
    "EVP_aria_192_ecb",
    "EVP_aria_256_cbc",
    "EVP_aria_256_cfb128",
    "EVP_aria_256_ofb",
    "EVP_aria_256_ecb",
    "EVP_aria_128_cfb1",
    "EVP_aria_192_cfb1",
    "EVP_aria_256_cfb1",
    "EVP_aria_128_cfb8",
    "EVP_aria_192_cfb8",
    "EVP_aria_256_cfb8",
    "EVP_aria_128_ctr",
    "EVP_aria_192_ctr",
    "EVP_aria_256_ctr",
    "EVP_aria_128_gcm",
    "EVP_aria_192_gcm",
    "EVP_aria_256_gcm",
    "EVP_aria_128_ccm",
    "EVP_aria_192_ccm",
    "EVP_aria_256_ccm"
],
"ghidra/libsgx_tsgxssl_crypto_a/ebcdic.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/e_bf.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/ec2_oct.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/ec2_smpl.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/e_camellia.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/ec_ameth.o": [
    "ec_pkey_public_check",
    "old_ec_priv_encode",
    "ec_missing_parameters",
    "int_ec_free",
    "eckey_type2param",
    "ec_pkey_ctrl",
    "ec_bits",
    "ec_security_bits",
    "ec_cmp_parameters",
    "ec_copy_parameters",
    "eckey_param_encode",
    "int_ec_size",
    "eckey_param2type",
    "eckey_priv_encode",
    "eckey_priv_decode",
    "eckey_pub_cmp",
    "eckey_pub_encode",
    "eckey_pub_decode",
    "ec_pkey_param_check",
    "ec_pkey_check",
    "old_ec_priv_decode",
    "eckey_param_decode",
    "eckey_param_print",
    "eckey_pub_print",
    "eckey_priv_print",
    "EC_KEY_print",
    "ECParameters_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/ec_asn1.o": [
    "EC_GROUP_get_basis_type",
    "X9_62_PENTANOMIAL_new",
    "X9_62_PENTANOMIAL_free",
    "X9_62_CHARACTERISTIC_TWO_new",
    "X9_62_CHARACTERISTIC_TWO_free",
    "ECPARAMETERS_new",
    "ECPARAMETERS_free",
    "d2i_ECPKPARAMETERS",
    "i2d_ECPKPARAMETERS",
    "ECPKPARAMETERS_new",
    "ECPKPARAMETERS_free",
    "d2i_EC_PRIVATEKEY",
    "i2d_EC_PRIVATEKEY",
    "EC_PRIVATEKEY_new",
    "EC_PRIVATEKEY_free",
    "EC_GROUP_get_ecparameters",
    "EC_GROUP_get_ecpkparameters",
    "EC_GROUP_new_from_ecparameters",
    "EC_GROUP_new_from_ecpkparameters",
    "d2i_ECPKParameters",
    "i2d_ECPKParameters",
    "d2i_ECPrivateKey",
    "i2d_ECPrivateKey",
    "i2d_ECParameters",
    "d2i_ECParameters",
    "o2i_ECPublicKey",
    "i2o_ECPublicKey",
    "d2i_ECDSA_SIG",
    "i2d_ECDSA_SIG",
    "ECDSA_SIG_new",
    "ECDSA_SIG_free",
    "ECDSA_SIG_get0",
    "ECDSA_SIG_get0_r",
    "ECDSA_SIG_get0_s",
    "ECDSA_SIG_set0",
    "ECDSA_size"
],
"ghidra/libsgx_tsgxssl_crypto_a/e_cast.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/ecb3_enc.o": [
    "DES_ecb3_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/ecb_enc.o": [
    "DES_options",
    "DES_ecb_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/ec_check.o": [
    "EC_GROUP_check"
],
"ghidra/libsgx_tsgxssl_crypto_a/ec_curve.o": [
    "EC_GROUP_new_by_curve_name",
    "EC_get_builtin_curves",
    "EC_curve_nid2nist",
    "EC_curve_nist2nid",
    "ec_curve_nid_from_params"
],
"ghidra/libsgx_tsgxssl_crypto_a/ec_cvt.o": [
    "EC_GROUP_new_curve_GFp"
],
"ghidra/libsgx_tsgxssl_crypto_a/ecdh_kdf.o": [
    "ecdh_KDF_X9_63"
],
"ghidra/libsgx_tsgxssl_crypto_a/ecdh_ossl.o": [
    "ossl_ecdh_compute_key",
    "ecdh_simple_compute_key"
],
"ghidra/libsgx_tsgxssl_crypto_a/ecdsa_ossl.o": [
    "ossl_ecdsa_sign",
    "ossl_ecdsa_sign_setup",
    "ossl_ecdsa_sign_sig",
    "ossl_ecdsa_verify",
    "ossl_ecdsa_verify_sig"
],
"ghidra/libsgx_tsgxssl_crypto_a/ecdsa_sign.o": [
    "ECDSA_do_sign_ex",
    "ECDSA_do_sign",
    "ECDSA_sign_ex",
    "ECDSA_sign",
    "ECDSA_sign_setup"
],
"ghidra/libsgx_tsgxssl_crypto_a/ecdsa_vrf.o": [
    "ECDSA_do_verify",
    "ECDSA_verify"
],
"ghidra/libsgx_tsgxssl_crypto_a/ec_err.o": [
    "ERR_load_EC_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/e_chacha20_poly1305.o": [
    "chacha_init_key",
    "chacha_cipher",
    "chacha20_poly1305_ctrl",
    "chacha20_poly1305_cleanup",
    "chacha20_poly1305_tls_cipher.isra.0",
    "chacha20_poly1305_cipher",
    "chacha20_poly1305_init_key",
    "EVP_chacha20",
    "EVP_chacha20_poly1305"
],
"ghidra/libsgx_tsgxssl_crypto_a/ec_key.o": [
    "EC_KEY_new",
    "EC_KEY_free",
    "EC_KEY_new_by_curve_name",
    "EC_KEY_copy",
    "EC_KEY_dup",
    "EC_KEY_up_ref",
    "EC_KEY_get0_engine",
    "EC_KEY_generate_key",
    "ossl_ec_key_gen",
    "ec_key_simple_generate_key",
    "ec_key_simple_generate_public_key",
    "EC_KEY_check_key",
    "ec_key_simple_check_key",
    "EC_KEY_get0_group",
    "EC_KEY_set_group",
    "EC_KEY_get0_private_key",
    "EC_KEY_set_private_key",
    "EC_KEY_get0_public_key",
    "EC_KEY_set_public_key",
    "EC_KEY_set_public_key_affine_coordinates",
    "EC_KEY_get_enc_flags",
    "EC_KEY_set_enc_flags",
    "EC_KEY_get_conv_form",
    "EC_KEY_set_conv_form",
    "EC_KEY_set_asn1_flag",
    "EC_KEY_precompute_mult",
    "EC_KEY_get_flags",
    "EC_KEY_set_flags",
    "EC_KEY_clear_flags",
    "EC_KEY_decoded_from_explicit_params",
    "EC_KEY_key2buf",
    "EC_KEY_oct2key",
    "EC_KEY_priv2oct",
    "ec_key_simple_priv2oct",
    "EC_KEY_oct2priv",
    "ec_key_simple_oct2priv",
    "EC_KEY_priv2buf",
    "EC_KEY_can_sign"
],
"ghidra/libsgx_tsgxssl_crypto_a/ec_kmeth.o": [
    "EC_KEY_OpenSSL",
    "EC_KEY_get_default_method",
    "EC_KEY_set_default_method",
    "EC_KEY_get_method",
    "EC_KEY_set_method",
    "EC_KEY_new_method",
    "ECDH_compute_key",
    "EC_KEY_METHOD_new",
    "EC_KEY_METHOD_free",
    "EC_KEY_METHOD_set_init",
    "EC_KEY_METHOD_set_keygen",
    "EC_KEY_METHOD_set_compute_key",
    "EC_KEY_METHOD_set_sign",
    "EC_KEY_METHOD_set_verify",
    "EC_KEY_METHOD_get_init",
    "EC_KEY_METHOD_get_keygen",
    "EC_KEY_METHOD_get_compute_key",
    "EC_KEY_METHOD_get_sign",
    "EC_KEY_METHOD_get_verify"
],
"ghidra/libsgx_tsgxssl_crypto_a/eck_prn.o": [
    "ECPKParameters_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/ec_lib.o": [
    "EC_GROUP_new",
    "EC_pre_comp_free",
    "EC_GROUP_method_of",
    "EC_METHOD_get_field_type",
    "EC_GROUP_get0_generator",
    "EC_GROUP_get_mont_data",
    "EC_GROUP_get_order",
    "EC_GROUP_get0_order",
    "EC_GROUP_order_bits",
    "EC_GROUP_get_cofactor",
    "EC_GROUP_get0_cofactor",
    "EC_GROUP_set_curve_name",
    "EC_GROUP_get_curve_name",
    "EC_GROUP_set_asn1_flag",
    "EC_GROUP_get_asn1_flag",
    "EC_GROUP_set_point_conversion_form",
    "EC_GROUP_get_point_conversion_form",
    "EC_GROUP_set_seed",
    "EC_GROUP_get0_seed",
    "EC_GROUP_get_seed_len",
    "EC_GROUP_set_curve",
    "EC_GROUP_get_curve",
    "EC_GROUP_get_degree",
    "EC_GROUP_check_discriminant",
    "EC_POINT_new",
    "EC_POINT_free",
    "EC_GROUP_free",
    "EC_POINT_clear_free",
    "EC_GROUP_clear_free",
    "EC_POINT_copy",
    "EC_GROUP_copy",
    "EC_GROUP_dup",
    "EC_GROUP_set_generator",
    "EC_POINT_dup",
    "EC_POINT_method_of",
    "EC_POINT_set_to_infinity",
    "EC_POINT_set_Jprojective_coordinates_GFp",
    "EC_POINT_get_Jprojective_coordinates_GFp",
    "EC_POINT_add",
    "EC_POINT_dbl",
    "EC_POINT_invert",
    "EC_POINT_is_at_infinity",
    "EC_POINT_get_affine_coordinates",
    "EC_POINT_is_on_curve",
    "EC_POINT_set_affine_coordinates",
    "EC_POINT_cmp",
    "EC_GROUP_cmp",
    "EC_POINT_make_affine",
    "EC_POINTs_make_affine",
    "EC_POINTs_mul",
    "EC_POINT_mul",
    "EC_GROUP_precompute_mult",
    "EC_GROUP_have_precompute_mult",
    "EC_KEY_set_ex_data",
    "EC_KEY_get_ex_data",
    "ec_group_simple_order_bits",
    "ec_group_do_inverse_ord",
    "ec_point_blind_coordinates"
],
"ghidra/libsgx_tsgxssl_crypto_a/ec_mult.o": [
    "EC_ec_pre_comp_dup",
    "EC_ec_pre_comp_free",
    "ec_scalar_mul_ladder",
    "ec_wNAF_mul",
    "ec_wNAF_precompute_mult",
    "ec_wNAF_have_precompute_mult"
],
"ghidra/libsgx_tsgxssl_crypto_a/ec_oct.o": [
    "EC_POINT_set_compressed_coordinates",
    "EC_POINT_point2oct",
    "EC_POINT_oct2point",
    "EC_POINT_point2buf"
],
"ghidra/libsgx_tsgxssl_crypto_a/ec_pmeth.o": [
    "pkey_ec_ctrl_str",
    "pkey_ec_cleanup",
    "pkey_ec_ctrl",
    "pkey_ec_derive",
    "pkey_ec_verify",
    "pkey_ec_keygen",
    "pkey_ec_sign",
    "pkey_ec_paramgen",
    "pkey_ec_init",
    "pkey_ec_copy",
    "pkey_ec_kdf_derive"
],
"ghidra/libsgx_tsgxssl_crypto_a/ecp_mont.o": [
    "ec_GFp_mont_group_init",
    "ec_GFp_mont_group_finish",
    "ec_GFp_mont_group_clear_finish",
    "ec_GFp_mont_group_set_curve",
    "ec_GFp_mont_field_inv",
    "ec_GFp_mont_group_copy",
    "ec_GFp_mont_field_encode",
    "ec_GFp_mont_field_mul",
    "ec_GFp_mont_field_sqr",
    "ec_GFp_mont_field_decode",
    "ec_GFp_mont_field_set_to_one",
    "EC_GFp_mont_method"
],
"ghidra/libsgx_tsgxssl_crypto_a/ecp_nist.o": [
    "ec_GFp_nist_group_copy",
    "ec_GFp_nist_group_set_curve",
    "ec_GFp_nist_field_mul",
    "ec_GFp_nist_field_sqr",
    "EC_GFp_nist_method"
],
"ghidra/libsgx_tsgxssl_crypto_a/ecp_nistp224.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/ecp_nistp256.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/ecp_nistp521.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/ecp_nistputil.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/ecp_nistz256.o": [
    "ecp_nistz256_inv_mod_ord",
    "ecp_nistz256_get_affine.part.0",
    "ecp_nistz256_get_affine",
    "ecp_nistz256_window_have_precompute_mult",
    "ecp_nistz256_is_affine_G",
    "ecp_nistz256_points_mul",
    "EC_nistz256_pre_comp_dup",
    "EC_nistz256_pre_comp_free",
    "ecp_nistz256_mult_precompute",
    "EC_GFp_nistz256_method"
],
"ghidra/libsgx_tsgxssl_crypto_a/ecp_nistz256-x86_64.o": [
    "ecp_nistz256_mul_by_2",
    "ecp_nistz256_div_by_2",
    "ecp_nistz256_mul_by_3",
    "ecp_nistz256_add",
    "ecp_nistz256_sub",
    "ecp_nistz256_neg",
    "ecp_nistz256_ord_mul_mont",
    "ecp_nistz256_ord_sqr_mont",
    "ecp_nistz256_ord_mul_montx",
    "ecp_nistz256_ord_sqr_montx",
    "ecp_nistz256_to_mont",
    "ecp_nistz256_mul_mont",
    "__ecp_nistz256_mul_montq",
    "ecp_nistz256_sqr_mont",
    "__ecp_nistz256_sqr_montq",
    "__ecp_nistz256_mul_montx",
    "__ecp_nistz256_sqr_montx",
    "ecp_nistz256_from_mont",
    "ecp_nistz256_scatter_w5",
    "ecp_nistz256_gather_w5",
    "ecp_nistz256_scatter_w7",
    "ecp_nistz256_gather_w7",
    "ecp_nistz256_avx2_gather_w5",
    "ecp_nistz256_avx2_gather_w7",
    "__ecp_nistz256_add_toq",
    "__ecp_nistz256_sub_fromq",
    "__ecp_nistz256_subq",
    "__ecp_nistz256_mul_by_2q",
    "ecp_nistz256_point_double",
    "ecp_nistz256_point_add",
    "ecp_nistz256_point_add_affine",
    "__ecp_nistz256_add_tox",
    "__ecp_nistz256_sub_fromx",
    "__ecp_nistz256_subx",
    "__ecp_nistz256_mul_by_2x",
    "ecp_nistz256_point_doublex",
    "ecp_nistz256_point_addx",
    "ecp_nistz256_point_add_affinex"
],
"ghidra/libsgx_tsgxssl_crypto_a/ecp_oct.o": [
    "ec_GFp_simple_set_compressed_coordinates",
    "ec_GFp_simple_point2oct",
    "ec_GFp_simple_oct2point"
],
"ghidra/libsgx_tsgxssl_crypto_a/ec_print.o": [
    "EC_POINT_point2bn",
    "EC_POINT_bn2point",
    "EC_POINT_point2hex",
    "EC_POINT_hex2point"
],
"ghidra/libsgx_tsgxssl_crypto_a/ecp_smpl.o": [
    "ec_GFp_simple_group_init",
    "ec_GFp_simple_group_finish",
    "ec_GFp_simple_point_init",
    "ec_GFp_simple_point_finish",
    "ec_GFp_simple_group_clear_finish",
    "ec_GFp_simple_point_clear_finish",
    "ec_GFp_simple_group_get_degree",
    "ec_GFp_simple_group_get_curve",
    "ec_GFp_simple_get_Jprojective_coordinates_GFp",
    "ec_GFp_simple_is_at_infinity",
    "ec_GFp_simple_field_sqr",
    "ec_GFp_simple_field_mul",
    "ec_GFp_simple_group_check_discriminant",
    "ec_GFp_simple_point_set_to_infinity",
    "ec_GFp_simple_set_Jprojective_coordinates_GFp",
    "ec_GFp_simple_point_get_affine_coordinates",
    "ec_GFp_simple_dbl",
    "ec_GFp_simple_ladder_step",
    "ec_GFp_simple_ladder_pre",
    "ec_GFp_simple_field_inv",
    "ec_GFp_simple_blind_coordinates",
    "ec_GFp_simple_group_copy",
    "ec_GFp_simple_point_copy",
    "ec_GFp_simple_group_set_curve",
    "ec_GFp_simple_point_set_affine_coordinates",
    "ec_GFp_simple_cmp",
    "ec_GFp_simple_add",
    "ec_GFp_simple_invert",
    "ec_GFp_simple_is_on_curve",
    "ec_GFp_simple_make_affine",
    "ec_GFp_simple_points_make_affine",
    "ec_GFp_simple_ladder_post",
    "EC_GFp_simple_method"
],
"ghidra/libsgx_tsgxssl_crypto_a/ecx_meth.o": [
    "ecx_size",
    "ecx_bits",
    "ecx_security_bits",
    "ecx_cmp_parameters",
    "ecd_ctrl",
    "ecd_size25519",
    "ecd_size448",
    "pkey_ecx_ctrl",
    "ecx_free",
    "ecx_priv_encode",
    "ecx_pub_cmp",
    "ecx_pub_encode",
    "ecd_sig_info_set25519",
    "ecd_sig_info_set448",
    "pkey_ecd_digestverify25519",
    "pkey_ecd_digestverify448",
    "ecx_get_priv_key",
    "pkey_ecx_derive25519",
    "ecd_item_sign25519",
    "ecd_item_sign448",
    "ecd_item_verify",
    "pkey_ecd_digestsign25519",
    "pkey_ecd_ctrl",
    "pkey_ecd_digestsign448",
    "ecx_get_pub_key",
    "pkey_ecx_derive448",
    "ecx_pub_print",
    "ecx_priv_print",
    "ecx_priv_decode",
    "ecx_set_pub_key",
    "ecx_ctrl",
    "ecx_set_priv_key",
    "ecx_pub_decode",
    "pkey_ecx_keygen"
],
"ghidra/libsgx_tsgxssl_crypto_a/eddsa.o": [
    "hash_init_with_dom.constprop.0",
    "c448_ed448_verify.part.0",
    "c448_ed448_convert_private_key_to_x448",
    "c448_ed448_derive_public_key",
    "c448_ed448_sign",
    "c448_ed448_sign_prehash",
    "c448_ed448_verify",
    "c448_ed448_verify_prehash",
    "ED448_sign",
    "ED448_verify",
    "ED448ph_sign",
    "ED448ph_verify",
    "ED448_public_from_private"
],
"ghidra/libsgx_tsgxssl_crypto_a/e_des3.o": [
    "des_ede_cbc_cipher",
    "des_ede3_init_key",
    "des_ede_init_key",
    "des_ede_cfb64_cipher",
    "des_ede_ofb_cipher",
    "des_ede_ecb_cipher",
    "des_ede3_cfb1_cipher",
    "des_ede3_cfb8_cipher",
    "des3_ctrl",
    "des_ede_cbc_cipher.constprop.0",
    "des_ede3_wrap_cipher",
    "EVP_des_ede_cbc",
    "EVP_des_ede_cfb64",
    "EVP_des_ede_ofb",
    "EVP_des_ede_ecb",
    "EVP_des_ede3_cbc",
    "EVP_des_ede3_cfb64",
    "EVP_des_ede3_ofb",
    "EVP_des_ede3_ecb",
    "EVP_des_ede3_cfb1",
    "EVP_des_ede3_cfb8",
    "EVP_des_ede",
    "EVP_des_ede3",
    "EVP_des_ede3_wrap"
],
"ghidra/libsgx_tsgxssl_crypto_a/e_des.o": [
    "des_init_key",
    "des_cfb64_cipher",
    "des_ofb_cipher",
    "des_ecb_cipher",
    "des_cfb1_cipher",
    "des_cfb8_cipher",
    "des_ctrl",
    "des_cbc_cipher",
    "EVP_des_cbc",
    "EVP_des_cfb64",
    "EVP_des_ofb",
    "EVP_des_ecb",
    "EVP_des_cfb1",
    "EVP_des_cfb8"
],
"ghidra/libsgx_tsgxssl_crypto_a/e_idea.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/encode.o": [
    "evp_encodeblock_int",
    "evp_decodeblock_int",
    "EVP_ENCODE_CTX_new",
    "EVP_ENCODE_CTX_free",
    "EVP_ENCODE_CTX_copy",
    "EVP_ENCODE_CTX_num",
    "evp_encode_ctx_set_flags",
    "EVP_EncodeInit",
    "EVP_EncodeUpdate",
    "EVP_EncodeFinal",
    "EVP_EncodeBlock",
    "EVP_DecodeInit",
    "EVP_DecodeUpdate",
    "EVP_DecodeBlock",
    "EVP_DecodeFinal"
],
"ghidra/libsgx_tsgxssl_crypto_a/eng_all.o": [
    "ENGINE_load_builtin_engines"
],
"ghidra/libsgx_tsgxssl_crypto_a/eng_cnf.o": [
    "int_engine_module_finish",
    "int_engine_module_init",
    "ENGINE_add_conf_module"
],
"ghidra/libsgx_tsgxssl_crypto_a/eng_ctrl.o": [
    "ENGINE_ctrl",
    "ENGINE_cmd_is_executable",
    "ENGINE_ctrl_cmd",
    "ENGINE_ctrl_cmd_string"
],
"ghidra/libsgx_tsgxssl_crypto_a/eng_dyn.o": [
    "dynamic_init",
    "int_free_str",
    "dynamic_data_ctx_free_func",
    "dynamic_ctrl",
    "dynamic_finish",
    "engine_load_dynamic_int"
],
"ghidra/libsgx_tsgxssl_crypto_a/eng_err.o": [
    "ERR_load_ENGINE_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/eng_fat.o": [
    "int_def_cb",
    "ENGINE_set_default",
    "ENGINE_set_default_string",
    "ENGINE_register_complete",
    "ENGINE_register_all_complete"
],
"ghidra/libsgx_tsgxssl_crypto_a/eng_init.o": [
    "engine_unlocked_init",
    "engine_unlocked_finish",
    "ENGINE_init",
    "ENGINE_finish"
],
"ghidra/libsgx_tsgxssl_crypto_a/eng_lib.o": [
    "do_engine_lock_init_ossl_",
    "engine_cleanup_cb_free",
    "ENGINE_new",
    "engine_set_all_null",
    "engine_free_util",
    "ENGINE_free",
    "engine_cleanup_add_first",
    "engine_cleanup_add_last",
    "engine_cleanup_int",
    "ENGINE_set_ex_data",
    "ENGINE_get_ex_data",
    "ENGINE_set_id",
    "ENGINE_set_name",
    "ENGINE_set_destroy_function",
    "ENGINE_set_init_function",
    "ENGINE_set_finish_function",
    "ENGINE_set_ctrl_function",
    "ENGINE_set_flags",
    "ENGINE_set_cmd_defns",
    "ENGINE_get_id",
    "ENGINE_get_name",
    "ENGINE_get_destroy_function",
    "ENGINE_get_init_function",
    "ENGINE_get_finish_function",
    "ENGINE_get_ctrl_function",
    "ENGINE_get_flags",
    "ENGINE_get_cmd_defns",
    "ENGINE_get_static_state"
],
"ghidra/libsgx_tsgxssl_crypto_a/eng_list.o": [
    "engine_add_dynamic_id",
    "engine_remove_dynamic_id",
    "ENGINE_get_first",
    "ENGINE_get_last",
    "ENGINE_get_next",
    "ENGINE_get_prev",
    "ENGINE_add",
    "ENGINE_remove",
    "engine_list_cleanup",
    "ENGINE_by_id",
    "ENGINE_up_ref"
],
"ghidra/libsgx_tsgxssl_crypto_a/eng_openssl.o": [
    "openssl_destroy",
    "test_sha1_final",
    "test_sha1_update",
    "test_sha1_init",
    "openssl_digests",
    "engine_load_openssl_int"
],
"ghidra/libsgx_tsgxssl_crypto_a/eng_pkey.o": [
    "ENGINE_set_load_privkey_function",
    "ENGINE_set_load_pubkey_function",
    "ENGINE_set_load_ssl_client_cert_function",
    "ENGINE_get_load_privkey_function",
    "ENGINE_get_load_pubkey_function",
    "ENGINE_get_ssl_client_cert_function",
    "ENGINE_load_private_key",
    "ENGINE_load_public_key",
    "ENGINE_load_ssl_client_cert"
],
"ghidra/libsgx_tsgxssl_crypto_a/eng_rdrand.o": [
    "random_status",
    "rdrand_init",
    "get_random_bytes",
    "engine_load_rdrand_int"
],
"ghidra/libsgx_tsgxssl_crypto_a/eng_table.o": [
    "engine_pile_hash",
    "engine_pile_cmp",
    "int_dall",
    "int_unregister_cb",
    "int_cleanup_cb_doall",
    "ENGINE_get_table_flags",
    "ENGINE_set_table_flags",
    "engine_table_register",
    "engine_table_unregister",
    "engine_table_cleanup",
    "engine_table_select",
    "engine_table_doall"
],
"ghidra/libsgx_tsgxssl_crypto_a/e_null.o": [
    "null_init_key",
    "null_cipher",
    "EVP_enc_null"
],
"ghidra/libsgx_tsgxssl_crypto_a/e_old.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/e_rc2.o": [
    "rc2_get_asn1_type_and_iv",
    "rc2_cbc_cipher",
    "rc2_init_key",
    "rc2_cfb64_cipher",
    "rc2_ofb_cipher",
    "rc2_ecb_cipher",
    "rc2_ctrl",
    "rc2_set_asn1_type_and_iv",
    "EVP_rc2_cbc",
    "EVP_rc2_cfb64",
    "EVP_rc2_ofb",
    "EVP_rc2_ecb",
    "EVP_rc2_64_cbc",
    "EVP_rc2_40_cbc"
],
"ghidra/libsgx_tsgxssl_crypto_a/e_rc4_hmac_md5.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/e_rc4.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/e_rc5.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/err_all.o": [
    "err_load_crypto_strings_int"
],
"ghidra/libsgx_tsgxssl_crypto_a/err.o": [
    "err_string_data_hash",
    "err_string_data_cmp",
    "do_err_strings_init_ossl_",
    "err_do_init_ossl_",
    "err_cleanup",
    "ERR_load_ERR_strings",
    "ERR_load_strings",
    "ERR_load_strings_const",
    "ERR_unload_strings",
    "err_free_strings_int",
    "ERR_lib_error_string",
    "ERR_func_error_string",
    "ERR_reason_error_string",
    "ERR_error_string_n",
    "ERR_error_string",
    "err_delete_thread_state",
    "ERR_remove_thread_state",
    "ERR_remove_state",
    "ERR_get_state",
    "ERR_put_error",
    "ERR_clear_error",
    "ERR_get_error_line_data",
    "ERR_peek_last_error",
    "ERR_peek_error",
    "ERR_peek_last_error_line",
    "ERR_get_error",
    "ERR_peek_error_line",
    "ERR_get_error_line",
    "ERR_peek_last_error_line_data",
    "ERR_peek_error_line_data",
    "err_shelve_state",
    "err_unshelve_state",
    "ERR_get_next_error_library",
    "ERR_set_error_data",
    "ERR_add_error_vdata",
    "ERR_add_error_data",
    "ERR_set_mark",
    "ERR_pop_to_mark",
    "ERR_clear_last_mark",
    "err_clear_last_constant_time"
],
"ghidra/libsgx_tsgxssl_crypto_a/err_prn.o": [
    "print_bio",
    "ERR_print_errors_cb",
    "ERR_print_errors"
],
"ghidra/libsgx_tsgxssl_crypto_a/e_seed.o": [
    "seed_cbc_cipher",
    "seed_init_key",
    "seed_cfb128_cipher",
    "seed_ofb_cipher",
    "seed_ecb_cipher",
    "EVP_seed_cbc",
    "EVP_seed_cfb128",
    "EVP_seed_ofb",
    "EVP_seed_ecb"
],
"ghidra/libsgx_tsgxssl_crypto_a/e_sm4.o": [
    "sm4_init_key",
    "sm4_cfb128_cipher",
    "sm4_ofb_cipher",
    "sm4_ecb_cipher",
    "sm4_ctr_cipher",
    "sm4_cbc_cipher",
    "EVP_sm4_cbc",
    "EVP_sm4_cfb128",
    "EVP_sm4_ofb",
    "EVP_sm4_ecb",
    "EVP_sm4_ctr"
],
"ghidra/libsgx_tsgxssl_crypto_a/evp_asn1.o": [
    "ASN1_TYPE_set_octetstring",
    "ASN1_TYPE_get_octetstring",
    "ASN1_TYPE_set_int_octetstring",
    "ASN1_TYPE_get_int_octetstring"
],
"ghidra/libsgx_tsgxssl_crypto_a/evp_cnf.o": [
    "alg_module_init",
    "EVP_add_alg_module"
],
"ghidra/libsgx_tsgxssl_crypto_a/evp_enc.o": [
    "EVP_CIPHER_CTX_reset",
    "EVP_CIPHER_CTX_new",
    "EVP_CIPHER_CTX_free",
    "is_partially_overlapping",
    "evp_EncryptDecryptUpdate",
    "EVP_EncryptUpdate",
    "EVP_EncryptFinal_ex",
    "EVP_DecryptUpdate",
    "EVP_CipherUpdate",
    "EVP_DecryptFinal_ex",
    "EVP_CipherFinal_ex",
    "EVP_CipherFinal",
    "EVP_CIPHER_CTX_set_padding",
    "EVP_CIPHER_CTX_ctrl",
    "EVP_CipherInit_ex",
    "EVP_CipherInit",
    "EVP_EncryptInit",
    "EVP_DecryptInit",
    "EVP_EncryptInit_ex",
    "EVP_DecryptInit_ex",
    "EVP_CIPHER_CTX_set_key_length",
    "EVP_CIPHER_CTX_rand_key",
    "EVP_CIPHER_CTX_copy"
],
"ghidra/libsgx_tsgxssl_crypto_a/evp_err.o": [
    "ERR_load_EVP_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/evp_key.o": [
    "EVP_set_pw_prompt",
    "EVP_get_pw_prompt",
    "EVP_read_pw_string_min",
    "EVP_read_pw_string",
    "EVP_BytesToKey"
],
"ghidra/libsgx_tsgxssl_crypto_a/evp_lib.o": [
    "EVP_CIPHER_block_size",
    "EVP_CIPHER_CTX_block_size",
    "EVP_CIPHER_impl_ctx_size",
    "EVP_Cipher",
    "EVP_CIPHER_CTX_cipher",
    "EVP_CIPHER_CTX_encrypting",
    "EVP_CIPHER_flags",
    "EVP_CIPHER_CTX_get_app_data",
    "EVP_CIPHER_CTX_set_app_data",
    "EVP_CIPHER_CTX_get_cipher_data",
    "EVP_CIPHER_CTX_set_cipher_data",
    "EVP_CIPHER_iv_length",
    "EVP_CIPHER_CTX_iv_length",
    "EVP_CIPHER_get_asn1_iv",
    "EVP_CIPHER_asn1_to_param",
    "EVP_CIPHER_set_asn1_iv",
    "EVP_CIPHER_CTX_original_iv",
    "EVP_CIPHER_CTX_iv",
    "EVP_CIPHER_CTX_iv_noconst",
    "EVP_CIPHER_CTX_buf_noconst",
    "EVP_CIPHER_CTX_num",
    "EVP_CIPHER_CTX_set_num",
    "EVP_CIPHER_key_length",
    "EVP_CIPHER_CTX_key_length",
    "EVP_CIPHER_nid",
    "EVP_CIPHER_type",
    "EVP_CIPHER_CTX_nid",
    "EVP_CIPHER_param_to_asn1",
    "EVP_MD_block_size",
    "EVP_MD_type",
    "EVP_MD_pkey_type",
    "EVP_MD_size",
    "EVP_MD_flags",
    "EVP_MD_meth_new",
    "EVP_MD_meth_dup",
    "EVP_MD_meth_free",
    "EVP_MD_meth_set_input_blocksize",
    "EVP_MD_meth_set_result_size",
    "EVP_MD_meth_set_app_datasize",
    "EVP_MD_meth_set_flags",
    "EVP_MD_meth_set_init",
    "EVP_MD_meth_set_update",
    "EVP_MD_meth_set_final",
    "EVP_MD_meth_set_copy",
    "EVP_MD_meth_set_cleanup",
    "EVP_MD_meth_set_ctrl",
    "EVP_MD_meth_get_input_blocksize",
    "EVP_MD_meth_get_result_size",
    "EVP_MD_meth_get_app_datasize",
    "EVP_MD_meth_get_flags",
    "EVP_MD_meth_get_init",
    "EVP_MD_meth_get_update",
    "EVP_MD_meth_get_final",
    "EVP_MD_meth_get_copy",
    "EVP_MD_meth_get_cleanup",
    "EVP_MD_meth_get_ctrl",
    "EVP_MD_CTX_md",
    "EVP_MD_CTX_pkey_ctx",
    "EVP_MD_CTX_md_data",
    "EVP_MD_CTX_update_fn",
    "EVP_MD_CTX_set_update_fn",
    "EVP_MD_CTX_set_flags",
    "EVP_MD_CTX_clear_flags",
    "EVP_MD_CTX_test_flags",
    "EVP_MD_CTX_set_pkey_ctx",
    "EVP_CIPHER_CTX_set_flags",
    "EVP_CIPHER_CTX_clear_flags",
    "EVP_CIPHER_CTX_test_flags"
],
"ghidra/libsgx_tsgxssl_crypto_a/evp_pbe.o": [
    "pbe2_cmp_BSEARCH_CMP_FN",
    "pbe_cmp",
    "free_evp_pbe_ctl",
    "EVP_PBE_alg_add_type",
    "EVP_PBE_alg_add",
    "EVP_PBE_find",
    "EVP_PBE_CipherInit",
    "EVP_PBE_cleanup",
    "EVP_PBE_get"
],
"ghidra/libsgx_tsgxssl_crypto_a/evp_pkey.o": [
    "EVP_PKCS82PKEY",
    "EVP_PKEY2PKCS8",
    "EVP_PKEY_get_attr_count",
    "EVP_PKEY_get_attr_by_NID",
    "EVP_PKEY_get_attr_by_OBJ",
    "EVP_PKEY_get_attr",
    "EVP_PKEY_delete_attr",
    "EVP_PKEY_add1_attr",
    "EVP_PKEY_add1_attr_by_OBJ",
    "EVP_PKEY_add1_attr_by_NID",
    "EVP_PKEY_add1_attr_by_txt"
],
"ghidra/libsgx_tsgxssl_crypto_a/e_xcbc_d.o": [
    "desx_cbc_cipher",
    "desx_cbc_init_key",
    "EVP_desx_cbc"
],
"ghidra/libsgx_tsgxssl_crypto_a/ex_data.o": [
    "dummy_new",
    "dummy_dup",
    "cleanup_cb",
    "do_ex_data_init_ossl_",
    "dummy_free",
    "crypto_cleanup_all_ex_data_int",
    "CRYPTO_free_ex_index",
    "CRYPTO_get_ex_new_index",
    "CRYPTO_set_ex_data",
    "CRYPTO_get_ex_data",
    "CRYPTO_new_ex_data",
    "CRYPTO_dup_ex_data",
    "CRYPTO_free_ex_data"
],
"ghidra/libsgx_tsgxssl_crypto_a/fcrypt_b.o": [
    "fcrypt_body"
],
"ghidra/libsgx_tsgxssl_crypto_a/fcrypt.o": [
    "DES_fcrypt",
    "DES_crypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/f_generic.o": [
    "gf_strong_reduce",
    "gf_serialize",
    "gf_lobit",
    "gf_sub",
    "gf_add",
    "gf_hibit",
    "gf_deserialize",
    "gf_eq",
    "gf_isr"
],
"ghidra/libsgx_tsgxssl_crypto_a/f_impl.o": [
    "gf_mul",
    "gf_mulw_unsigned",
    "gf_sqr"
],
"ghidra/libsgx_tsgxssl_crypto_a/f_int.o": [
    "i2a_ASN1_INTEGER",
    "a2i_ASN1_INTEGER",
    "a2i_ASN1_ENUMERATED"
],
"ghidra/libsgx_tsgxssl_crypto_a/f_string.o": [
    "i2a_ASN1_STRING",
    "a2i_ASN1_STRING"
],
"ghidra/libsgx_tsgxssl_crypto_a/gcm128.o": [
    "CRYPTO_gcm128_init",
    "CRYPTO_gcm128_setiv",
    "CRYPTO_gcm128_aad",
    "CRYPTO_gcm128_encrypt",
    "CRYPTO_gcm128_decrypt",
    "CRYPTO_gcm128_encrypt_ctr32",
    "CRYPTO_gcm128_decrypt_ctr32",
    "CRYPTO_gcm128_finish",
    "CRYPTO_gcm128_tag",
    "CRYPTO_gcm128_new",
    "CRYPTO_gcm128_release"
],
"ghidra/libsgx_tsgxssl_crypto_a/getenv.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/ghash-x86_64.o": [
    "gcm_gmult_4bit",
    "gcm_ghash_4bit",
    "gcm_init_clmul",
    "gcm_gmult_clmul",
    "gcm_ghash_clmul",
    "gcm_init_avx",
    "gcm_ghash_avx"
],
"ghidra/libsgx_tsgxssl_crypto_a/hkdf.o": [
    "pkey_hkdf_ctrl",
    "HKDF_Expand",
    "pkey_hkdf_derive",
    "pkey_hkdf_derive_init",
    "pkey_hkdf_cleanup",
    "pkey_hkdf_ctrl_str",
    "pkey_hkdf_init",
    "pkey_hkdf_ctrl.cold"
],
"ghidra/libsgx_tsgxssl_crypto_a/hmac.o": [
    "HMAC_Init_ex",
    "HMAC_Update",
    "HMAC_Final",
    "HMAC_size",
    "HMAC_CTX_free",
    "HMAC_CTX_reset",
    "HMAC_Init",
    "HMAC_CTX_new",
    "HMAC_CTX_copy",
    "HMAC",
    "HMAC_CTX_set_flags",
    "HMAC_CTX_get_md"
],
"ghidra/libsgx_tsgxssl_crypto_a/hm_ameth.o": [
    "hmac_size",
    "hmac_pkey_ctrl",
    "hmac_get_priv_key",
    "hmac_key_free",
    "hmac_pkey_public_cmp",
    "hmac_set_priv_key"
],
"ghidra/libsgx_tsgxssl_crypto_a/hm_pmeth.o": [
    "pkey_hmac_ctrl",
    "hmac_signctx",
    "hmac_signctx_init",
    "int_update",
    "pkey_hmac_keygen",
    "pkey_hmac_cleanup",
    "pkey_hmac_ctrl_str",
    "pkey_hmac_init",
    "pkey_hmac_copy"
],
"ghidra/libsgx_tsgxssl_crypto_a/i2d_pr.o": [
    "i2d_PrivateKey"
],
"ghidra/libsgx_tsgxssl_crypto_a/i2d_pu.o": [
    "i2d_PublicKey"
],
"ghidra/libsgx_tsgxssl_crypto_a/init.o": [
    "ossl_init_no_register_atexit_ossl_",
    "ossl_init_load_crypto_nodelete_ossl_",
    "ossl_init_no_load_crypto_strings_ossl_",
    "ossl_init_no_add_all_ciphers_ossl_",
    "ossl_init_no_add_all_digests_ossl_",
    "ossl_init_zlib_ossl_",
    "ossl_init_engine_dynamic_ossl_",
    "ossl_init_engine_rdrand_ossl_",
    "ossl_init_engine_openssl_ossl_",
    "ossl_init_async_ossl_",
    "ossl_init_config_ossl_",
    "ossl_init_no_config_ossl_",
    "ossl_init_add_all_digests_ossl_",
    "ossl_init_add_all_ciphers_ossl_",
    "ossl_init_load_crypto_strings_ossl_",
    "ossl_init_register_atexit_ossl_",
    "ossl_init_base_ossl_",
    "OPENSSL_cleanup",
    "ossl_init_thread_destructor",
    "OPENSSL_thread_stop",
    "OPENSSL_init_crypto",
    "ossl_init_thread_start",
    "OPENSSL_atexit",
    "OPENSSL_fork_prepare",
    "OPENSSL_fork_parent",
    "OPENSSL_fork_child"
],
"ghidra/libsgx_tsgxssl_crypto_a/kdf_err.o": [
    "ERR_load_KDF_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/keccak1600-x86_64.o": [
    "__KeccakF1600",
    "KeccakF1600",
    "SHA3_absorb",
    "SHA3_squeeze"
],
"ghidra/libsgx_tsgxssl_crypto_a/lhash.o": [
    "getrn",
    "OPENSSL_LH_strhash",
    "OPENSSL_LH_new",
    "OPENSSL_LH_free",
    "OPENSSL_LH_insert",
    "OPENSSL_LH_delete",
    "OPENSSL_LH_retrieve",
    "OPENSSL_LH_doall",
    "OPENSSL_LH_doall_arg",
    "openssl_lh_strcasehash",
    "OPENSSL_LH_num_items",
    "OPENSSL_LH_get_down_load",
    "OPENSSL_LH_set_down_load",
    "OPENSSL_LH_error"
],
"ghidra/libsgx_tsgxssl_crypto_a/lh_stats.o": [
    "OPENSSL_LH_stats_bio",
    "OPENSSL_LH_node_stats_bio",
    "OPENSSL_LH_node_usage_stats_bio"
],
"ghidra/libsgx_tsgxssl_crypto_a/loader_file.o": [
    "file_expect",
    "file_error",
    "store_file_loader_deinit",
    "file_get_pass",
    "file_get_pem_pass",
    "try_decode_PrivateKey",
    "try_decode_PUBKEY",
    "try_decode_params",
    "try_decode_X509CRL",
    "try_decode_X509Certificate",
    "try_decode_PKCS8Encrypted",
    "destroy_ctx_PKCS12",
    "try_decode_PKCS12",
    "file_open",
    "file_ctrl",
    "file_eof",
    "eof_PKCS12",
    "file_find",
    "file_close",
    "file_load",
    "ossl_store_file_attach_pem_bio_int",
    "ossl_store_file_detach_pem_bio_int",
    "ossl_store_file_loader_init"
],
"ghidra/libsgx_tsgxssl_crypto_a/m_blake2b.o": [
    "final",
    "update",
    "init",
    "EVP_blake2b512"
],
"ghidra/libsgx_tsgxssl_crypto_a/m_blake2s.o": [
    "final",
    "update",
    "init",
    "EVP_blake2s256"
],
"ghidra/libsgx_tsgxssl_crypto_a/md5_dgst.o": [
    "MD5_Update",
    "MD5_Transform",
    "MD5_Final",
    "MD5_Init"
],
"ghidra/libsgx_tsgxssl_crypto_a/md5_one.o": [
    "MD5"
],
"ghidra/libsgx_tsgxssl_crypto_a/md5-x86_64.o": [
    "md5_block_asm_data_order"
],
"ghidra/libsgx_tsgxssl_crypto_a/mem_dbg.o": [
    "CRYPTO_mem_ctrl"
],
"ghidra/libsgx_tsgxssl_crypto_a/mem.o": [
    "CRYPTO_free",
    "CRYPTO_malloc",
    "CRYPTO_realloc",
    "CRYPTO_set_mem_functions",
    "CRYPTO_set_mem_debug",
    "CRYPTO_get_mem_functions",
    "CRYPTO_zalloc",
    "CRYPTO_clear_free",
    "CRYPTO_clear_realloc"
],
"ghidra/libsgx_tsgxssl_crypto_a/mem_sec.o": [
    "sh_setbit",
    "sh_add_to_list",
    "sh_clearbit",
    "sh_testbit",
    "sh_actual_size",
    "sh_free",
    "CRYPTO_secure_malloc_init",
    "CRYPTO_secure_malloc_done",
    "CRYPTO_secure_malloc_initialized",
    "CRYPTO_secure_malloc",
    "CRYPTO_secure_zalloc",
    "CRYPTO_secure_allocated",
    "CRYPTO_secure_free",
    "CRYPTO_secure_clear_free",
    "CRYPTO_secure_used",
    "CRYPTO_secure_actual_size"
],
"ghidra/libsgx_tsgxssl_crypto_a/m_md2.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/m_md4.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/m_md5.o": [
    "final",
    "update",
    "init",
    "EVP_md5"
],
"ghidra/libsgx_tsgxssl_crypto_a/m_md5_sha1.o": [
    "update",
    "final",
    "init",
    "ctrl",
    "EVP_md5_sha1"
],
"ghidra/libsgx_tsgxssl_crypto_a/m_mdc2.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/m_null.o": [
    "init",
    "update",
    "final",
    "EVP_md_null"
],
"ghidra/libsgx_tsgxssl_crypto_a/m_ripemd.o": [
    "final",
    "update",
    "init",
    "EVP_ripemd160"
],
"ghidra/libsgx_tsgxssl_crypto_a/m_sha1.o": [
    "update",
    "final",
    "init",
    "final224",
    "update224",
    "init224",
    "final256",
    "update256",
    "init256",
    "final512",
    "update512",
    "init512_224",
    "init512_256",
    "final384",
    "update384",
    "init384",
    "init512",
    "ctrl",
    "EVP_sha1",
    "EVP_sha224",
    "EVP_sha256",
    "EVP_sha512_224",
    "EVP_sha512_256",
    "EVP_sha384",
    "EVP_sha512"
],
"ghidra/libsgx_tsgxssl_crypto_a/m_sha3.o": [
    "shake_ctrl",
    "sha3_init",
    "sha3_final",
    "sha3_update",
    "shake_init",
    "EVP_sha3_224",
    "EVP_sha3_256",
    "EVP_sha3_384",
    "EVP_sha3_512",
    "EVP_shake128",
    "EVP_shake256"
],
"ghidra/libsgx_tsgxssl_crypto_a/m_sigver.o": [
    "update",
    "EVP_DigestSignInit",
    "EVP_DigestVerifyInit",
    "EVP_DigestSignFinal",
    "EVP_DigestSign",
    "EVP_DigestVerifyFinal",
    "EVP_DigestVerify"
],
"ghidra/libsgx_tsgxssl_crypto_a/m_sm3.o": [
    "final",
    "update",
    "init",
    "EVP_sm3"
],
"ghidra/libsgx_tsgxssl_crypto_a/m_wp.o": [
    "final",
    "update",
    "init",
    "EVP_whirlpool"
],
"ghidra/libsgx_tsgxssl_crypto_a/names.o": [
    "do_all_cipher_fn",
    "do_all_md_fn",
    "EVP_add_cipher",
    "EVP_add_digest",
    "EVP_get_cipherbyname",
    "EVP_get_digestbyname",
    "evp_cleanup_int",
    "EVP_CIPHER_do_all",
    "EVP_CIPHER_do_all_sorted",
    "EVP_MD_do_all",
    "EVP_MD_do_all_sorted"
],
"ghidra/libsgx_tsgxssl_crypto_a/n_pkey.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/nsseq.o": [
    "nsseq_cb",
    "d2i_NETSCAPE_CERT_SEQUENCE",
    "i2d_NETSCAPE_CERT_SEQUENCE",
    "NETSCAPE_CERT_SEQUENCE_new",
    "NETSCAPE_CERT_SEQUENCE_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/obj_dat.o": [
    "cleanup1_doall",
    "cleanup2_doall",
    "cleanup3_doall",
    "added_obj_cmp",
    "ln_cmp_BSEARCH_CMP_FN",
    "sn_cmp_BSEARCH_CMP_FN",
    "added_obj_hash",
    "obj_cmp_BSEARCH_CMP_FN",
    "obj_cleanup_int",
    "OBJ_new_nid",
    "OBJ_add_object",
    "OBJ_nid2obj",
    "OBJ_nid2sn",
    "OBJ_nid2ln",
    "OBJ_bsearch_ex_",
    "OBJ_bsearch_",
    "OBJ_obj2nid",
    "OBJ_obj2txt",
    "OBJ_ln2nid",
    "OBJ_sn2nid",
    "OBJ_txt2obj",
    "OBJ_txt2nid",
    "OBJ_create",
    "OBJ_create_objects",
    "OBJ_length",
    "OBJ_get0_data"
],
"ghidra/libsgx_tsgxssl_crypto_a/obj_err.o": [
    "ERR_load_OBJ_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/obj_lib.o": [
    "OBJ_dup",
    "OBJ_cmp"
],
"ghidra/libsgx_tsgxssl_crypto_a/obj_xref.o": [
    "sig_cmp_BSEARCH_CMP_FN",
    "sig_sk_cmp",
    "sigx_cmp",
    "sigx_cmp_BSEARCH_CMP_FN",
    "sid_free",
    "OBJ_find_sigid_algs",
    "OBJ_find_sigid_by_algs",
    "OBJ_add_sigid",
    "OBJ_sigid_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/ocb128.o": [
    "ocb_lookup_l",
    "CRYPTO_ocb128_init",
    "CRYPTO_ocb128_new",
    "CRYPTO_ocb128_copy_ctx",
    "CRYPTO_ocb128_setiv",
    "CRYPTO_ocb128_aad",
    "CRYPTO_ocb128_encrypt",
    "CRYPTO_ocb128_decrypt",
    "CRYPTO_ocb128_finish",
    "CRYPTO_ocb128_tag",
    "CRYPTO_ocb128_cleanup"
],
"ghidra/libsgx_tsgxssl_crypto_a/ocsp_asn.o": [
    "d2i_OCSP_SIGNATURE",
    "i2d_OCSP_SIGNATURE",
    "OCSP_SIGNATURE_new",
    "OCSP_SIGNATURE_free",
    "d2i_OCSP_CERTID",
    "i2d_OCSP_CERTID",
    "OCSP_CERTID_new",
    "OCSP_CERTID_free",
    "d2i_OCSP_ONEREQ",
    "i2d_OCSP_ONEREQ",
    "OCSP_ONEREQ_new",
    "OCSP_ONEREQ_free",
    "d2i_OCSP_REQINFO",
    "i2d_OCSP_REQINFO",
    "OCSP_REQINFO_new",
    "OCSP_REQINFO_free",
    "d2i_OCSP_REQUEST",
    "i2d_OCSP_REQUEST",
    "OCSP_REQUEST_new",
    "OCSP_REQUEST_free",
    "d2i_OCSP_RESPBYTES",
    "i2d_OCSP_RESPBYTES",
    "OCSP_RESPBYTES_new",
    "OCSP_RESPBYTES_free",
    "d2i_OCSP_RESPONSE",
    "i2d_OCSP_RESPONSE",
    "OCSP_RESPONSE_new",
    "OCSP_RESPONSE_free",
    "d2i_OCSP_RESPID",
    "i2d_OCSP_RESPID",
    "OCSP_RESPID_new",
    "OCSP_RESPID_free",
    "d2i_OCSP_REVOKEDINFO",
    "i2d_OCSP_REVOKEDINFO",
    "OCSP_REVOKEDINFO_new",
    "OCSP_REVOKEDINFO_free",
    "d2i_OCSP_CERTSTATUS",
    "i2d_OCSP_CERTSTATUS",
    "OCSP_CERTSTATUS_new",
    "OCSP_CERTSTATUS_free",
    "d2i_OCSP_SINGLERESP",
    "i2d_OCSP_SINGLERESP",
    "OCSP_SINGLERESP_new",
    "OCSP_SINGLERESP_free",
    "d2i_OCSP_RESPDATA",
    "i2d_OCSP_RESPDATA",
    "OCSP_RESPDATA_new",
    "OCSP_RESPDATA_free",
    "d2i_OCSP_BASICRESP",
    "i2d_OCSP_BASICRESP",
    "OCSP_BASICRESP_new",
    "OCSP_BASICRESP_free",
    "d2i_OCSP_CRLID",
    "i2d_OCSP_CRLID",
    "OCSP_CRLID_new",
    "OCSP_CRLID_free",
    "d2i_OCSP_SERVICELOC",
    "i2d_OCSP_SERVICELOC",
    "OCSP_SERVICELOC_new",
    "OCSP_SERVICELOC_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/ocsp_cl.o": [
    "OCSP_request_add0_id",
    "OCSP_request_set1_name",
    "OCSP_request_add1_cert",
    "OCSP_request_sign",
    "OCSP_response_status",
    "OCSP_response_get1_basic",
    "OCSP_resp_get0_signature",
    "OCSP_resp_get0_tbs_sigalg",
    "OCSP_resp_get0_respdata",
    "OCSP_resp_count",
    "OCSP_resp_get0",
    "OCSP_resp_get0_produced_at",
    "OCSP_resp_get0_certs",
    "OCSP_resp_get0_id",
    "OCSP_resp_get1_id",
    "OCSP_resp_find",
    "OCSP_single_get0_status",
    "OCSP_resp_find_status",
    "OCSP_check_validity",
    "OCSP_SINGLERESP_get0_id"
],
"ghidra/libsgx_tsgxssl_crypto_a/ocsp_err.o": [
    "ERR_load_OCSP_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/ocsp_ext.o": [
    "OCSP_REQUEST_get_ext_count",
    "OCSP_REQUEST_get_ext_by_NID",
    "OCSP_REQUEST_get_ext_by_OBJ",
    "OCSP_REQUEST_get_ext_by_critical",
    "OCSP_REQUEST_get_ext",
    "OCSP_REQUEST_delete_ext",
    "OCSP_REQUEST_get1_ext_d2i",
    "OCSP_REQUEST_add1_ext_i2d",
    "OCSP_REQUEST_add_ext",
    "OCSP_ONEREQ_get_ext_count",
    "OCSP_ONEREQ_get_ext_by_NID",
    "OCSP_ONEREQ_get_ext_by_OBJ",
    "OCSP_ONEREQ_get_ext_by_critical",
    "OCSP_ONEREQ_get_ext",
    "OCSP_ONEREQ_delete_ext",
    "OCSP_ONEREQ_get1_ext_d2i",
    "OCSP_ONEREQ_add1_ext_i2d",
    "OCSP_ONEREQ_add_ext",
    "OCSP_BASICRESP_get_ext_count",
    "OCSP_BASICRESP_get_ext_by_NID",
    "OCSP_BASICRESP_get_ext_by_OBJ",
    "OCSP_BASICRESP_get_ext_by_critical",
    "OCSP_BASICRESP_get_ext",
    "OCSP_BASICRESP_delete_ext",
    "OCSP_BASICRESP_get1_ext_d2i",
    "OCSP_BASICRESP_add1_ext_i2d",
    "OCSP_BASICRESP_add_ext",
    "OCSP_SINGLERESP_get_ext_count",
    "OCSP_SINGLERESP_get_ext_by_NID",
    "OCSP_SINGLERESP_get_ext_by_OBJ",
    "OCSP_SINGLERESP_get_ext_by_critical",
    "OCSP_SINGLERESP_get_ext",
    "OCSP_SINGLERESP_delete_ext",
    "OCSP_SINGLERESP_get1_ext_d2i",
    "OCSP_SINGLERESP_add1_ext_i2d",
    "OCSP_SINGLERESP_add_ext",
    "OCSP_request_add1_nonce",
    "OCSP_basic_add1_nonce",
    "OCSP_check_nonce",
    "OCSP_copy_nonce",
    "OCSP_crlID_new",
    "OCSP_accept_responses_new",
    "OCSP_archive_cutoff_new",
    "OCSP_url_svcloc_new"
],
"ghidra/libsgx_tsgxssl_crypto_a/ocsp_ht.o": [
    "OCSP_REQ_CTX_free",
    "OCSP_REQ_CTX_new",
    "OCSP_REQ_CTX_get0_mem_bio",
    "OCSP_set_max_response_length",
    "OCSP_REQ_CTX_i2d",
    "OCSP_REQ_CTX_http",
    "OCSP_REQ_CTX_set1_req",
    "OCSP_REQ_CTX_add1_header",
    "OCSP_sendreq_new",
    "OCSP_REQ_CTX_nbio",
    "OCSP_REQ_CTX_nbio_d2i",
    "OCSP_sendreq_nbio",
    "OCSP_sendreq_bio"
],
"ghidra/libsgx_tsgxssl_crypto_a/ocsp_lib.o": [
    "OCSP_cert_id_new",
    "OCSP_cert_to_id",
    "OCSP_id_issuer_cmp",
    "OCSP_id_cmp",
    "OCSP_parse_url",
    "OCSP_CERTID_dup"
],
"ghidra/libsgx_tsgxssl_crypto_a/ocsp_prn.o": [
    "ocsp_certid_print",
    "OCSP_response_status_str",
    "OCSP_cert_status_str",
    "OCSP_crl_reason_str",
    "OCSP_REQUEST_print",
    "OCSP_RESPONSE_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/ocsp_srv.o": [
    "OCSP_request_onereq_count",
    "OCSP_request_onereq_get0",
    "OCSP_onereq_get0_id",
    "OCSP_id_get0_info",
    "OCSP_request_is_signed",
    "OCSP_response_create",
    "OCSP_basic_add1_status",
    "OCSP_basic_add1_cert",
    "OCSP_RESPID_set_by_name",
    "OCSP_RESPID_set_by_key",
    "OCSP_basic_sign_ctx",
    "OCSP_basic_sign",
    "OCSP_RESPID_match"
],
"ghidra/libsgx_tsgxssl_crypto_a/ocsp_vfy.o": [
    "ocsp_match_issuerid",
    "OCSP_basic_verify",
    "OCSP_resp_get0_signer",
    "OCSP_request_verify"
],
"ghidra/libsgx_tsgxssl_crypto_a/o_dir.o": [
    "OPENSSL_DIR_read",
    "OPENSSL_DIR_end"
],
"ghidra/libsgx_tsgxssl_crypto_a/ofb128.o": [
    "CRYPTO_ofb128_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/ofb64ede.o": [
    "DES_ede3_ofb64_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/ofb64enc.o": [
    "DES_ofb64_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/ofb_enc.o": [
    "DES_ofb_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/o_fips.o": [
    "FIPS_mode",
    "FIPS_mode_set"
],
"ghidra/libsgx_tsgxssl_crypto_a/o_fopen.o": [
    "openssl_fopen"
],
"ghidra/libsgx_tsgxssl_crypto_a/o_init.o": [
    "OPENSSL_init"
],
"ghidra/libsgx_tsgxssl_crypto_a/o_names.o": [
    "obj_name_hash",
    "o_names_init_ossl_",
    "name_funcs_free",
    "do_all_sorted_cmp",
    "do_all_fn",
    "do_all_sorted_fn",
    "obj_name_cmp",
    "OBJ_NAME_init",
    "OBJ_NAME_new_index",
    "OBJ_NAME_get",
    "OBJ_NAME_add",
    "OBJ_NAME_remove",
    "names_lh_free_doall",
    "OBJ_NAME_do_all",
    "OBJ_NAME_do_all_sorted",
    "OBJ_NAME_cleanup"
],
"ghidra/libsgx_tsgxssl_crypto_a/o_str.o": [
    "OPENSSL_memcmp",
    "CRYPTO_strdup",
    "CRYPTO_memdup",
    "OPENSSL_strnlen",
    "CRYPTO_strndup",
    "OPENSSL_strlcpy",
    "OPENSSL_strlcat",
    "OPENSSL_hexchar2int",
    "OPENSSL_hexstr2buf",
    "OPENSSL_buf2hexstr",
    "openssl_strerror_r"
],
"ghidra/libsgx_tsgxssl_crypto_a/o_time.o": [
    "OPENSSL_gmtime",
    "OPENSSL_gmtime_adj",
    "OPENSSL_gmtime_diff"
],
"ghidra/libsgx_tsgxssl_crypto_a/p12_add.o": [
    "PKCS12_item_pack_safebag",
    "PKCS12_pack_p7data",
    "PKCS12_unpack_p7data",
    "PKCS12_pack_p7encdata",
    "PKCS12_unpack_p7encdata",
    "PKCS12_decrypt_skey",
    "PKCS12_pack_authsafes",
    "PKCS12_unpack_authsafes"
],
"ghidra/libsgx_tsgxssl_crypto_a/p12_asn.o": [
    "d2i_PKCS12",
    "i2d_PKCS12",
    "PKCS12_new",
    "PKCS12_free",
    "d2i_PKCS12_MAC_DATA",
    "i2d_PKCS12_MAC_DATA",
    "PKCS12_MAC_DATA_new",
    "PKCS12_MAC_DATA_free",
    "d2i_PKCS12_BAGS",
    "i2d_PKCS12_BAGS",
    "PKCS12_BAGS_new",
    "PKCS12_BAGS_free",
    "d2i_PKCS12_SAFEBAG",
    "i2d_PKCS12_SAFEBAG",
    "PKCS12_SAFEBAG_new",
    "PKCS12_SAFEBAG_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/p12_attr.o": [
    "PKCS12_add_localkeyid",
    "PKCS8_add_keyusage",
    "PKCS12_add_friendlyname_asc",
    "PKCS12_add_friendlyname_utf8",
    "PKCS12_add_friendlyname_uni",
    "PKCS12_add_CSPName_asc",
    "PKCS12_get_attr_gen",
    "PKCS12_get_friendlyname",
    "PKCS12_SAFEBAG_get0_attrs"
],
"ghidra/libsgx_tsgxssl_crypto_a/p12_crpt.o": [
    "PKCS12_PBE_add",
    "PKCS12_PBE_keyivgen"
],
"ghidra/libsgx_tsgxssl_crypto_a/p12_crt.o": [
    "PKCS12_add_cert",
    "PKCS12_add_key",
    "PKCS12_add_safe",
    "PKCS12_add_safes",
    "PKCS12_create"
],
"ghidra/libsgx_tsgxssl_crypto_a/p12_decr.o": [
    "PKCS12_pbe_crypt",
    "PKCS12_item_decrypt_d2i",
    "PKCS12_item_i2d_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/p12_init.o": [
    "PKCS12_init"
],
"ghidra/libsgx_tsgxssl_crypto_a/p12_key.o": [
    "PKCS12_key_gen_uni",
    "PKCS12_key_gen_asc",
    "PKCS12_key_gen_utf8"
],
"ghidra/libsgx_tsgxssl_crypto_a/p12_kiss.o": [
    "parse_bag.constprop.0",
    "PKCS12_parse"
],
"ghidra/libsgx_tsgxssl_crypto_a/p12_mutl.o": [
    "pkcs12_gen_mac.isra.0",
    "PKCS12_mac_present",
    "PKCS12_get0_mac",
    "PKCS12_gen_mac",
    "PKCS12_verify_mac",
    "PKCS12_setup_mac",
    "PKCS12_set_mac"
],
"ghidra/libsgx_tsgxssl_crypto_a/p12_npas.o": [
    "PKCS12_newpass"
],
"ghidra/libsgx_tsgxssl_crypto_a/p12_p8d.o": [
    "PKCS8_decrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/p12_p8e.o": [
    "PKCS8_set0_pbe",
    "PKCS8_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/p12_sbag.o": [
    "PKCS12_get_attr",
    "PKCS12_SAFEBAG_get0_attr",
    "PKCS8_get_attr",
    "PKCS12_SAFEBAG_get0_pkcs8",
    "PKCS12_SAFEBAG_get0_safes",
    "PKCS12_SAFEBAG_get0_type",
    "PKCS12_SAFEBAG_get_nid",
    "PKCS12_SAFEBAG_get0_p8inf",
    "PKCS12_SAFEBAG_get_bag_nid",
    "PKCS12_SAFEBAG_get1_cert",
    "PKCS12_SAFEBAG_get1_crl",
    "PKCS12_SAFEBAG_create_cert",
    "PKCS12_SAFEBAG_create_crl",
    "PKCS12_SAFEBAG_create0_p8inf",
    "PKCS12_SAFEBAG_create0_pkcs8",
    "PKCS12_SAFEBAG_create_pkcs8_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/p12_utl.o": [
    "OPENSSL_asc2uni",
    "OPENSSL_uni2asc",
    "OPENSSL_utf82uni",
    "OPENSSL_uni2utf8",
    "i2d_PKCS12_bio",
    "d2i_PKCS12_bio"
],
"ghidra/libsgx_tsgxssl_crypto_a/p5_crpt2.o": [
    "PKCS5_PBKDF2_HMAC",
    "PKCS5_PBKDF2_HMAC_SHA1",
    "PKCS5_v2_PBE_keyivgen",
    "PKCS5_v2_PBKDF2_keyivgen"
],
"ghidra/libsgx_tsgxssl_crypto_a/p5_crpt.o": [
    "PKCS5_PBE_add",
    "PKCS5_PBE_keyivgen"
],
"ghidra/libsgx_tsgxssl_crypto_a/p5_pbe.o": [
    "d2i_PBEPARAM",
    "i2d_PBEPARAM",
    "PBEPARAM_new",
    "PBEPARAM_free",
    "PKCS5_pbe_set0_algor",
    "PKCS5_pbe_set"
],
"ghidra/libsgx_tsgxssl_crypto_a/p5_pbev2.o": [
    "d2i_PBE2PARAM",
    "i2d_PBE2PARAM",
    "PBE2PARAM_new",
    "PBE2PARAM_free",
    "d2i_PBKDF2PARAM",
    "i2d_PBKDF2PARAM",
    "PBKDF2PARAM_new",
    "PBKDF2PARAM_free",
    "PKCS5_pbkdf2_set",
    "PKCS5_pbe2_set_iv",
    "PKCS5_pbe2_set"
],
"ghidra/libsgx_tsgxssl_crypto_a/p5_scrypt.o": [
    "d2i_SCRYPT_PARAMS",
    "i2d_SCRYPT_PARAMS",
    "SCRYPT_PARAMS_new",
    "SCRYPT_PARAMS_free",
    "PKCS5_pbe2_set_scrypt",
    "PKCS5_v2_scrypt_keyivgen"
],
"ghidra/libsgx_tsgxssl_crypto_a/p8_pkey.o": [
    "pkey_cb",
    "d2i_PKCS8_PRIV_KEY_INFO",
    "i2d_PKCS8_PRIV_KEY_INFO",
    "PKCS8_PRIV_KEY_INFO_new",
    "PKCS8_PRIV_KEY_INFO_free",
    "PKCS8_pkey_set0",
    "PKCS8_pkey_get0",
    "PKCS8_pkey_get0_attrs",
    "PKCS8_pkey_add1_attr_by_NID"
],
"ghidra/libsgx_tsgxssl_crypto_a/pbe_scrypt.o": [
    "scryptBlockMix",
    "EVP_PBE_scrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/pcbc_enc.o": [
    "DES_pcbc_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/pcy_cache.o": [
    "policy_data_cmp",
    "policy_cache_free",
    "policy_cache_set",
    "policy_cache_find_data"
],
"ghidra/libsgx_tsgxssl_crypto_a/pcy_data.o": [
    "policy_data_free",
    "policy_data_new"
],
"ghidra/libsgx_tsgxssl_crypto_a/pcy_lib.o": [
    "X509_policy_tree_level_count",
    "X509_policy_tree_get0_level",
    "X509_policy_tree_get0_policies",
    "X509_policy_tree_get0_user_policies",
    "X509_policy_level_node_count",
    "X509_policy_level_get0_node",
    "X509_policy_node_get0_policy",
    "X509_policy_node_get0_qualifiers",
    "X509_policy_node_get0_parent"
],
"ghidra/libsgx_tsgxssl_crypto_a/pcy_map.o": [
    "policy_cache_set_mapping"
],
"ghidra/libsgx_tsgxssl_crypto_a/pcy_node.o": [
    "node_cmp",
    "policy_node_cmp_new",
    "tree_find_sk",
    "level_find_node",
    "policy_node_free",
    "level_add_node",
    "policy_node_match"
],
"ghidra/libsgx_tsgxssl_crypto_a/pcy_tree.o": [
    "exnode_free",
    "X509_policy_tree_free",
    "X509_policy_check"
],
"ghidra/libsgx_tsgxssl_crypto_a/p_dec.o": [
    "EVP_PKEY_decrypt_old"
],
"ghidra/libsgx_tsgxssl_crypto_a/pem_all.o": [
    "PEM_read_bio_X509_REQ",
    "PEM_write_bio_X509_REQ",
    "PEM_write_bio_X509_REQ_NEW",
    "PEM_read_bio_X509_CRL",
    "PEM_write_bio_X509_CRL",
    "PEM_read_bio_PKCS7",
    "PEM_write_bio_PKCS7",
    "PEM_read_bio_NETSCAPE_CERT_SEQUENCE",
    "PEM_write_bio_NETSCAPE_CERT_SEQUENCE",
    "PEM_read_bio_RSAPrivateKey",
    "PEM_write_bio_RSAPrivateKey",
    "PEM_read_bio_RSAPublicKey",
    "PEM_write_bio_RSAPublicKey",
    "PEM_read_bio_RSA_PUBKEY",
    "PEM_write_bio_RSA_PUBKEY",
    "PEM_read_bio_DSAPrivateKey",
    "PEM_write_bio_DSAPrivateKey",
    "PEM_read_bio_DSA_PUBKEY",
    "PEM_write_bio_DSA_PUBKEY",
    "PEM_read_bio_DSAparams",
    "PEM_write_bio_DSAparams",
    "PEM_read_bio_ECPrivateKey",
    "PEM_read_bio_ECPKParameters",
    "PEM_write_bio_ECPKParameters",
    "PEM_write_bio_ECPrivateKey",
    "PEM_read_bio_EC_PUBKEY",
    "PEM_write_bio_EC_PUBKEY",
    "PEM_write_bio_DHparams",
    "PEM_write_bio_DHxparams",
    "PEM_read_bio_PUBKEY",
    "PEM_write_bio_PUBKEY"
],
"ghidra/libsgx_tsgxssl_crypto_a/pem_err.o": [
    "ERR_load_PEM_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/pem_info.o": [
    "PEM_X509_INFO_read_bio",
    "PEM_X509_INFO_write_bio"
],
"ghidra/libsgx_tsgxssl_crypto_a/pem_lib.o": [
    "sanitize_line",
    "PEM_def_callback",
    "PEM_proc_type",
    "PEM_dek_info",
    "PEM_do_header",
    "PEM_get_EVP_CIPHER_INFO",
    "PEM_write_bio",
    "PEM_ASN1_write_bio",
    "PEM_read_bio_ex",
    "PEM_read_bio",
    "pem_check_suffix",
    "pem_bytes_read_bio_flags",
    "PEM_bytes_read_bio",
    "PEM_bytes_read_bio_secmem"
],
"ghidra/libsgx_tsgxssl_crypto_a/pem_oth.o": [
    "PEM_ASN1_read_bio"
],
"ghidra/libsgx_tsgxssl_crypto_a/pem_pk8.o": [
    "d2i_PKCS8PrivateKey_bio",
    "PEM_read_bio_PKCS8",
    "PEM_write_bio_PKCS8",
    "PEM_read_bio_PKCS8_PRIV_KEY_INFO",
    "PEM_write_bio_PKCS8_PRIV_KEY_INFO",
    "do_pk8pkey",
    "PEM_write_bio_PKCS8PrivateKey_nid",
    "PEM_write_bio_PKCS8PrivateKey",
    "i2d_PKCS8PrivateKey_bio",
    "i2d_PKCS8PrivateKey_nid_bio"
],
"ghidra/libsgx_tsgxssl_crypto_a/pem_pkey.o": [
    "PEM_read_bio_PrivateKey",
    "PEM_write_bio_PrivateKey_traditional",
    "PEM_write_bio_PrivateKey",
    "PEM_read_bio_Parameters",
    "PEM_write_bio_Parameters",
    "PEM_read_bio_DHparams"
],
"ghidra/libsgx_tsgxssl_crypto_a/pem_sign.o": [
    "PEM_SignInit",
    "PEM_SignUpdate",
    "PEM_SignFinal"
],
"ghidra/libsgx_tsgxssl_crypto_a/pem_x509.o": [
    "PEM_read_bio_X509",
    "PEM_write_bio_X509"
],
"ghidra/libsgx_tsgxssl_crypto_a/pem_xaux.o": [
    "PEM_read_bio_X509_AUX",
    "PEM_write_bio_X509_AUX"
],
"ghidra/libsgx_tsgxssl_crypto_a/p_enc.o": [
    "EVP_PKEY_encrypt_old"
],
"ghidra/libsgx_tsgxssl_crypto_a/pk12err.o": [
    "ERR_load_PKCS12_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/pk7_asn1.o": [
    "pk7_cb",
    "si_cb",
    "ri_cb",
    "d2i_PKCS7",
    "i2d_PKCS7",
    "PKCS7_new",
    "PKCS7_free",
    "i2d_PKCS7_NDEF",
    "PKCS7_dup",
    "d2i_PKCS7_SIGNED",
    "i2d_PKCS7_SIGNED",
    "PKCS7_SIGNED_new",
    "PKCS7_SIGNED_free",
    "d2i_PKCS7_SIGNER_INFO",
    "i2d_PKCS7_SIGNER_INFO",
    "PKCS7_SIGNER_INFO_new",
    "PKCS7_SIGNER_INFO_free",
    "d2i_PKCS7_ISSUER_AND_SERIAL",
    "i2d_PKCS7_ISSUER_AND_SERIAL",
    "PKCS7_ISSUER_AND_SERIAL_new",
    "PKCS7_ISSUER_AND_SERIAL_free",
    "d2i_PKCS7_ENVELOPE",
    "i2d_PKCS7_ENVELOPE",
    "PKCS7_ENVELOPE_new",
    "PKCS7_ENVELOPE_free",
    "d2i_PKCS7_RECIP_INFO",
    "i2d_PKCS7_RECIP_INFO",
    "PKCS7_RECIP_INFO_new",
    "PKCS7_RECIP_INFO_free",
    "d2i_PKCS7_ENC_CONTENT",
    "i2d_PKCS7_ENC_CONTENT",
    "PKCS7_ENC_CONTENT_new",
    "PKCS7_ENC_CONTENT_free",
    "d2i_PKCS7_SIGN_ENVELOPE",
    "i2d_PKCS7_SIGN_ENVELOPE",
    "PKCS7_SIGN_ENVELOPE_new",
    "PKCS7_SIGN_ENVELOPE_free",
    "d2i_PKCS7_ENCRYPT",
    "i2d_PKCS7_ENCRYPT",
    "PKCS7_ENCRYPT_new",
    "PKCS7_ENCRYPT_free",
    "d2i_PKCS7_DIGEST",
    "i2d_PKCS7_DIGEST",
    "PKCS7_DIGEST_new",
    "PKCS7_DIGEST_free",
    "PKCS7_print_ctx"
],
"ghidra/libsgx_tsgxssl_crypto_a/pk7_attr.o": [
    "PKCS7_add_attrib_smimecap",
    "PKCS7_get_smimecap",
    "PKCS7_simple_smimecap",
    "PKCS7_add_attrib_content_type",
    "PKCS7_add0_attrib_signing_time",
    "PKCS7_add1_attrib_digest"
],
"ghidra/libsgx_tsgxssl_crypto_a/pk7_doit.o": [
    "pkcs7_decrypt_rinfo",
    "add_attribute",
    "PKCS7_bio_add_digest.isra.0",
    "PKCS7_find_digest",
    "PKCS7_dataInit",
    "PKCS7_dataDecode",
    "PKCS7_SIGNER_INFO_sign",
    "PKCS7_get_issuer_and_serial",
    "PKCS7_get_signed_attribute",
    "PKCS7_dataFinal",
    "PKCS7_get_attribute",
    "PKCS7_digest_from_attributes",
    "PKCS7_signatureVerify",
    "PKCS7_dataVerify",
    "PKCS7_set_signed_attributes",
    "PKCS7_set_attributes",
    "PKCS7_add_signed_attribute",
    "PKCS7_add_attribute"
],
"ghidra/libsgx_tsgxssl_crypto_a/pk7_lib.o": [
    "PKCS7_ctrl",
    "PKCS7_set_content",
    "PKCS7_set_type",
    "PKCS7_content_new",
    "PKCS7_set0_type_other",
    "PKCS7_add_signer",
    "PKCS7_add_certificate",
    "PKCS7_add_crl",
    "PKCS7_SIGNER_INFO_set",
    "PKCS7_add_signature",
    "PKCS7_set_digest",
    "PKCS7_get_signer_info",
    "PKCS7_SIGNER_INFO_get0_algs",
    "PKCS7_RECIP_INFO_get0_alg",
    "PKCS7_add_recipient_info",
    "PKCS7_RECIP_INFO_set",
    "PKCS7_add_recipient",
    "PKCS7_cert_from_signer_info",
    "PKCS7_set_cipher",
    "PKCS7_stream"
],
"ghidra/libsgx_tsgxssl_crypto_a/pk7_mime.o": [
    "i2d_PKCS7_bio_stream",
    "PEM_write_bio_PKCS7_stream",
    "SMIME_write_PKCS7",
    "SMIME_read_PKCS7"
],
"ghidra/libsgx_tsgxssl_crypto_a/pk7_smime.o": [
    "PKCS7_final",
    "PKCS7_sign_add_signer",
    "PKCS7_sign",
    "PKCS7_get0_signers",
    "PKCS7_verify",
    "PKCS7_encrypt",
    "PKCS7_decrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/pkcs7err.o": [
    "ERR_load_PKCS7_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/p_lib.o": [
    "EVP_PKEY_bits",
    "EVP_PKEY_security_bits",
    "EVP_PKEY_size",
    "EVP_PKEY_save_parameters",
    "EVP_PKEY_missing_parameters",
    "EVP_PKEY_cmp_parameters",
    "EVP_PKEY_cmp",
    "EVP_PKEY_new",
    "EVP_PKEY_up_ref",
    "EVP_PKEY_get_raw_private_key",
    "EVP_PKEY_get_raw_public_key",
    "EVP_PKEY_set_type",
    "EVP_PKEY_copy_parameters",
    "EVP_PKEY_set_type_str",
    "EVP_PKEY_set1_engine",
    "EVP_PKEY_get0_engine",
    "EVP_PKEY_assign",
    "EVP_PKEY_get0",
    "EVP_PKEY_get0_hmac",
    "EVP_PKEY_get0_poly1305",
    "EVP_PKEY_get0_siphash",
    "EVP_PKEY_set1_RSA",
    "EVP_PKEY_get0_RSA",
    "EVP_PKEY_get1_RSA",
    "EVP_PKEY_set1_DSA",
    "EVP_PKEY_get0_DSA",
    "EVP_PKEY_get1_DSA",
    "EVP_PKEY_set1_EC_KEY",
    "EVP_PKEY_set1_DH",
    "EVP_PKEY_get0_DH",
    "EVP_PKEY_get1_DH",
    "EVP_PKEY_type",
    "EVP_PKEY_id",
    "EVP_PKEY_base_id",
    "EVP_PKEY_set_alias_type",
    "EVP_PKEY_get0_EC_KEY",
    "EVP_PKEY_get1_EC_KEY",
    "EVP_PKEY_free",
    "EVP_PKEY_new_raw_private_key",
    "EVP_PKEY_new_raw_public_key",
    "EVP_PKEY_new_CMAC_key",
    "EVP_PKEY_print_public",
    "EVP_PKEY_print_private",
    "EVP_PKEY_print_params",
    "EVP_PKEY_get_default_digest_nid",
    "EVP_PKEY_set1_tls_encodedpoint",
    "EVP_PKEY_get1_tls_encodedpoint"
],
"ghidra/libsgx_tsgxssl_crypto_a/pmeth_fn.o": [
    "EVP_PKEY_sign_init",
    "EVP_PKEY_sign",
    "EVP_PKEY_verify_init",
    "EVP_PKEY_verify",
    "EVP_PKEY_verify_recover_init",
    "EVP_PKEY_verify_recover",
    "EVP_PKEY_encrypt_init",
    "EVP_PKEY_encrypt",
    "EVP_PKEY_decrypt_init",
    "EVP_PKEY_decrypt",
    "EVP_PKEY_derive_init",
    "EVP_PKEY_derive_set_peer",
    "EVP_PKEY_derive"
],
"ghidra/libsgx_tsgxssl_crypto_a/pmeth_gn.o": [
    "trans_cb",
    "EVP_PKEY_paramgen_init",
    "EVP_PKEY_paramgen",
    "EVP_PKEY_keygen_init",
    "EVP_PKEY_keygen",
    "EVP_PKEY_CTX_set_cb",
    "EVP_PKEY_CTX_get_cb",
    "evp_pkey_set_cb_translate",
    "EVP_PKEY_CTX_get_keygen_info",
    "EVP_PKEY_new_mac_key",
    "EVP_PKEY_check",
    "EVP_PKEY_public_check",
    "EVP_PKEY_param_check"
],
"ghidra/libsgx_tsgxssl_crypto_a/pmeth_lib.o": [
    "pmeth_cmp",
    "pmeth_cmp_BSEARCH_CMP_FN",
    "EVP_PKEY_meth_free",
    "EVP_PKEY_meth_find",
    "EVP_PKEY_meth_new",
    "EVP_PKEY_meth_get0_info",
    "EVP_PKEY_meth_copy",
    "EVP_PKEY_meth_add0",
    "evp_app_cleanup_int",
    "EVP_PKEY_meth_remove",
    "EVP_PKEY_meth_get_count",
    "EVP_PKEY_meth_get0",
    "EVP_PKEY_CTX_free",
    "EVP_PKEY_CTX_new",
    "EVP_PKEY_CTX_dup",
    "EVP_PKEY_CTX_new_id",
    "EVP_PKEY_CTX_ctrl",
    "EVP_PKEY_CTX_ctrl_uint64",
    "EVP_PKEY_CTX_str2ctrl",
    "EVP_PKEY_CTX_hex2ctrl",
    "EVP_PKEY_CTX_md",
    "EVP_PKEY_CTX_ctrl_str",
    "EVP_PKEY_CTX_get_operation",
    "EVP_PKEY_CTX_set0_keygen_info",
    "EVP_PKEY_CTX_set_data",
    "EVP_PKEY_CTX_get_data",
    "EVP_PKEY_CTX_get0_pkey",
    "EVP_PKEY_CTX_get0_peerkey",
    "EVP_PKEY_CTX_set_app_data",
    "EVP_PKEY_CTX_get_app_data",
    "EVP_PKEY_meth_set_init",
    "EVP_PKEY_meth_set_copy",
    "EVP_PKEY_meth_set_cleanup",
    "EVP_PKEY_meth_set_paramgen",
    "EVP_PKEY_meth_set_keygen",
    "EVP_PKEY_meth_set_sign",
    "EVP_PKEY_meth_set_verify",
    "EVP_PKEY_meth_set_verify_recover",
    "EVP_PKEY_meth_set_signctx",
    "EVP_PKEY_meth_set_verifyctx",
    "EVP_PKEY_meth_set_encrypt",
    "EVP_PKEY_meth_set_decrypt",
    "EVP_PKEY_meth_set_derive",
    "EVP_PKEY_meth_set_ctrl",
    "EVP_PKEY_meth_set_digestsign",
    "EVP_PKEY_meth_set_digestverify",
    "EVP_PKEY_meth_set_check",
    "EVP_PKEY_meth_set_public_check",
    "EVP_PKEY_meth_set_param_check",
    "EVP_PKEY_meth_set_digest_custom",
    "EVP_PKEY_meth_get_init",
    "EVP_PKEY_meth_get_copy",
    "EVP_PKEY_meth_get_cleanup",
    "EVP_PKEY_meth_get_paramgen",
    "EVP_PKEY_meth_get_keygen",
    "EVP_PKEY_meth_get_sign",
    "EVP_PKEY_meth_get_verify",
    "EVP_PKEY_meth_get_verify_recover",
    "EVP_PKEY_meth_get_signctx",
    "EVP_PKEY_meth_get_verifyctx",
    "EVP_PKEY_meth_get_encrypt",
    "EVP_PKEY_meth_get_decrypt",
    "EVP_PKEY_meth_get_derive",
    "EVP_PKEY_meth_get_ctrl",
    "EVP_PKEY_meth_get_digestsign",
    "EVP_PKEY_meth_get_digestverify",
    "EVP_PKEY_meth_get_check",
    "EVP_PKEY_meth_get_public_check",
    "EVP_PKEY_meth_get_param_check",
    "EVP_PKEY_meth_get_digest_custom"
],
"ghidra/libsgx_tsgxssl_crypto_a/poly1305_ameth.o": [
    "poly1305_size",
    "poly1305_pkey_ctrl",
    "poly1305_get_priv_key",
    "poly1305_key_free",
    "poly1305_pkey_public_cmp",
    "poly1305_set_priv_key"
],
"ghidra/libsgx_tsgxssl_crypto_a/poly1305.o": [
    "Poly1305_ctx_size",
    "Poly1305_Init",
    "Poly1305_Update",
    "Poly1305_Final"
],
"ghidra/libsgx_tsgxssl_crypto_a/poly1305_pmeth.o": [
    "pkey_poly1305_ctrl",
    "poly1305_signctx",
    "poly1305_signctx_init",
    "int_update",
    "pkey_poly1305_keygen",
    "pkey_poly1305_cleanup",
    "pkey_poly1305_ctrl_str",
    "pkey_poly1305_init",
    "pkey_poly1305_copy"
],
"ghidra/libsgx_tsgxssl_crypto_a/poly1305-x86_64.o": [
    "poly1305_init",
    "poly1305_blocks",
    "poly1305_emit",
    "__poly1305_block",
    "__poly1305_init_avx",
    "poly1305_blocks_avx",
    "FUN_00100640",
    "FUN_00100720",
    "poly1305_emit_avx",
    "poly1305_blocks_avx2",
    "FUN_00101200",
    "FUN_00101300",
    "poly1305_blocks_avx512",
    "poly1305_init_base2_44",
    "poly1305_blocks_vpmadd52",
    "poly1305_blocks_vpmadd52_4x",
    "poly1305_blocks_vpmadd52_8x",
    "poly1305_emit_base2_44",
    "xor128_encrypt_n_pad",
    "xor128_decrypt_n_pad"
],
"ghidra/libsgx_tsgxssl_crypto_a/p_open.o": [
    "EVP_OpenInit",
    "EVP_OpenFinal"
],
"ghidra/libsgx_tsgxssl_crypto_a/p_seal.o": [
    "EVP_SealInit",
    "EVP_SealFinal"
],
"ghidra/libsgx_tsgxssl_crypto_a/p_sign.o": [
    "EVP_SignFinal"
],
"ghidra/libsgx_tsgxssl_crypto_a/p_verify.o": [
    "EVP_VerifyFinal"
],
"ghidra/libsgx_tsgxssl_crypto_a/pvkfmt.o": [
    "b2i_dss",
    "b2i_rsa",
    "do_b2i_bio",
    "do_i2b_bio",
    "b2i_PrivateKey",
    "b2i_PublicKey",
    "b2i_PrivateKey_bio",
    "b2i_PublicKey_bio",
    "i2b_PrivateKey_bio",
    "i2b_PublicKey_bio"
],
"ghidra/libsgx_tsgxssl_crypto_a/qud_cksm.o": [
    "DES_quad_cksum"
],
"ghidra/libsgx_tsgxssl_crypto_a/rand_egd.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/rand_err.o": [
    "ERR_load_RAND_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/randfile.o": [
    "RAND_load_file",
    "RAND_write_file",
    "RAND_file_name"
],
"ghidra/libsgx_tsgxssl_crypto_a/rand_key.o": [
    "DES_random_key"
],
"ghidra/libsgx_tsgxssl_crypto_a/rand_lib.o": [
    "do_rand_init_ossl_",
    "rand_drbg_cleanup_entropy",
    "rand_drbg_cleanup_nonce",
    "RAND_keep_random_devices_open",
    "rand_pool_new",
    "rand_pool_attach",
    "rand_pool_free",
    "rand_pool_buffer",
    "rand_pool_entropy",
    "rand_pool_length",
    "rand_pool_detach",
    "rand_drbg_get_additional_data",
    "rand_pool_reattach",
    "rand_pool_entropy_available",
    "rand_pool_entropy_needed",
    "rand_pool_bytes_needed",
    "rand_pool_bytes_remaining",
    "rand_pool_add",
    "rand_drbg_get_nonce",
    "rand_pool_add_begin",
    "rand_pool_add_end",
    "rand_drbg_get_entropy",
    "RAND_set_rand_method",
    "rand_cleanup_int",
    "RAND_get_rand_method",
    "RAND_poll",
    "RAND_set_rand_engine",
    "RAND_seed",
    "RAND_add",
    "RAND_bytes",
    "RAND_priv_bytes",
    "RAND_pseudo_bytes",
    "RAND_status",
    "ENGINE_set_default_RAND"
],
"ghidra/libsgx_tsgxssl_crypto_a/rand_unix.o": [
    "rand_pool_init",
    "rand_pool_cleanup",
    "rand_pool_keep_random_devices_open",
    "rand_pool_add_nonce_data",
    "rand_pool_add_additional_data"
],
"ghidra/libsgx_tsgxssl_crypto_a/rand_vms.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/rand_win.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/rc2_cbc.o": [
    "RC2_encrypt",
    "RC2_decrypt",
    "RC2_cbc_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/rc2cfb64.o": [
    "RC2_cfb64_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/rc2_ecb.o": [
    "RC2_ecb_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/rc2ofb64.o": [
    "RC2_ofb64_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/rc2_skey.o": [
    "RC2_set_key"
],
"ghidra/libsgx_tsgxssl_crypto_a/rmd_dgst.o": [
    "RIPEMD160_Init",
    "ripemd160_block_data_order",
    "RIPEMD160_Update",
    "RIPEMD160_Transform",
    "RIPEMD160_Final"
],
"ghidra/libsgx_tsgxssl_crypto_a/rmd_one.o": [
    "RIPEMD160"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_ameth.o": [
    "rsa_pkey_check",
    "old_rsa_priv_encode",
    "int_rsa_free",
    "rsa_security_bits",
    "rsa_bits",
    "int_rsa_size",
    "rsa_priv_encode",
    "rsa_pss_param_print",
    "old_rsa_priv_decode",
    "rsa_priv_print",
    "rsa_pub_cmp",
    "rsa_pub_decode",
    "rsa_pub_encode",
    "rsa_md_to_mgf1",
    "rsa_pub_print",
    "rsa_sig_print",
    "rsa_priv_decode",
    "rsa_pss_params_create",
    "rsa_ctx_to_pss_string",
    "rsa_item_sign",
    "rsa_pss_get_param",
    "rsa_sig_info_set",
    "rsa_pkey_ctrl",
    "rsa_item_verify"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_asn1.o": [
    "rsa_cb",
    "rsa_pss_cb",
    "rsa_oaep_cb",
    "d2i_RSA_PSS_PARAMS",
    "i2d_RSA_PSS_PARAMS",
    "RSA_PSS_PARAMS_new",
    "RSA_PSS_PARAMS_free",
    "d2i_RSA_OAEP_PARAMS",
    "i2d_RSA_OAEP_PARAMS",
    "RSA_OAEP_PARAMS_new",
    "RSA_OAEP_PARAMS_free",
    "d2i_RSAPrivateKey",
    "i2d_RSAPrivateKey",
    "d2i_RSAPublicKey",
    "i2d_RSAPublicKey",
    "RSAPublicKey_dup",
    "RSAPrivateKey_dup"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_chk.o": [
    "RSA_check_key_ex",
    "RSA_check_key"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_crpt.o": [
    "RSA_bits",
    "RSA_size",
    "RSA_public_encrypt",
    "RSA_private_encrypt",
    "RSA_private_decrypt",
    "RSA_public_decrypt",
    "RSA_flags",
    "RSA_blinding_off",
    "RSA_setup_blinding",
    "RSA_blinding_on"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_depr.o": [
    "RSA_generate_key"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_err.o": [
    "ERR_load_RSA_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_gen.o": [
    "RSA_generate_multi_prime_key",
    "RSA_generate_key_ex"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_lib.o": [
    "RSA_get_method",
    "RSA_set_method",
    "RSA_free",
    "RSA_new_method",
    "RSA_new",
    "RSA_up_ref",
    "RSA_set_ex_data",
    "RSA_get_ex_data",
    "RSA_security_bits",
    "RSA_set0_key",
    "RSA_set0_factors",
    "RSA_set0_crt_params",
    "RSA_set0_multi_prime_params",
    "RSA_get0_key",
    "RSA_get0_factors",
    "RSA_get_multi_prime_extra_count",
    "RSA_get0_multi_prime_factors",
    "RSA_get0_crt_params",
    "RSA_get0_multi_prime_crt_params",
    "RSA_get0_n",
    "RSA_get0_e",
    "RSA_get0_d",
    "RSA_get0_p",
    "RSA_get0_q",
    "RSA_get0_dmp1",
    "RSA_get0_dmq1",
    "RSA_get0_iqmp",
    "RSA_get0_pss_params",
    "RSA_clear_flags",
    "RSA_test_flags",
    "RSA_set_flags",
    "RSA_get_version",
    "RSA_get0_engine",
    "RSA_pkey_ctx_ctrl"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_meth.o": [
    "RSA_meth_new",
    "RSA_meth_free",
    "RSA_meth_dup",
    "RSA_meth_get0_name",
    "RSA_meth_set1_name",
    "RSA_meth_get_flags",
    "RSA_meth_set_flags",
    "RSA_meth_get0_app_data",
    "RSA_meth_set0_app_data",
    "RSA_meth_get_pub_enc",
    "RSA_meth_set_pub_enc",
    "RSA_meth_get_pub_dec",
    "RSA_meth_set_pub_dec",
    "RSA_meth_get_priv_enc",
    "RSA_meth_set_priv_enc",
    "RSA_meth_get_priv_dec",
    "RSA_meth_set_priv_dec",
    "RSA_meth_get_mod_exp",
    "RSA_meth_set_mod_exp",
    "RSA_meth_get_bn_mod_exp",
    "RSA_meth_set_bn_mod_exp",
    "RSA_meth_get_init",
    "RSA_meth_set_init",
    "RSA_meth_get_finish",
    "RSA_meth_set_finish",
    "RSA_meth_get_sign",
    "RSA_meth_set_sign",
    "RSA_meth_get_verify",
    "RSA_meth_set_verify",
    "RSA_meth_get_keygen",
    "RSA_meth_set_keygen",
    "RSA_meth_get_multi_prime_keygen",
    "RSA_meth_set_multi_prime_keygen"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_mp.o": [
    "rsa_multip_info_free_ex",
    "rsa_multip_info_free",
    "rsa_multip_info_new",
    "rsa_multip_calc_product",
    "rsa_multip_cap"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_none.o": [
    "RSA_padding_add_none",
    "RSA_padding_check_none"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_oaep.o": [
    "PKCS1_MGF1",
    "RSA_padding_add_PKCS1_OAEP_mgf1",
    "RSA_padding_add_PKCS1_OAEP",
    "RSA_padding_check_PKCS1_OAEP_mgf1",
    "RSA_padding_check_PKCS1_OAEP"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_ossl.o": [
    "rsa_ossl_init",
    "rsa_ossl_finish",
    "rsa_ossl_mod_exp",
    "rsa_ossl_public_decrypt",
    "rsa_ossl_public_encrypt",
    "rsa_ossl_private_encrypt",
    "rsa_ossl_private_decrypt",
    "RSA_set_default_method",
    "RSA_get_default_method",
    "RSA_PKCS1_OpenSSL",
    "RSA_null_method"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_pk1.o": [
    "RSA_padding_add_PKCS1_type_1",
    "RSA_padding_check_PKCS1_type_1",
    "RSA_padding_add_PKCS1_type_2",
    "RSA_padding_check_PKCS1_type_2"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_pmeth.o": [
    "pkey_rsa_ctrl_str",
    "pkey_rsa_cleanup",
    "pkey_rsa_init",
    "pkey_pss_init",
    "check_padding_md.part.0",
    "pkey_rsa_ctrl",
    "pkey_rsa_keygen",
    "pkey_rsa_copy",
    "pkey_rsa_encrypt",
    "pkey_rsa_decrypt",
    "pkey_rsa_sign",
    "pkey_rsa_verifyrecover",
    "pkey_rsa_verify"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_prn.o": [
    "RSA_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_pss.o": [
    "RSA_verify_PKCS1_PSS_mgf1",
    "RSA_verify_PKCS1_PSS",
    "RSA_padding_add_PKCS1_PSS_mgf1",
    "RSA_padding_add_PKCS1_PSS"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_saos.o": [
    "RSA_sign_ASN1_OCTET_STRING",
    "RSA_verify_ASN1_OCTET_STRING"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_sign.o": [
    "encode_pkcs1",
    "RSA_sign",
    "int_rsa_verify",
    "RSA_verify"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_ssl.o": [
    "RSA_padding_add_SSLv23",
    "RSA_padding_check_SSLv23"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_sup_mul.o": [
    "limb_mul",
    "ossl_bn_rsa_do_unblind"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_x931g.o": [
    "RSA_X931_derive_ex",
    "RSA_X931_generate_key_ex"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsa_x931.o": [
    "RSA_padding_add_X931",
    "RSA_padding_check_X931",
    "RSA_X931_hash_id"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsaz-avx2.o": [
    "rsaz_1024_sqr_avx2",
    "rsaz_1024_mul_avx2",
    "rsaz_1024_red2norm_avx2",
    "rsaz_1024_norm2red_avx2",
    "rsaz_1024_scatter5_avx2",
    "rsaz_1024_gather5_avx2",
    "rsaz_avx2_eligible"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsaz_exp.o": [
    "RSAZ_1024_mod_exp_avx2",
    "RSAZ_512_mod_exp"
],
"ghidra/libsgx_tsgxssl_crypto_a/rsaz-x86_64.o": [
    "rsaz_512_sqr",
    "rsaz_512_mul",
    "rsaz_512_mul_gather4",
    "rsaz_512_mul_scatter4",
    "rsaz_512_mul_by_one",
    "__rsaz_512_reduce",
    "__rsaz_512_reducex",
    "__rsaz_512_subtract",
    "__rsaz_512_mul",
    "__rsaz_512_mulx",
    "rsaz_512_scatter4",
    "rsaz_512_gather4"
],
"ghidra/libsgx_tsgxssl_crypto_a/scalar.o": [
    "sc_montmul",
    "curve448_scalar_mul",
    "curve448_scalar_sub",
    "curve448_scalar_add",
    "curve448_scalar_decode",
    "curve448_scalar_destroy",
    "curve448_scalar_decode_long",
    "curve448_scalar_encode",
    "curve448_scalar_halve"
],
"ghidra/libsgx_tsgxssl_crypto_a/scrypt.o": [
    "pkey_scrypt_cleanup",
    "pkey_scrypt_derive",
    "pkey_scrypt_init",
    "pkey_scrypt_ctrl",
    "pkey_scrypt_ctrl_str",
    "pkey_scrypt_ctrl.cold"
],
"ghidra/libsgx_tsgxssl_crypto_a/seed_cbc.o": [
    "SEED_cbc_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/seed_cfb.o": [
    "SEED_cfb128_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/seed_ecb.o": [
    "SEED_ecb_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/seed.o": [
    "SEED_set_key",
    "SEED_encrypt",
    "SEED_decrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/seed_ofb.o": [
    "SEED_ofb128_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/set_key.o": [
    "DES_set_odd_parity",
    "DES_check_key_parity",
    "DES_is_weak_key",
    "DES_set_key_unchecked",
    "DES_set_key_checked",
    "DES_set_key"
],
"ghidra/libsgx_tsgxssl_crypto_a/sha1dgst.o": [
    "SHA1_Update",
    "SHA1_Transform",
    "SHA1_Final",
    "SHA1_Init"
],
"ghidra/libsgx_tsgxssl_crypto_a/sha1-mb-x86_64.o": [
    "sha1_multi_block",
    "sha1_multi_block_shaext",
    "sha1_multi_block_avx",
    "sha1_multi_block_avx2"
],
"ghidra/libsgx_tsgxssl_crypto_a/sha1_one.o": [
    "SHA1"
],
"ghidra/libsgx_tsgxssl_crypto_a/sha1-x86_64.o": [
    "sha1_block_data_order",
    "sha1_block_data_order_shaext",
    "sha1_block_data_order_ssse3",
    "sha1_block_data_order_avx",
    "sha1_block_data_order_avx2"
],
"ghidra/libsgx_tsgxssl_crypto_a/sha256-mb-x86_64.o": [
    "sha256_multi_block",
    "sha256_multi_block_shaext",
    "sha256_multi_block_avx",
    "sha256_multi_block_avx2"
],
"ghidra/libsgx_tsgxssl_crypto_a/sha256.o": [
    "SHA224_Init",
    "SHA256_Init",
    "SHA256_Update",
    "SHA256_Transform",
    "SHA256_Final",
    "SHA224",
    "SHA256"
],
"ghidra/libsgx_tsgxssl_crypto_a/sha256-x86_64.o": [
    "sha256_block_data_order",
    "sha256_block_data_order_shaext",
    "sha256_block_data_order_ssse3",
    "sha256_block_data_order_avx",
    "sha256_block_data_order_avx2"
],
"ghidra/libsgx_tsgxssl_crypto_a/sha512.o": [
    "sha512_224_init",
    "sha512_256_init",
    "SHA384_Init",
    "SHA512_Init",
    "SHA512_Final",
    "SHA512_Update",
    "SHA512_Transform",
    "SHA384",
    "SHA512"
],
"ghidra/libsgx_tsgxssl_crypto_a/sha512-x86_64.o": [
    "sha512_block_data_order",
    "sha512_block_data_order_xop",
    "sha512_block_data_order_avx",
    "sha512_block_data_order_avx2"
],
"ghidra/libsgx_tsgxssl_crypto_a/siphash_ameth.o": [
    "siphash_size",
    "siphash_pkey_ctrl",
    "siphash_get_priv_key",
    "siphash_key_free",
    "siphash_pkey_public_cmp",
    "siphash_set_priv_key"
],
"ghidra/libsgx_tsgxssl_crypto_a/siphash.o": [
    "SipHash_ctx_size",
    "SipHash_hash_size",
    "SipHash_set_hash_size",
    "SipHash_Init",
    "SipHash_Update",
    "SipHash_Final"
],
"ghidra/libsgx_tsgxssl_crypto_a/siphash_pmeth.o": [
    "pkey_siphash_ctrl",
    "siphash_signctx",
    "siphash_signctx_init",
    "int_update",
    "pkey_siphash_keygen",
    "pkey_siphash_cleanup",
    "pkey_siphash_ctrl_str",
    "pkey_siphash_init",
    "pkey_siphash_copy"
],
"ghidra/libsgx_tsgxssl_crypto_a/sm2_crypt.o": [
    "ec_field_size",
    "d2i_SM2_Ciphertext",
    "i2d_SM2_Ciphertext",
    "SM2_Ciphertext_new",
    "SM2_Ciphertext_free",
    "sm2_plaintext_size",
    "sm2_ciphertext_size",
    "sm2_encrypt",
    "sm2_decrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/sm2_err.o": [
    "ERR_load_SM2_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/sm2_pmeth.o": [
    "pkey_sm2_cleanup",
    "pkey_sm2_ctrl",
    "pkey_sm2_encrypt",
    "pkey_sm2_verify",
    "pkey_sm2_digest_custom",
    "pkey_sm2_ctrl_str",
    "pkey_sm2_decrypt",
    "pkey_sm2_sign",
    "pkey_sm2_init",
    "pkey_sm2_copy"
],
"ghidra/libsgx_tsgxssl_crypto_a/sm2_sign.o": [
    "sm2_sig_gen",
    "sm2_sig_verify",
    "sm2_compute_z_digest",
    "sm2_compute_msg_hash",
    "sm2_do_sign",
    "sm2_do_verify",
    "sm2_sign",
    "sm2_verify"
],
"ghidra/libsgx_tsgxssl_crypto_a/sm3.o": [
    "sm3_init",
    "sm3_block_data_order",
    "sm3_update",
    "sm3_transform",
    "sm3_final"
],
"ghidra/libsgx_tsgxssl_crypto_a/sm4.o": [
    "SM4_set_key",
    "SM4_encrypt",
    "SM4_decrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/stack.o": [
    "OPENSSL_sk_set_cmp_func",
    "OPENSSL_sk_reserve",
    "OPENSSL_sk_insert",
    "OPENSSL_sk_delete_ptr",
    "OPENSSL_sk_delete",
    "OPENSSL_sk_find",
    "OPENSSL_sk_find_ex",
    "OPENSSL_sk_push",
    "OPENSSL_sk_unshift",
    "OPENSSL_sk_shift",
    "OPENSSL_sk_pop",
    "OPENSSL_sk_zero",
    "OPENSSL_sk_free",
    "OPENSSL_sk_dup",
    "OPENSSL_sk_deep_copy",
    "OPENSSL_sk_new_reserve",
    "OPENSSL_sk_new_null",
    "OPENSSL_sk_new",
    "OPENSSL_sk_pop_free",
    "OPENSSL_sk_num",
    "OPENSSL_sk_value",
    "OPENSSL_sk_set",
    "OPENSSL_sk_sort",
    "OPENSSL_sk_is_sorted"
],
"ghidra/libsgx_tsgxssl_crypto_a/store_err.o": [
    "ERR_load_OSSL_STORE_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/store_init.o": [
    "do_store_init_ossl_",
    "ossl_store_init_once"
],
"ghidra/libsgx_tsgxssl_crypto_a/store_lib.o": [
    "OSSL_STORE_open",
    "OSSL_STORE_vctrl",
    "OSSL_STORE_ctrl",
    "OSSL_STORE_expect",
    "OSSL_STORE_find",
    "OSSL_STORE_error",
    "OSSL_STORE_eof",
    "OSSL_STORE_close",
    "OSSL_STORE_INFO_new_NAME",
    "OSSL_STORE_INFO_set0_NAME_description",
    "OSSL_STORE_INFO_new_PARAMS",
    "OSSL_STORE_INFO_new_PKEY",
    "OSSL_STORE_INFO_new_CERT",
    "OSSL_STORE_INFO_new_CRL",
    "OSSL_STORE_INFO_get_type",
    "OSSL_STORE_INFO_get0_NAME",
    "OSSL_STORE_INFO_get1_NAME",
    "OSSL_STORE_INFO_get0_NAME_description",
    "OSSL_STORE_INFO_get1_NAME_description",
    "OSSL_STORE_INFO_get0_PARAMS",
    "OSSL_STORE_INFO_get1_PARAMS",
    "OSSL_STORE_INFO_get0_PKEY",
    "OSSL_STORE_INFO_get1_PKEY",
    "OSSL_STORE_INFO_get0_CERT",
    "OSSL_STORE_INFO_get1_CERT",
    "OSSL_STORE_INFO_get0_CRL",
    "OSSL_STORE_INFO_get1_CRL",
    "OSSL_STORE_INFO_free",
    "OSSL_STORE_load",
    "OSSL_STORE_supports_search",
    "OSSL_STORE_SEARCH_by_name",
    "OSSL_STORE_SEARCH_by_issuer_serial",
    "OSSL_STORE_SEARCH_by_key_fingerprint",
    "OSSL_STORE_SEARCH_by_alias",
    "OSSL_STORE_SEARCH_free",
    "OSSL_STORE_SEARCH_get_type",
    "OSSL_STORE_SEARCH_get0_name",
    "OSSL_STORE_SEARCH_get0_serial",
    "OSSL_STORE_SEARCH_get0_bytes",
    "OSSL_STORE_SEARCH_get0_string",
    "OSSL_STORE_SEARCH_get0_digest",
    "ossl_store_info_new_EMBEDDED",
    "ossl_store_info_get0_EMBEDDED_buffer",
    "ossl_store_info_get0_EMBEDDED_pem_name",
    "ossl_store_attach_pem_bio",
    "ossl_store_detach_pem_bio"
],
"ghidra/libsgx_tsgxssl_crypto_a/store_register.o": [
    "store_loader_cmp",
    "store_loader_hash",
    "do_registry_init_ossl_",
    "OSSL_STORE_LOADER_new",
    "OSSL_STORE_LOADER_get0_engine",
    "OSSL_STORE_LOADER_get0_scheme",
    "OSSL_STORE_LOADER_set_open",
    "OSSL_STORE_LOADER_set_ctrl",
    "OSSL_STORE_LOADER_set_expect",
    "OSSL_STORE_LOADER_set_find",
    "OSSL_STORE_LOADER_set_load",
    "OSSL_STORE_LOADER_set_eof",
    "OSSL_STORE_LOADER_set_error",
    "OSSL_STORE_LOADER_set_close",
    "OSSL_STORE_LOADER_free",
    "ossl_store_register_loader_int",
    "OSSL_STORE_register_loader",
    "ossl_store_get0_loader_int",
    "ossl_store_unregister_loader_int",
    "OSSL_STORE_unregister_loader",
    "ossl_store_destroy_loaders_int",
    "OSSL_STORE_do_all_loaders"
],
"ghidra/libsgx_tsgxssl_crypto_a/store_strings.o": [
    "OSSL_STORE_INFO_type_string"
],
"ghidra/libsgx_tsgxssl_crypto_a/str2key.o": [
    "DES_string_to_key",
    "DES_string_to_2keys"
],
"ghidra/libsgx_tsgxssl_crypto_a/tasn_dec.o": [
    "asn1_check_tlen",
    "asn1_collect.constprop.0",
    "asn1_d2i_ex_primitive",
    "ASN1_tag2bit",
    "asn1_item_embed_d2i",
    "asn1_template_noexp_d2i",
    "asn1_template_ex_d2i",
    "ASN1_item_ex_d2i",
    "ASN1_item_d2i"
],
"ghidra/libsgx_tsgxssl_crypto_a/tasn_enc.o": [
    "der_cmp",
    "asn1_i2d_ex_primitive",
    "ASN1_item_ex_i2d",
    "ASN1_item_ndef_i2d",
    "asn1_template_ex_i2d",
    "ASN1_item_i2d"
],
"ghidra/libsgx_tsgxssl_crypto_a/tasn_fre.o": [
    "asn1_primitive_free",
    "asn1_item_embed_free",
    "ASN1_item_free",
    "ASN1_item_ex_free",
    "asn1_template_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/tasn_new.o": [
    "asn1_primitive_new",
    "asn1_item_clear",
    "asn1_template_new.isra.0",
    "ASN1_item_ex_new",
    "ASN1_item_new"
],
"ghidra/libsgx_tsgxssl_crypto_a/tasn_prn.o": [
    "asn1_print_fsname.isra.0",
    "asn1_primitive_print",
    "asn1_template_print_ctx",
    "ASN1_PCTX_new",
    "ASN1_PCTX_free",
    "ASN1_PCTX_get_flags",
    "ASN1_PCTX_set_flags",
    "ASN1_PCTX_get_nm_flags",
    "ASN1_PCTX_set_nm_flags",
    "ASN1_PCTX_get_cert_flags",
    "ASN1_PCTX_set_cert_flags",
    "ASN1_PCTX_get_oid_flags",
    "ASN1_PCTX_set_oid_flags",
    "ASN1_PCTX_get_str_flags",
    "ASN1_PCTX_set_str_flags",
    "ASN1_item_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/tasn_scn.o": [
    "ASN1_SCTX_new",
    "ASN1_SCTX_free",
    "ASN1_SCTX_get_item",
    "ASN1_SCTX_get_template",
    "ASN1_SCTX_get_flags",
    "ASN1_SCTX_set_app_data",
    "ASN1_SCTX_get_app_data"
],
"ghidra/libsgx_tsgxssl_crypto_a/tasn_typ.o": [
    "d2i_ASN1_OCTET_STRING",
    "i2d_ASN1_OCTET_STRING",
    "ASN1_OCTET_STRING_new",
    "d2i_ASN1_INTEGER",
    "i2d_ASN1_INTEGER",
    "ASN1_INTEGER_new",
    "d2i_ASN1_ENUMERATED",
    "i2d_ASN1_ENUMERATED",
    "ASN1_ENUMERATED_new",
    "d2i_ASN1_BIT_STRING",
    "i2d_ASN1_BIT_STRING",
    "ASN1_BIT_STRING_new",
    "d2i_ASN1_UTF8STRING",
    "i2d_ASN1_UTF8STRING",
    "ASN1_UTF8STRING_new",
    "d2i_ASN1_PRINTABLESTRING",
    "i2d_ASN1_PRINTABLESTRING",
    "ASN1_PRINTABLESTRING_new",
    "d2i_ASN1_T61STRING",
    "i2d_ASN1_T61STRING",
    "ASN1_T61STRING_new",
    "d2i_ASN1_IA5STRING",
    "i2d_ASN1_IA5STRING",
    "ASN1_IA5STRING_new",
    "d2i_ASN1_GENERALSTRING",
    "i2d_ASN1_GENERALSTRING",
    "ASN1_GENERALSTRING_new",
    "d2i_ASN1_UTCTIME",
    "i2d_ASN1_UTCTIME",
    "ASN1_UTCTIME_new",
    "d2i_ASN1_GENERALIZEDTIME",
    "i2d_ASN1_GENERALIZEDTIME",
    "ASN1_GENERALIZEDTIME_new",
    "d2i_ASN1_VISIBLESTRING",
    "i2d_ASN1_VISIBLESTRING",
    "ASN1_VISIBLESTRING_new",
    "d2i_ASN1_UNIVERSALSTRING",
    "i2d_ASN1_UNIVERSALSTRING",
    "ASN1_UNIVERSALSTRING_new",
    "d2i_ASN1_BMPSTRING",
    "i2d_ASN1_BMPSTRING",
    "ASN1_BMPSTRING_new",
    "d2i_ASN1_NULL",
    "i2d_ASN1_NULL",
    "ASN1_NULL_new",
    "ASN1_NULL_free",
    "d2i_ASN1_TYPE",
    "i2d_ASN1_TYPE",
    "ASN1_TYPE_new",
    "ASN1_TYPE_free",
    "d2i_ASN1_PRINTABLE",
    "i2d_ASN1_PRINTABLE",
    "ASN1_PRINTABLE_new",
    "ASN1_PRINTABLE_free",
    "d2i_DISPLAYTEXT",
    "i2d_DISPLAYTEXT",
    "DISPLAYTEXT_new",
    "DISPLAYTEXT_free",
    "d2i_DIRECTORYSTRING",
    "i2d_DIRECTORYSTRING",
    "DIRECTORYSTRING_new",
    "DIRECTORYSTRING_free",
    "d2i_ASN1_SEQUENCE_ANY",
    "i2d_ASN1_SEQUENCE_ANY",
    "d2i_ASN1_SET_ANY",
    "i2d_ASN1_SET_ANY"
],
"ghidra/libsgx_tsgxssl_crypto_a/tasn_utl.o": [
    "asn1_get_choice_selector",
    "asn1_set_choice_selector",
    "asn1_do_lock",
    "asn1_enc_init",
    "asn1_enc_free",
    "asn1_enc_save",
    "asn1_enc_restore",
    "asn1_get_field_ptr",
    "asn1_do_adb"
],
"ghidra/libsgx_tsgxssl_crypto_a/tb_asnmth.o": [
    "engine_unregister_all_pkey_asn1_meths",
    "look_str_cb",
    "ENGINE_unregister_pkey_asn1_meths",
    "ENGINE_register_pkey_asn1_meths",
    "ENGINE_register_all_pkey_asn1_meths",
    "ENGINE_set_default_pkey_asn1_meths",
    "ENGINE_get_pkey_asn1_meth_engine",
    "ENGINE_get_pkey_asn1_meths",
    "ENGINE_get_pkey_asn1_meth",
    "ENGINE_set_pkey_asn1_meths",
    "engine_pkey_asn1_meths_free",
    "ENGINE_get_pkey_asn1_meth_str",
    "ENGINE_pkey_asn1_find_str"
],
"ghidra/libsgx_tsgxssl_crypto_a/tb_cipher.o": [
    "engine_unregister_all_ciphers",
    "ENGINE_unregister_ciphers",
    "ENGINE_register_ciphers",
    "ENGINE_register_all_ciphers",
    "ENGINE_set_default_ciphers",
    "ENGINE_get_cipher_engine",
    "ENGINE_get_ciphers",
    "ENGINE_get_cipher",
    "ENGINE_set_ciphers"
],
"ghidra/libsgx_tsgxssl_crypto_a/tb_dh.o": [
    "engine_unregister_all_DH",
    "ENGINE_unregister_DH",
    "ENGINE_register_DH",
    "ENGINE_register_all_DH",
    "ENGINE_set_default_DH",
    "ENGINE_get_default_DH",
    "ENGINE_get_DH",
    "ENGINE_set_DH"
],
"ghidra/libsgx_tsgxssl_crypto_a/tb_digest.o": [
    "engine_unregister_all_digests",
    "ENGINE_unregister_digests",
    "ENGINE_register_digests",
    "ENGINE_register_all_digests",
    "ENGINE_set_default_digests",
    "ENGINE_get_digest_engine",
    "ENGINE_get_digests",
    "ENGINE_get_digest",
    "ENGINE_set_digests"
],
"ghidra/libsgx_tsgxssl_crypto_a/tb_dsa.o": [
    "engine_unregister_all_DSA",
    "ENGINE_unregister_DSA",
    "ENGINE_register_DSA",
    "ENGINE_register_all_DSA",
    "ENGINE_set_default_DSA",
    "ENGINE_get_default_DSA",
    "ENGINE_get_DSA",
    "ENGINE_set_DSA"
],
"ghidra/libsgx_tsgxssl_crypto_a/tb_eckey.o": [
    "engine_unregister_all_EC",
    "ENGINE_unregister_EC",
    "ENGINE_register_EC",
    "ENGINE_register_all_EC",
    "ENGINE_set_default_EC",
    "ENGINE_get_default_EC",
    "ENGINE_get_EC",
    "ENGINE_set_EC"
],
"ghidra/libsgx_tsgxssl_crypto_a/t_bitst.o": [
    "ASN1_BIT_STRING_name_print",
    "ASN1_BIT_STRING_num_asc",
    "ASN1_BIT_STRING_set_asc"
],
"ghidra/libsgx_tsgxssl_crypto_a/tb_pkmeth.o": [
    "engine_unregister_all_pkey_meths",
    "ENGINE_unregister_pkey_meths",
    "ENGINE_register_pkey_meths",
    "ENGINE_register_all_pkey_meths",
    "ENGINE_set_default_pkey_meths",
    "ENGINE_get_pkey_meth_engine",
    "ENGINE_get_pkey_meths",
    "ENGINE_get_pkey_meth",
    "ENGINE_set_pkey_meths",
    "engine_pkey_meths_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/tb_rand.o": [
    "engine_unregister_all_RAND",
    "ENGINE_unregister_RAND",
    "ENGINE_register_RAND",
    "ENGINE_register_all_RAND",
    "ENGINE_set_default_RAND",
    "dummy_ENGINE_set_default_RAND",
    "ENGINE_get_default_RAND",
    "ENGINE_get_RAND",
    "ENGINE_set_RAND"
],
"ghidra/libsgx_tsgxssl_crypto_a/tb_rsa.o": [
    "engine_unregister_all_RSA",
    "ENGINE_unregister_RSA",
    "ENGINE_register_RSA",
    "ENGINE_register_all_RSA",
    "ENGINE_set_default_RSA",
    "ENGINE_get_default_RSA",
    "ENGINE_get_RSA",
    "ENGINE_set_RSA"
],
"ghidra/libsgx_tsgxssl_crypto_a/t_crl.o": [
    "X509_CRL_print_ex",
    "X509_CRL_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/threads_none.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/threads_pthread.o": [
    "fork_once_func",
    "CRYPTO_THREAD_lock_new",
    "CRYPTO_THREAD_read_lock",
    "CRYPTO_THREAD_write_lock",
    "CRYPTO_THREAD_unlock",
    "CRYPTO_THREAD_lock_free",
    "CRYPTO_THREAD_run_once",
    "CRYPTO_THREAD_init_local",
    "CRYPTO_THREAD_get_local",
    "CRYPTO_THREAD_set_local",
    "CRYPTO_THREAD_cleanup_local",
    "CRYPTO_atomic_add",
    "openssl_init_fork_handlers"
],
"ghidra/libsgx_tsgxssl_crypto_a/threads_win.o": [],
"ghidra/libsgx_tsgxssl_crypto_a/tls1_prf.o": [
    "pkey_tls1_prf_ctrl",
    "tls1_prf_P_hash",
    "pkey_tls1_prf_cleanup",
    "pkey_tls1_prf_ctrl_str",
    "pkey_tls1_prf_derive",
    "pkey_tls1_prf_init"
],
"ghidra/libsgx_tsgxssl_crypto_a/t_pkey.o": [
    "ASN1_buf_print",
    "ASN1_bn_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/t_req.o": [
    "X509_REQ_print_ex",
    "X509_REQ_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/ts_asn1.o": [
    "d2i_TS_MSG_IMPRINT",
    "d2i_TS_REQ",
    "d2i_TS_TST_INFO",
    "d2i_TS_RESP",
    "i2d_TS_MSG_IMPRINT",
    "i2d_TS_REQ",
    "i2d_TS_TST_INFO",
    "i2d_TS_RESP",
    "TS_MSG_IMPRINT_new",
    "TS_REQ_new",
    "TS_TST_INFO_new",
    "TS_RESP_new",
    "TS_MSG_IMPRINT_free",
    "TS_MSG_IMPRINT_dup",
    "d2i_TS_MSG_IMPRINT_bio",
    "i2d_TS_MSG_IMPRINT_bio",
    "TS_REQ_free",
    "TS_REQ_dup",
    "d2i_TS_REQ_bio",
    "i2d_TS_REQ_bio",
    "d2i_TS_ACCURACY",
    "i2d_TS_ACCURACY",
    "TS_ACCURACY_new",
    "TS_ACCURACY_free",
    "TS_ACCURACY_dup",
    "TS_TST_INFO_free",
    "TS_TST_INFO_dup",
    "d2i_TS_TST_INFO_bio",
    "i2d_TS_TST_INFO_bio",
    "d2i_TS_STATUS_INFO",
    "i2d_TS_STATUS_INFO",
    "TS_STATUS_INFO_new",
    "TS_STATUS_INFO_free",
    "TS_STATUS_INFO_dup",
    "TS_RESP_free",
    "TS_RESP_dup",
    "d2i_TS_RESP_bio",
    "i2d_TS_RESP_bio",
    "d2i_ESS_ISSUER_SERIAL",
    "i2d_ESS_ISSUER_SERIAL",
    "ESS_ISSUER_SERIAL_new",
    "ESS_ISSUER_SERIAL_free",
    "ESS_ISSUER_SERIAL_dup",
    "d2i_ESS_CERT_ID",
    "i2d_ESS_CERT_ID",
    "ESS_CERT_ID_new",
    "ESS_CERT_ID_free",
    "ESS_CERT_ID_dup",
    "d2i_ESS_SIGNING_CERT",
    "i2d_ESS_SIGNING_CERT",
    "ESS_SIGNING_CERT_new",
    "ESS_SIGNING_CERT_free",
    "ESS_SIGNING_CERT_dup",
    "d2i_ESS_CERT_ID_V2",
    "i2d_ESS_CERT_ID_V2",
    "ESS_CERT_ID_V2_new",
    "ESS_CERT_ID_V2_free",
    "ESS_CERT_ID_V2_dup",
    "d2i_ESS_SIGNING_CERT_V2",
    "i2d_ESS_SIGNING_CERT_V2",
    "ESS_SIGNING_CERT_V2_new",
    "ESS_SIGNING_CERT_V2_free",
    "ESS_SIGNING_CERT_V2_dup",
    "PKCS7_to_TS_TST_INFO",
    "ts_resp_cb"
],
"ghidra/libsgx_tsgxssl_crypto_a/ts_conf.o": [
    "TS_CONF_load_cert",
    "TS_CONF_load_certs",
    "TS_CONF_load_key",
    "TS_CONF_get_tsa_section",
    "TS_CONF_set_serial",
    "TS_CONF_set_default_engine",
    "TS_CONF_set_crypto_device",
    "TS_CONF_set_signer_cert",
    "TS_CONF_set_certs",
    "TS_CONF_set_signer_key",
    "TS_CONF_set_signer_digest",
    "TS_CONF_set_def_policy",
    "TS_CONF_set_policies",
    "TS_CONF_set_digests",
    "TS_CONF_set_accuracy",
    "TS_CONF_set_clock_precision_digits",
    "TS_CONF_set_ordering",
    "TS_CONF_set_tsa_name",
    "TS_CONF_set_ess_cert_id_chain",
    "TS_CONF_set_ess_cert_id_digest"
],
"ghidra/libsgx_tsgxssl_crypto_a/ts_err.o": [
    "ERR_load_TS_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/ts_lib.o": [
    "TS_ASN1_INTEGER_print_bio",
    "TS_OBJ_print_bio",
    "TS_ext_print_bio",
    "TS_X509_ALGOR_print_bio",
    "TS_MSG_IMPRINT_print_bio"
],
"ghidra/libsgx_tsgxssl_crypto_a/t_spki.o": [
    "NETSCAPE_SPKI_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/ts_req_print.o": [
    "TS_REQ_print_bio"
],
"ghidra/libsgx_tsgxssl_crypto_a/ts_req_utils.o": [
    "TS_REQ_set_version",
    "TS_REQ_get_version",
    "TS_REQ_set_msg_imprint",
    "TS_REQ_get_msg_imprint",
    "TS_MSG_IMPRINT_set_algo",
    "TS_MSG_IMPRINT_get_algo",
    "TS_MSG_IMPRINT_set_msg",
    "TS_MSG_IMPRINT_get_msg",
    "TS_REQ_set_policy_id",
    "TS_REQ_get_policy_id",
    "TS_REQ_set_nonce",
    "TS_REQ_get_nonce",
    "TS_REQ_set_cert_req",
    "TS_REQ_get_cert_req",
    "TS_REQ_get_exts",
    "TS_REQ_ext_free",
    "TS_REQ_get_ext_count",
    "TS_REQ_get_ext_by_NID",
    "TS_REQ_get_ext_by_OBJ",
    "TS_REQ_get_ext_by_critical",
    "TS_REQ_get_ext",
    "TS_REQ_delete_ext",
    "TS_REQ_add_ext",
    "TS_REQ_get_ext_d2i"
],
"ghidra/libsgx_tsgxssl_crypto_a/ts_rsp_print.o": [
    "TS_STATUS_INFO_print_bio",
    "TS_TST_INFO_print_bio",
    "TS_RESP_print_bio"
],
"ghidra/libsgx_tsgxssl_crypto_a/ts_rsp_sign.o": [
    "ess_CERT_ID_new_init",
    "ess_cert_id_v2_new_init",
    "TS_RESP_CTX_new",
    "TS_RESP_CTX_free",
    "TS_RESP_CTX_set_signer_cert",
    "TS_RESP_CTX_set_signer_key",
    "TS_RESP_CTX_set_signer_digest",
    "TS_RESP_CTX_set_def_policy",
    "TS_RESP_CTX_set_certs",
    "TS_RESP_CTX_add_policy",
    "TS_RESP_CTX_add_md",
    "TS_RESP_CTX_set_accuracy",
    "TS_RESP_CTX_add_flags",
    "TS_RESP_CTX_set_serial_cb",
    "TS_RESP_CTX_set_time_cb",
    "TS_RESP_CTX_set_extension_cb",
    "TS_RESP_CTX_set_status_info",
    "def_serial_cb",
    "TS_RESP_CTX_set_status_info_cond",
    "TS_RESP_CTX_add_failure_info",
    "def_extension_cb",
    "def_time_cb",
    "TS_RESP_CTX_get_request",
    "TS_RESP_CTX_get_tst_info",
    "TS_RESP_CTX_set_clock_precision_digits",
    "TS_RESP_create_response",
    "TS_RESP_CTX_set_ess_cert_id_digest"
],
"ghidra/libsgx_tsgxssl_crypto_a/ts_rsp_utils.o": [
    "TS_RESP_set_status_info",
    "TS_RESP_get_status_info",
    "TS_RESP_set_tst_info",
    "TS_RESP_get_token",
    "TS_RESP_get_tst_info",
    "TS_TST_INFO_set_version",
    "TS_TST_INFO_get_version",
    "TS_TST_INFO_set_policy_id",
    "TS_TST_INFO_get_policy_id",
    "TS_TST_INFO_set_msg_imprint",
    "TS_TST_INFO_get_msg_imprint",
    "TS_TST_INFO_set_serial",
    "TS_TST_INFO_get_serial",
    "TS_TST_INFO_set_time",
    "TS_TST_INFO_get_time",
    "TS_TST_INFO_set_accuracy",
    "TS_TST_INFO_get_accuracy",
    "TS_ACCURACY_set_seconds",
    "TS_ACCURACY_get_seconds",
    "TS_ACCURACY_set_millis",
    "TS_ACCURACY_get_millis",
    "TS_ACCURACY_set_micros",
    "TS_ACCURACY_get_micros",
    "TS_TST_INFO_set_ordering",
    "TS_TST_INFO_get_ordering",
    "TS_TST_INFO_set_nonce",
    "TS_TST_INFO_get_nonce",
    "TS_TST_INFO_set_tsa",
    "TS_TST_INFO_get_tsa",
    "TS_TST_INFO_get_exts",
    "TS_TST_INFO_ext_free",
    "TS_TST_INFO_get_ext_count",
    "TS_TST_INFO_get_ext_by_NID",
    "TS_TST_INFO_get_ext_by_OBJ",
    "TS_TST_INFO_get_ext_by_critical",
    "TS_TST_INFO_get_ext",
    "TS_TST_INFO_delete_ext",
    "TS_TST_INFO_add_ext",
    "TS_TST_INFO_get_ext_d2i",
    "TS_STATUS_INFO_set_status",
    "TS_STATUS_INFO_get0_status",
    "TS_STATUS_INFO_get0_text",
    "TS_STATUS_INFO_get0_failure_info"
],
"ghidra/libsgx_tsgxssl_crypto_a/ts_rsp_verify.o": [
    "ts_issuer_serial_cmp",
    "ts_find_cert",
    "ts_find_cert_v2",
    "ts_check_signer_name",
    "ts_compute_imprint.isra.0",
    "ts_check_imprints.isra.0",
    "TS_RESP_verify_signature",
    "int_ts_RESP_verify_token",
    "TS_RESP_verify_response",
    "TS_RESP_verify_token"
],
"ghidra/libsgx_tsgxssl_crypto_a/ts_verify_ctx.o": [
    "TS_VERIFY_CTX_new",
    "TS_VERIFY_CTX_init",
    "TS_VERIFY_CTX_add_flags",
    "TS_VERIFY_CTX_set_flags",
    "TS_VERIFY_CTX_set_data",
    "TS_VERIFY_CTX_set_store",
    "TS_VERIFY_CTS_set_certs",
    "TS_VERIFY_CTX_set_imprint",
    "TS_VERIFY_CTX_cleanup",
    "TS_VERIFY_CTX_free",
    "TS_REQ_to_TS_VERIFY_CTX"
],
"ghidra/libsgx_tsgxssl_crypto_a/t_x509.o": [
    "X509_ocspid_print",
    "X509_signature_dump",
    "X509_signature_print",
    "X509_aux_print",
    "X509_print_ex",
    "X509_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/txt_db.o": [
    "TXT_DB_read",
    "TXT_DB_get_by_index",
    "TXT_DB_create_index",
    "TXT_DB_write",
    "TXT_DB_insert",
    "TXT_DB_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/uid.o": [
    "OPENSSLd_issetugid"
],
"ghidra/libsgx_tsgxssl_crypto_a/ui_err.o": [
    "ERR_load_UI_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/ui_lib.o": [
    "free_string",
    "print_error",
    "general_allocate_boolean.constprop.0",
    "UI_new_method",
    "UI_new",
    "UI_free",
    "UI_add_input_string",
    "UI_dup_input_string",
    "UI_add_verify_string",
    "UI_dup_verify_string",
    "UI_add_input_boolean",
    "UI_dup_input_boolean",
    "UI_add_info_string",
    "UI_dup_info_string",
    "UI_add_error_string",
    "UI_dup_error_string",
    "UI_construct_prompt",
    "UI_add_user_data",
    "UI_dup_user_data",
    "UI_get0_user_data",
    "UI_process",
    "UI_ctrl",
    "UI_set_ex_data",
    "UI_get_ex_data",
    "UI_get_method",
    "UI_set_method",
    "UI_create_method",
    "UI_destroy_method",
    "UI_method_set_opener",
    "UI_method_set_writer",
    "UI_method_set_flusher",
    "UI_method_set_reader",
    "UI_method_set_closer",
    "UI_method_set_data_duplicator",
    "UI_method_set_prompt_constructor",
    "UI_method_set_ex_data",
    "UI_method_get_opener",
    "UI_method_get_writer",
    "UI_method_get_flusher",
    "UI_method_get_reader",
    "UI_method_get_closer",
    "UI_method_get_prompt_constructor",
    "UI_method_get_data_duplicator",
    "UI_method_get_data_destructor",
    "UI_method_get_ex_data",
    "UI_get_string_type",
    "UI_get_input_flags",
    "UI_get0_output_string",
    "UI_get0_action_string",
    "UI_get0_result_string",
    "UI_get0_result",
    "UI_get_result_string_length",
    "UI_get_result_length",
    "UI_get0_test_string",
    "UI_get_result_minsize",
    "UI_get_result_maxsize",
    "UI_set_result_ex",
    "UI_set_result"
],
"ghidra/libsgx_tsgxssl_crypto_a/ui_null.o": [
    "UI_null"
],
"ghidra/libsgx_tsgxssl_crypto_a/ui_openssl.o": [
    "UI_set_default_method",
    "UI_get_default_method"
],
"ghidra/libsgx_tsgxssl_crypto_a/ui_util.o": [
    "ui_new_method_data",
    "ui_open",
    "ui_write",
    "ui_free_method_data",
    "ui_method_data_index_init_ossl_",
    "ui_dup_method_data",
    "ui_read.part.0",
    "ui_read",
    "ui_close",
    "UI_UTIL_read_pw",
    "UI_UTIL_read_pw_string",
    "UI_UTIL_wrap_read_pem_callback"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_addr.o": [
    "range_should_be_prefix",
    "IPAddressFamily_free",
    "IPAddressFamily_cmp",
    "addr_expand",
    "i2r_address",
    "extract_min_max",
    "v6IPAddressOrRange_cmp",
    "v4IPAddressOrRange_cmp",
    "addr_contains.part.0",
    "d2i_IPAddressRange",
    "i2d_IPAddressRange",
    "IPAddressRange_new",
    "IPAddressRange_free",
    "d2i_IPAddressOrRange",
    "i2d_IPAddressOrRange",
    "IPAddressOrRange_new",
    "IPAddressOrRange_free",
    "make_addressPrefix",
    "make_addressRange.part.0",
    "d2i_IPAddressChoice",
    "i2d_IPAddressChoice",
    "IPAddressChoice_new",
    "IPAddressChoice_free",
    "d2i_IPAddressFamily",
    "i2d_IPAddressFamily",
    "IPAddressFamily_new",
    "make_IPAddressFamily",
    "X509v3_addr_get_afi",
    "i2r_IPAddrBlocks",
    "X509v3_addr_add_inherit",
    "X509v3_addr_add_prefix",
    "X509v3_addr_add_range",
    "X509v3_addr_get_range",
    "X509v3_addr_is_canonical",
    "addr_validate_path_internal.part.0",
    "X509v3_addr_canonize",
    "v2i_IPAddrBlocks",
    "X509v3_addr_inherits",
    "X509v3_addr_subset",
    "X509v3_addr_validate_path",
    "X509v3_addr_validate_resource_set"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_admis.o": [
    "PROFESSION_INFO_free",
    "ADMISSIONS_free",
    "i2r_NAMING_AUTHORITY.isra.0",
    "i2r_ADMISSION_SYNTAX",
    "d2i_NAMING_AUTHORITY",
    "i2d_NAMING_AUTHORITY",
    "NAMING_AUTHORITY_new",
    "NAMING_AUTHORITY_free",
    "d2i_PROFESSION_INFO",
    "i2d_PROFESSION_INFO",
    "PROFESSION_INFO_new",
    "d2i_ADMISSIONS",
    "i2d_ADMISSIONS",
    "ADMISSIONS_new",
    "d2i_ADMISSION_SYNTAX",
    "i2d_ADMISSION_SYNTAX",
    "ADMISSION_SYNTAX_new",
    "ADMISSION_SYNTAX_free",
    "NAMING_AUTHORITY_get0_authorityId",
    "NAMING_AUTHORITY_set0_authorityId",
    "NAMING_AUTHORITY_get0_authorityURL",
    "NAMING_AUTHORITY_set0_authorityURL",
    "NAMING_AUTHORITY_get0_authorityText",
    "NAMING_AUTHORITY_set0_authorityText",
    "ADMISSION_SYNTAX_get0_admissionAuthority",
    "ADMISSION_SYNTAX_set0_admissionAuthority",
    "ADMISSION_SYNTAX_get0_contentsOfAdmissions",
    "ADMISSION_SYNTAX_set0_contentsOfAdmissions",
    "ADMISSIONS_get0_admissionAuthority",
    "ADMISSIONS_set0_admissionAuthority",
    "ADMISSIONS_get0_namingAuthority",
    "ADMISSIONS_set0_namingAuthority",
    "ADMISSIONS_get0_professionInfos",
    "ADMISSIONS_set0_professionInfos",
    "PROFESSION_INFO_get0_addProfessionInfo",
    "PROFESSION_INFO_set0_addProfessionInfo",
    "PROFESSION_INFO_get0_namingAuthority",
    "PROFESSION_INFO_set0_namingAuthority",
    "PROFESSION_INFO_get0_professionItems",
    "PROFESSION_INFO_set0_professionItems",
    "PROFESSION_INFO_get0_professionOIDs",
    "PROFESSION_INFO_set0_professionOIDs",
    "PROFESSION_INFO_get0_registrationNumber",
    "PROFESSION_INFO_set0_registrationNumber"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_akeya.o": [
    "d2i_AUTHORITY_KEYID",
    "i2d_AUTHORITY_KEYID",
    "AUTHORITY_KEYID_new",
    "AUTHORITY_KEYID_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_akey.o": [
    "v2i_AUTHORITY_KEYID",
    "i2v_AUTHORITY_KEYID"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_alt.o": [
    "copy_email",
    "i2v_GENERAL_NAME",
    "i2v_GENERAL_NAMES",
    "GENERAL_NAME_print",
    "a2i_GENERAL_NAME",
    "v2i_GENERAL_NAME_ex",
    "v2i_GENERAL_NAME",
    "v2i_issuer_alt",
    "v2i_subject_alt",
    "v2i_GENERAL_NAMES"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_asid.o": [
    "ASIdOrRange_cmp",
    "i2r_ASIdentifierChoice.part.0",
    "i2r_ASIdentifiers",
    "asid_contains",
    "ASIdentifierChoice_is_canonical.part.0",
    "d2i_ASRange",
    "i2d_ASRange",
    "ASRange_new",
    "ASRange_free",
    "d2i_ASIdOrRange",
    "i2d_ASIdOrRange",
    "ASIdOrRange_new",
    "ASIdOrRange_free",
    "ASIdentifierChoice_canonize.part.0",
    "d2i_ASIdentifierChoice",
    "i2d_ASIdentifierChoice",
    "ASIdentifierChoice_new",
    "ASIdentifierChoice_free",
    "d2i_ASIdentifiers",
    "i2d_ASIdentifiers",
    "ASIdentifiers_new",
    "ASIdentifiers_free",
    "X509v3_asid_add_inherit",
    "X509v3_asid_add_id_or_range",
    "X509v3_asid_is_canonical",
    "asid_validate_path_internal.part.0",
    "X509v3_asid_canonize",
    "v2i_ASIdentifiers",
    "X509v3_asid_inherits",
    "X509v3_asid_subset",
    "X509v3_asid_validate_path",
    "X509v3_asid_validate_resource_set"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_bcons.o": [
    "i2v_BASIC_CONSTRAINTS",
    "d2i_BASIC_CONSTRAINTS",
    "i2d_BASIC_CONSTRAINTS",
    "BASIC_CONSTRAINTS_new",
    "BASIC_CONSTRAINTS_free",
    "v2i_BASIC_CONSTRAINTS"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_bitst.o": [
    "i2v_ASN1_BIT_STRING",
    "v2i_ASN1_BIT_STRING"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_conf.o": [
    "v3_generic_extension",
    "do_ext_i2d.isra.0",
    "do_ext_nconf",
    "X509V3_EXT_nconf",
    "X509V3_EXT_nconf_nid",
    "X509V3_EXT_i2d",
    "X509V3_EXT_add_nconf_sk",
    "X509V3_EXT_add_nconf",
    "X509V3_EXT_CRL_add_nconf",
    "X509V3_EXT_REQ_add_nconf",
    "X509V3_get_string",
    "X509V3_get_section",
    "X509V3_string_free",
    "X509V3_section_free",
    "X509V3_set_nconf",
    "X509V3_set_ctx",
    "X509V3_EXT_conf",
    "X509V3_EXT_conf_nid",
    "X509V3_set_conf_lhash",
    "X509V3_EXT_add_conf",
    "X509V3_EXT_CRL_add_conf",
    "X509V3_EXT_REQ_add_conf"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_cpols.o": [
    "POLICYINFO_free",
    "print_qualifiers",
    "i2r_certpol",
    "d2i_CERTIFICATEPOLICIES",
    "i2d_CERTIFICATEPOLICIES",
    "CERTIFICATEPOLICIES_new",
    "CERTIFICATEPOLICIES_free",
    "d2i_POLICYINFO",
    "i2d_POLICYINFO",
    "POLICYINFO_new",
    "d2i_POLICYQUALINFO",
    "i2d_POLICYQUALINFO",
    "POLICYQUALINFO_new",
    "POLICYQUALINFO_free",
    "d2i_USERNOTICE",
    "i2d_USERNOTICE",
    "USERNOTICE_new",
    "USERNOTICE_free",
    "d2i_NOTICEREF",
    "i2d_NOTICEREF",
    "NOTICEREF_new",
    "r2i_certpol",
    "NOTICEREF_free",
    "X509_POLICY_NODE_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_crld.o": [
    "print_reasons",
    "dpn_cb",
    "set_reasons",
    "DIST_POINT_free",
    "i2r_idp",
    "i2r_crldp",
    "d2i_DIST_POINT_NAME",
    "i2d_DIST_POINT_NAME",
    "DIST_POINT_NAME_new",
    "set_dist_point_name.isra.0",
    "DIST_POINT_NAME_free",
    "d2i_DIST_POINT",
    "i2d_DIST_POINT",
    "DIST_POINT_new",
    "v2i_crld",
    "d2i_CRL_DIST_POINTS",
    "i2d_CRL_DIST_POINTS",
    "CRL_DIST_POINTS_new",
    "CRL_DIST_POINTS_free",
    "d2i_ISSUING_DIST_POINT",
    "i2d_ISSUING_DIST_POINT",
    "ISSUING_DIST_POINT_new",
    "ISSUING_DIST_POINT_free",
    "v2i_idp",
    "DIST_POINT_set_dpname"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_enum.o": [
    "i2s_ASN1_ENUMERATED_TABLE"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3err.o": [
    "ERR_load_X509V3_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_extku.o": [
    "v2i_EXTENDED_KEY_USAGE",
    "i2v_EXTENDED_KEY_USAGE",
    "d2i_EXTENDED_KEY_USAGE",
    "i2d_EXTENDED_KEY_USAGE",
    "EXTENDED_KEY_USAGE_new",
    "EXTENDED_KEY_USAGE_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_genn.o": [
    "d2i_GENERAL_NAME",
    "i2d_GENERAL_NAME",
    "d2i_OTHERNAME",
    "i2d_OTHERNAME",
    "OTHERNAME_new",
    "OTHERNAME_free",
    "d2i_EDIPARTYNAME",
    "i2d_EDIPARTYNAME",
    "EDIPARTYNAME_new",
    "EDIPARTYNAME_free",
    "GENERAL_NAME_new",
    "GENERAL_NAME_free",
    "d2i_GENERAL_NAMES",
    "i2d_GENERAL_NAMES",
    "GENERAL_NAMES_new",
    "GENERAL_NAMES_free",
    "GENERAL_NAME_dup",
    "OTHERNAME_cmp",
    "GENERAL_NAME_cmp",
    "GENERAL_NAME_set0_value",
    "GENERAL_NAME_get0_value",
    "GENERAL_NAME_set0_othername",
    "GENERAL_NAME_get0_otherName",
    "GENERAL_NAME_cmp.cold",
    "GENERAL_NAME_get0_value.cold"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_ia5.o": [
    "i2s_ASN1_IA5STRING",
    "s2i_ASN1_IA5STRING"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_info.o": [
    "i2v_AUTHORITY_INFO_ACCESS",
    "ACCESS_DESCRIPTION_free",
    "d2i_ACCESS_DESCRIPTION",
    "i2d_ACCESS_DESCRIPTION",
    "ACCESS_DESCRIPTION_new",
    "v2i_AUTHORITY_INFO_ACCESS",
    "d2i_AUTHORITY_INFO_ACCESS",
    "i2d_AUTHORITY_INFO_ACCESS",
    "AUTHORITY_INFO_ACCESS_new",
    "AUTHORITY_INFO_ACCESS_free",
    "i2a_ACCESS_DESCRIPTION"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_int.o": [
    "s2i_asn1_int"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_lib.o": [
    "ext_cmp",
    "ext_cmp_BSEARCH_CMP_FN",
    "ext_list_free",
    "X509V3_EXT_add",
    "X509V3_EXT_get_nid",
    "X509V3_EXT_get",
    "X509V3_EXT_add_list",
    "X509V3_EXT_add_alias",
    "X509V3_EXT_cleanup",
    "X509V3_add_standard_extensions",
    "X509V3_EXT_d2i",
    "X509V3_get_d2i",
    "X509V3_add1_i2d"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_ncons.o": [
    "do_i2r_name_constraints.isra.0",
    "i2r_NAME_CONSTRAINTS",
    "nc_match_single.isra.0",
    "nc_match.isra.0",
    "GENERAL_SUBTREE_new",
    "GENERAL_SUBTREE_free",
    "NAME_CONSTRAINTS_new",
    "NAME_CONSTRAINTS_free",
    "v2i_NAME_CONSTRAINTS",
    "NAME_CONSTRAINTS_check",
    "NAME_CONSTRAINTS_check_CN"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_ocsp.o": [
    "i2r_ocsp_nocheck",
    "i2d_ocsp_nonce",
    "i2r_ocsp_crlid",
    "i2r_ocsp_acutoff",
    "i2r_object",
    "i2r_ocsp_nonce",
    "d2i_ocsp_nonce",
    "i2r_ocsp_serviceloc"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_pcia.o": [
    "d2i_PROXY_POLICY",
    "i2d_PROXY_POLICY",
    "PROXY_POLICY_new",
    "PROXY_POLICY_free",
    "d2i_PROXY_CERT_INFO_EXTENSION",
    "i2d_PROXY_CERT_INFO_EXTENSION",
    "PROXY_CERT_INFO_EXTENSION_new",
    "PROXY_CERT_INFO_EXTENSION_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_pci.o": [
    "process_pci_value",
    "r2i_pci",
    "i2r_pci"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_pcons.o": [
    "i2v_POLICY_CONSTRAINTS",
    "POLICY_CONSTRAINTS_new",
    "POLICY_CONSTRAINTS_free",
    "v2i_POLICY_CONSTRAINTS"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_pku.o": [
    "i2r_PKEY_USAGE_PERIOD",
    "d2i_PKEY_USAGE_PERIOD",
    "i2d_PKEY_USAGE_PERIOD",
    "PKEY_USAGE_PERIOD_new",
    "PKEY_USAGE_PERIOD_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_pmaps.o": [
    "i2v_POLICY_MAPPINGS",
    "POLICY_MAPPING_free",
    "POLICY_MAPPING_new",
    "v2i_POLICY_MAPPINGS"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_prn.o": [
    "X509V3_EXT_val_prn",
    "X509V3_EXT_print",
    "X509V3_extensions_print"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_purp.o": [
    "xp_cmp",
    "nid_cmp_BSEARCH_CMP_FN",
    "no_check",
    "check_sig_alg_match",
    "xptable_free",
    "check_purpose_ssl_client",
    "check_purpose_crl_sign",
    "ocsp_helper",
    "check_purpose_smime_sign",
    "check_purpose_smime_encrypt",
    "check_purpose_ns_ssl_server",
    "check_purpose_timestamp_sign",
    "check_purpose_ssl_server",
    "X509_PURPOSE_get_count",
    "X509_PURPOSE_get0",
    "X509_PURPOSE_get_by_sname",
    "X509_PURPOSE_get_by_id",
    "X509_PURPOSE_set",
    "X509_PURPOSE_add",
    "X509_PURPOSE_cleanup",
    "X509_PURPOSE_get_id",
    "X509_PURPOSE_get0_name",
    "X509_PURPOSE_get0_sname",
    "X509_PURPOSE_get_trust",
    "X509_supported_extension",
    "X509_set_proxy_flag",
    "X509_set_proxy_pathlen",
    "x509_signing_allowed",
    "X509_check_akid",
    "x509v3_cache_extensions",
    "X509_check_purpose",
    "X509_check_ca",
    "x509_likely_issued",
    "X509_check_issued",
    "X509_get_extension_flags",
    "X509_get_key_usage",
    "X509_get_extended_key_usage",
    "X509_get0_subject_key_id",
    "X509_get0_authority_key_id",
    "X509_get0_authority_issuer",
    "X509_get0_authority_serial",
    "X509_get_pathlen",
    "X509_get_proxy_pathlen"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_skey.o": [
    "i2s_ASN1_OCTET_STRING",
    "s2i_ASN1_OCTET_STRING",
    "s2i_skey_id"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_sxnet.o": [
    "sxnet_i2r",
    "d2i_SXNETID",
    "i2d_SXNETID",
    "SXNETID_new",
    "SXNETID_free",
    "d2i_SXNET",
    "i2d_SXNET",
    "SXNET_new",
    "SXNET_free",
    "SXNET_get_id_INTEGER",
    "SXNET_add_id_INTEGER",
    "SXNET_add_id_asc",
    "sxnet_v2i",
    "SXNET_add_id_ulong",
    "SXNET_get_id_asc",
    "SXNET_get_id_ulong"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_tlsf.o": [
    "v2i_TLS_FEATURE",
    "i2v_TLS_FEATURE",
    "TLS_FEATURE_new",
    "TLS_FEATURE_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/v3_utl.o": [
    "equal_nocase",
    "str_free",
    "x509v3_add_len_value",
    "sk_strcmp",
    "strip_spaces",
    "equal_case",
    "equal_wildcard",
    "do_check_string",
    "do_x509_check",
    "ipv4_from_asc",
    "ipv6_cb",
    "X509V3_conf_free",
    "bignum_to_string.part.0",
    "equal_email",
    "X509V3_add_value",
    "X509V3_add_value_uchar",
    "x509v3_add_len_value_uchar",
    "X509V3_add_value_bool",
    "X509V3_add_value_bool_nf",
    "i2s_ASN1_ENUMERATED",
    "i2s_ASN1_INTEGER",
    "s2i_ASN1_INTEGER",
    "X509V3_add_value_int",
    "X509V3_get_value_bool",
    "X509V3_get_value_int",
    "X509V3_parse_list",
    "name_cmp",
    "X509_email_free",
    "append_ia5",
    "X509_get1_ocsp",
    "get_email",
    "X509_get1_email",
    "X509_REQ_get1_email",
    "X509_check_host",
    "X509_check_email",
    "X509_check_ip",
    "a2i_ipadd",
    "X509_check_ip_asc",
    "a2i_IPADDRESS",
    "a2i_IPADDRESS_NC",
    "X509V3_NAME_from_section"
],
"ghidra/libsgx_tsgxssl_crypto_a/vpaes-x86_64.o": [
    "_vpaes_encrypt_core",
    "_vpaes_decrypt_core",
    "_vpaes_schedule_core",
    "_vpaes_schedule_192_smear",
    "_vpaes_schedule_round",
    "_vpaes_schedule_low_round",
    "_vpaes_schedule_transform",
    "_vpaes_schedule_mangle",
    "vpaes_set_encrypt_key",
    "vpaes_set_decrypt_key",
    "vpaes_encrypt",
    "vpaes_decrypt",
    "vpaes_cbc_encrypt",
    "_vpaes_preheat"
],
"ghidra/libsgx_tsgxssl_crypto_a/wp_dgst.o": [
    "WHIRLPOOL_Init",
    "WHIRLPOOL_BitUpdate",
    "WHIRLPOOL_Update",
    "WHIRLPOOL_Final",
    "WHIRLPOOL"
],
"ghidra/libsgx_tsgxssl_crypto_a/wp-x86_64.o": [
    "whirlpool_block"
],
"ghidra/libsgx_tsgxssl_crypto_a/wrap128.o": [
    "crypto_128_unwrap_raw",
    "CRYPTO_128_wrap",
    "CRYPTO_128_unwrap",
    "CRYPTO_128_wrap_pad",
    "CRYPTO_128_unwrap_pad"
],
"ghidra/libsgx_tsgxssl_crypto_a/x25519-x86_64.o": [
    "x25519_fe51_mul",
    "x25519_fe51_sqr",
    "x25519_fe51_mul121666",
    "x25519_fe64_eligible",
    "x25519_fe64_mul",
    "x25519_fe64_sqr",
    "x25519_fe64_mul121666",
    "x25519_fe64_add",
    "x25519_fe64_sub",
    "x25519_fe64_tobytes"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_att.o": [
    "X509at_get_attr_by_OBJ",
    "X509at_get_attr_by_NID",
    "X509at_get_attr",
    "X509at_delete_attr",
    "X509at_add1_attr",
    "X509_ATTRIBUTE_set1_object",
    "X509_ATTRIBUTE_set1_data",
    "X509_ATTRIBUTE_create_by_OBJ",
    "X509at_add1_attr_by_OBJ",
    "X509_ATTRIBUTE_create_by_NID",
    "X509at_add1_attr_by_NID",
    "X509_ATTRIBUTE_create_by_txt",
    "X509at_add1_attr_by_txt",
    "X509_ATTRIBUTE_count",
    "X509_ATTRIBUTE_get0_object",
    "X509_ATTRIBUTE_get0_type",
    "X509_ATTRIBUTE_get0_data",
    "X509at_get0_data_by_OBJ"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_cmp.o": [
    "check_suite_b",
    "X509_issuer_and_serial_hash",
    "X509_CRL_match",
    "X509_get_issuer_name",
    "X509_get_subject_name",
    "X509_get_serialNumber",
    "X509_get0_serialNumber",
    "X509_cmp",
    "X509_NAME_cmp",
    "X509_issuer_and_serial_cmp",
    "X509_issuer_name_cmp",
    "X509_subject_name_cmp",
    "X509_CRL_cmp",
    "X509_NAME_hash",
    "X509_issuer_name_hash",
    "X509_subject_name_hash",
    "X509_NAME_hash_old",
    "X509_issuer_name_hash_old",
    "X509_subject_name_hash_old",
    "X509_find_by_issuer_and_serial",
    "X509_find_by_subject",
    "X509_get0_pubkey",
    "X509_get_pubkey",
    "X509_check_private_key",
    "X509_chain_check_suiteb",
    "X509_CRL_check_suiteb",
    "X509_chain_up_ref"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509cset.o": [
    "X509_CRL_set_version",
    "X509_CRL_set_issuer_name",
    "X509_CRL_set1_lastUpdate",
    "X509_CRL_set1_nextUpdate",
    "X509_CRL_sort",
    "X509_CRL_up_ref",
    "X509_CRL_get_version",
    "X509_CRL_get0_lastUpdate",
    "X509_CRL_get0_nextUpdate",
    "X509_CRL_get_lastUpdate",
    "X509_CRL_get_nextUpdate",
    "X509_CRL_get_issuer",
    "X509_CRL_get0_extensions",
    "X509_CRL_get_REVOKED",
    "X509_CRL_get0_signature",
    "X509_CRL_get_signature_nid",
    "X509_REVOKED_get0_revocationDate",
    "X509_REVOKED_set_revocationDate",
    "X509_REVOKED_get0_serialNumber",
    "X509_REVOKED_set_serialNumber",
    "X509_REVOKED_get0_extensions",
    "i2d_re_X509_CRL_tbs"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_d2.o": [
    "X509_STORE_set_default_paths",
    "X509_STORE_load_locations"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_def.o": [
    "X509_get_default_private_dir",
    "X509_get_default_cert_area",
    "X509_get_default_cert_dir",
    "X509_get_default_cert_file",
    "X509_get_default_cert_dir_env",
    "X509_get_default_cert_file_env"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_err.o": [
    "ERR_load_X509_strings"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_ext.o": [
    "X509_CRL_get_ext_count",
    "X509_CRL_get_ext_by_NID",
    "X509_CRL_get_ext_by_OBJ",
    "X509_CRL_get_ext_by_critical",
    "X509_CRL_get_ext",
    "X509_CRL_delete_ext",
    "X509_CRL_get_ext_d2i",
    "X509_CRL_add1_ext_i2d",
    "X509_CRL_add_ext",
    "X509_get_ext_count",
    "X509_get_ext_by_NID",
    "X509_get_ext_by_OBJ",
    "X509_get_ext_by_critical",
    "X509_get_ext",
    "X509_delete_ext",
    "X509_add_ext",
    "X509_get_ext_d2i",
    "X509_add1_ext_i2d",
    "X509_REVOKED_get_ext_count",
    "X509_REVOKED_get_ext_by_NID",
    "X509_REVOKED_get_ext_by_OBJ",
    "X509_REVOKED_get_ext_by_critical",
    "X509_REVOKED_get_ext",
    "X509_REVOKED_delete_ext",
    "X509_REVOKED_add_ext",
    "X509_REVOKED_get_ext_d2i",
    "X509_REVOKED_add1_ext_i2d"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_lu.o": [
    "x509_object_cmp",
    "X509_OBJECT_free",
    "x509_object_idx_cnt",
    "X509_LOOKUP_new",
    "X509_LOOKUP_free",
    "X509_STORE_lock",
    "X509_STORE_unlock",
    "X509_LOOKUP_init",
    "X509_LOOKUP_shutdown",
    "X509_LOOKUP_ctrl",
    "X509_LOOKUP_by_subject",
    "X509_LOOKUP_by_issuer_serial",
    "X509_LOOKUP_by_fingerprint",
    "X509_LOOKUP_by_alias",
    "X509_LOOKUP_set_method_data",
    "X509_LOOKUP_get_method_data",
    "X509_LOOKUP_get_store",
    "X509_STORE_new",
    "X509_STORE_free",
    "X509_STORE_up_ref",
    "X509_STORE_add_lookup",
    "X509_OBJECT_up_ref_count",
    "X509_OBJECT_get0_X509",
    "X509_OBJECT_get0_X509_CRL",
    "X509_OBJECT_get_type",
    "X509_OBJECT_new",
    "X509_OBJECT_set1_X509",
    "X509_OBJECT_set1_X509_CRL",
    "X509_OBJECT_idx_by_subject",
    "X509_OBJECT_retrieve_by_subject",
    "X509_STORE_CTX_get_by_subject",
    "X509_STORE_CTX_get_obj_by_subject",
    "X509_STORE_get0_objects",
    "X509_STORE_CTX_get1_certs",
    "X509_STORE_CTX_get1_crls",
    "X509_OBJECT_retrieve_match",
    "X509_STORE_add_crl",
    "X509_STORE_add_cert",
    "X509_STORE_CTX_get1_issuer",
    "X509_STORE_set_flags",
    "X509_STORE_set_depth",
    "X509_STORE_set_purpose",
    "X509_STORE_set_trust",
    "X509_STORE_set1_param",
    "X509_STORE_get0_param",
    "X509_STORE_set_verify",
    "X509_STORE_get_verify",
    "X509_STORE_set_verify_cb",
    "X509_STORE_get_verify_cb",
    "X509_STORE_set_get_issuer",
    "X509_STORE_get_get_issuer",
    "X509_STORE_set_check_issued",
    "X509_STORE_get_check_issued",
    "X509_STORE_set_check_revocation",
    "X509_STORE_get_check_revocation",
    "X509_STORE_set_get_crl",
    "X509_STORE_get_get_crl",
    "X509_STORE_set_check_crl",
    "X509_STORE_get_check_crl",
    "X509_STORE_set_cert_crl",
    "X509_STORE_get_cert_crl",
    "X509_STORE_set_check_policy",
    "X509_STORE_get_check_policy",
    "X509_STORE_set_lookup_certs",
    "X509_STORE_get_lookup_certs",
    "X509_STORE_set_lookup_crls",
    "X509_STORE_get_lookup_crls",
    "X509_STORE_set_cleanup",
    "X509_STORE_get_cleanup",
    "X509_STORE_set_ex_data",
    "X509_STORE_get_ex_data",
    "X509_STORE_CTX_get0_store"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_meth.o": [
    "X509_LOOKUP_meth_new",
    "X509_LOOKUP_meth_free",
    "X509_LOOKUP_meth_set_new_item",
    "X509_LOOKUP_meth_get_new_item",
    "X509_LOOKUP_meth_set_free",
    "X509_LOOKUP_meth_get_free",
    "X509_LOOKUP_meth_set_init",
    "X509_LOOKUP_meth_get_init",
    "X509_LOOKUP_meth_set_shutdown",
    "X509_LOOKUP_meth_get_shutdown",
    "X509_LOOKUP_meth_set_ctrl",
    "X509_LOOKUP_meth_get_ctrl",
    "X509_LOOKUP_meth_set_get_by_subject",
    "X509_LOOKUP_meth_get_get_by_subject",
    "X509_LOOKUP_meth_set_get_by_issuer_serial",
    "X509_LOOKUP_meth_get_get_by_issuer_serial",
    "X509_LOOKUP_meth_set_get_by_fingerprint",
    "X509_LOOKUP_meth_get_get_by_fingerprint",
    "X509_LOOKUP_meth_set_get_by_alias",
    "X509_LOOKUP_meth_get_get_by_alias"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509name.o": [
    "X509_NAME_entry_count",
    "X509_NAME_get_index_by_OBJ",
    "X509_NAME_get_index_by_NID",
    "X509_NAME_get_entry",
    "X509_NAME_delete_entry",
    "X509_NAME_add_entry",
    "X509_NAME_ENTRY_set_object",
    "X509_NAME_ENTRY_set_data",
    "X509_NAME_ENTRY_create_by_OBJ",
    "X509_NAME_add_entry_by_OBJ",
    "X509_NAME_ENTRY_create_by_txt",
    "X509_NAME_add_entry_by_txt",
    "X509_NAME_ENTRY_create_by_NID",
    "X509_NAME_add_entry_by_NID",
    "X509_NAME_ENTRY_get_object",
    "X509_NAME_ENTRY_get_data",
    "X509_NAME_get_text_by_OBJ",
    "X509_NAME_get_text_by_NID",
    "X509_NAME_ENTRY_set"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_obj.o": [
    "X509_NAME_oneline"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_r2x.o": [
    "X509_REQ_to_X509"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_req.o": [
    "X509_to_X509_REQ",
    "X509_REQ_get_pubkey",
    "X509_REQ_get0_pubkey",
    "X509_REQ_get_X509_PUBKEY",
    "X509_REQ_check_private_key",
    "X509_REQ_extension_nid",
    "X509_REQ_get_extension_nids",
    "X509_REQ_set_extension_nids",
    "X509_REQ_get_attr_count",
    "X509_REQ_get_attr_by_NID",
    "X509_REQ_get_attr_by_OBJ",
    "X509_REQ_get_attr",
    "X509_REQ_get_extensions",
    "X509_REQ_delete_attr",
    "X509_REQ_add1_attr",
    "X509_REQ_add1_attr_by_OBJ",
    "X509_REQ_add1_attr_by_NID",
    "X509_REQ_add_extensions_nid",
    "X509_REQ_add_extensions",
    "X509_REQ_add1_attr_by_txt",
    "X509_REQ_get_version",
    "X509_REQ_get_subject_name",
    "X509_REQ_get0_signature",
    "X509_REQ_set0_signature",
    "X509_REQ_set1_signature_algo",
    "X509_REQ_get_signature_nid",
    "i2d_re_X509_REQ_tbs"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509rset.o": [
    "X509_REQ_set_version",
    "X509_REQ_set_subject_name",
    "X509_REQ_set_pubkey"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_set.o": [
    "X509_set_version",
    "X509_set_serialNumber",
    "X509_set_issuer_name",
    "X509_set_subject_name",
    "x509_set1_time",
    "X509_set1_notBefore",
    "X509_set1_notAfter",
    "X509_set_pubkey",
    "X509_up_ref",
    "X509_get_version",
    "X509_get0_notBefore",
    "X509_get0_notAfter",
    "X509_getm_notBefore",
    "X509_getm_notAfter",
    "X509_get_signature_type",
    "X509_get_X509_PUBKEY",
    "X509_get0_extensions",
    "X509_get0_uids",
    "X509_get0_tbs_sigalg",
    "X509_SIG_INFO_get",
    "X509_SIG_INFO_set",
    "X509_get_signature_info",
    "x509_init_sig_info"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509spki.o": [
    "NETSCAPE_SPKI_set_pubkey",
    "NETSCAPE_SPKI_get_pubkey",
    "NETSCAPE_SPKI_b64_decode",
    "NETSCAPE_SPKI_b64_encode"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_trs.o": [
    "tr_cmp",
    "trust_compat",
    "trtable_free",
    "obj_trust",
    "trust_1oid",
    "trust_1oidany",
    "X509_TRUST_set_default",
    "X509_TRUST_get_count",
    "X509_TRUST_get0",
    "X509_TRUST_get_by_id",
    "X509_check_trust",
    "X509_TRUST_set",
    "X509_TRUST_add",
    "X509_TRUST_cleanup",
    "X509_TRUST_get_flags",
    "X509_TRUST_get0_name",
    "X509_TRUST_get_trust"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_txt.o": [
    "X509_verify_cert_error_string"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509type.o": [
    "X509_certificate_type"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_v3.o": [
    "X509v3_get_ext_count",
    "X509v3_get_ext_by_OBJ",
    "X509v3_get_ext_by_NID",
    "X509v3_get_ext_by_critical",
    "X509v3_get_ext",
    "X509v3_delete_ext",
    "X509v3_add_ext",
    "X509_EXTENSION_set_object",
    "X509_EXTENSION_set_critical",
    "X509_EXTENSION_set_data",
    "X509_EXTENSION_create_by_OBJ",
    "X509_EXTENSION_create_by_NID",
    "X509_EXTENSION_get_object",
    "X509_EXTENSION_get_data",
    "X509_EXTENSION_get_critical"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_vfy.o": [
    "null_callback",
    "lookup_certs_sk",
    "crl_extension_match",
    "check_issued",
    "dane_match.isra.0",
    "cert_crl",
    "check_policy",
    "check_trust",
    "check_id",
    "X509_time_adj_ex",
    "X509_time_adj",
    "X509_cmp_time",
    "x509_check_cert_time",
    "find_issuer",
    "get_issuer_sk",
    "internal_verify",
    "X509_cmp_current_time",
    "check_crl_time",
    "get_crl_sk",
    "check_revocation",
    "X509_gmtime_adj",
    "X509_get_pubkey_parameters",
    "verify_chain",
    "X509_verify_cert",
    "X509_CRL_diff",
    "X509_STORE_CTX_set_ex_data",
    "X509_STORE_CTX_get_ex_data",
    "X509_STORE_CTX_get_error",
    "X509_STORE_CTX_set_error",
    "X509_STORE_CTX_get_error_depth",
    "X509_STORE_CTX_set_error_depth",
    "X509_STORE_CTX_get_current_cert",
    "X509_STORE_CTX_set_current_cert",
    "X509_STORE_CTX_get0_chain",
    "X509_STORE_CTX_get1_chain",
    "X509_STORE_CTX_get0_current_issuer",
    "X509_STORE_CTX_get0_current_crl",
    "X509_STORE_CTX_get0_parent_ctx",
    "X509_STORE_CTX_set_cert",
    "X509_STORE_CTX_set0_crls",
    "X509_STORE_CTX_purpose_inherit",
    "X509_STORE_CTX_set_purpose",
    "X509_STORE_CTX_set_trust",
    "X509_STORE_CTX_new",
    "X509_STORE_CTX_set0_trusted_stack",
    "X509_STORE_CTX_cleanup",
    "X509_STORE_CTX_free",
    "X509_STORE_CTX_init",
    "X509_STORE_CTX_set_depth",
    "X509_STORE_CTX_set_flags",
    "X509_STORE_CTX_set_time",
    "X509_STORE_CTX_get0_cert",
    "X509_STORE_CTX_get0_untrusted",
    "X509_STORE_CTX_set0_untrusted",
    "X509_STORE_CTX_set0_verified_chain",
    "X509_STORE_CTX_set_verify_cb",
    "X509_STORE_CTX_get_verify_cb",
    "X509_STORE_CTX_set_verify",
    "X509_STORE_CTX_get_verify",
    "X509_STORE_CTX_get_get_issuer",
    "X509_STORE_CTX_get_check_issued",
    "X509_STORE_CTX_get_check_revocation",
    "X509_STORE_CTX_get_get_crl",
    "X509_STORE_CTX_get_check_crl",
    "X509_STORE_CTX_get_cert_crl",
    "X509_STORE_CTX_get_check_policy",
    "X509_STORE_CTX_get_lookup_certs",
    "X509_STORE_CTX_get_lookup_crls",
    "X509_STORE_CTX_get_cleanup",
    "X509_STORE_CTX_get0_policy_tree",
    "X509_STORE_CTX_get_explicit_policy",
    "X509_STORE_CTX_get_num_untrusted",
    "X509_STORE_CTX_set_default",
    "X509_STORE_CTX_get0_param",
    "X509_STORE_CTX_set0_param",
    "check_crl",
    "X509_STORE_CTX_set0_dane"
],
"ghidra/libsgx_tsgxssl_crypto_a/x509_vpm.o": [
    "str_free",
    "str_copy",
    "param_cmp",
    "table_cmp_BSEARCH_CMP_FN",
    "X509_VERIFY_PARAM_free",
    "X509_VERIFY_PARAM_new",
    "X509_VERIFY_PARAM_set1_name",
    "X509_VERIFY_PARAM_set_flags",
    "X509_VERIFY_PARAM_clear_flags",
    "X509_VERIFY_PARAM_get_flags",
    "X509_VERIFY_PARAM_get_inh_flags",
    "X509_VERIFY_PARAM_set_inh_flags",
    "X509_VERIFY_PARAM_set_purpose",
    "X509_VERIFY_PARAM_set_trust",
    "X509_VERIFY_PARAM_set_depth",
    "X509_VERIFY_PARAM_set_auth_level",
    "X509_VERIFY_PARAM_get_time",
    "X509_VERIFY_PARAM_set_time",
    "X509_VERIFY_PARAM_add0_policy",
    "X509_VERIFY_PARAM_set1_policies",
    "X509_VERIFY_PARAM_set1_host",
    "X509_VERIFY_PARAM_add1_host",
    "X509_VERIFY_PARAM_set_hostflags",
    "X509_VERIFY_PARAM_get_hostflags",
    "X509_VERIFY_PARAM_get0_peername",
    "X509_VERIFY_PARAM_move_peername",
    "X509_VERIFY_PARAM_set1_email",
    "X509_VERIFY_PARAM_set1_ip",
    "X509_VERIFY_PARAM_inherit",
    "X509_VERIFY_PARAM_set1",
    "X509_VERIFY_PARAM_set1_ip_asc",
    "X509_VERIFY_PARAM_get_depth",
    "X509_VERIFY_PARAM_get_auth_level",
    "X509_VERIFY_PARAM_get0_name",
    "X509_VERIFY_PARAM_add0_table",
    "X509_VERIFY_PARAM_get_count",
    "X509_VERIFY_PARAM_get0",
    "X509_VERIFY_PARAM_lookup",
    "X509_VERIFY_PARAM_table_cleanup"
],
"ghidra/libsgx_tsgxssl_crypto_a/x86_64cpuid.o": [
    "OPENSSL_atomic_add",
    "OPENSSL_rdtsc",
    "OPENSSL_ia32_cpuid",
    "OPENSSL_cleanse",
    "CRYPTO_memcmp",
    "OPENSSL_wipe_cpu",
    "OPENSSL_instrument_bus",
    "OPENSSL_instrument_bus2",
    "OPENSSL_ia32_rdrand_bytes",
    "OPENSSL_ia32_rdseed_bytes"
],
"ghidra/libsgx_tsgxssl_crypto_a/x86_64-gcc.o": [
    "bn_mul_add_words",
    "bn_mul_words",
    "bn_sqr_words",
    "bn_div_words",
    "bn_add_words",
    "bn_sub_words",
    "bn_mul_comba8",
    "bn_mul_comba4",
    "bn_sqr_comba8",
    "bn_sqr_comba4"
],
"ghidra/libsgx_tsgxssl_crypto_a/x86_64-gf2m.o": [
    "_mul_1x1",
    "bn_GF2m_mul_2x2"
],
"ghidra/libsgx_tsgxssl_crypto_a/x86_64-mont5.o": [
    "bn_mul_mont_gather5",
    "bn_mul4x_mont_gather5",
    "mul4x_internal",
    "bn_power5",
    "bn_sqr8x_internal",
    "__bn_post4x_internal",
    "__bn_sqr8x_reduction",
    "bn_from_montgomery",
    "bn_from_mont8x",
    "__bn_sqrx8x_reduction",
    "bn_mulx4x_mont_gather5",
    "mulx4x_internal",
    "bn_powerx5",
    "bn_sqrx8x_internal",
    "__bn_postx4x_internal",
    "bn_get_bits5",
    "bn_scatter5",
    "bn_gather5"
],
"ghidra/libsgx_tsgxssl_crypto_a/x86_64-mont.o": [
    "bn_mul_mont",
    "bn_mul4x_mont",
    "bn_sqr8x_mont",
    "bn_mulx4x_mont"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_algor.o": [
    "d2i_X509_ALGOR",
    "i2d_X509_ALGOR",
    "X509_ALGOR_new",
    "X509_ALGOR_free",
    "d2i_X509_ALGORS",
    "i2d_X509_ALGORS",
    "X509_ALGOR_dup",
    "X509_ALGOR_set0",
    "X509_ALGOR_get0",
    "X509_ALGOR_set_md",
    "X509_ALGOR_cmp",
    "X509_ALGOR_copy"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_all.o": [
    "X509_verify",
    "X509_REQ_verify",
    "NETSCAPE_SPKI_verify",
    "X509_sign",
    "X509_sign_ctx",
    "X509_http_nbio",
    "X509_REQ_sign",
    "X509_REQ_sign_ctx",
    "X509_CRL_sign",
    "X509_CRL_sign_ctx",
    "X509_CRL_http_nbio",
    "NETSCAPE_SPKI_sign",
    "d2i_X509_bio",
    "i2d_X509_bio",
    "d2i_X509_CRL_bio",
    "i2d_X509_CRL_bio",
    "d2i_PKCS7_bio",
    "i2d_PKCS7_bio",
    "d2i_X509_REQ_bio",
    "i2d_X509_REQ_bio",
    "d2i_RSAPrivateKey_bio",
    "i2d_RSAPrivateKey_bio",
    "d2i_RSAPublicKey_bio",
    "d2i_RSA_PUBKEY_bio",
    "i2d_RSAPublicKey_bio",
    "i2d_RSA_PUBKEY_bio",
    "d2i_DSAPrivateKey_bio",
    "i2d_DSAPrivateKey_bio",
    "d2i_DSA_PUBKEY_bio",
    "i2d_DSA_PUBKEY_bio",
    "d2i_EC_PUBKEY_bio",
    "i2d_EC_PUBKEY_bio",
    "d2i_ECPrivateKey_bio",
    "i2d_ECPrivateKey_bio",
    "X509_pubkey_digest",
    "X509_digest",
    "X509_CRL_digest",
    "X509_REQ_digest",
    "X509_NAME_digest",
    "PKCS7_ISSUER_AND_SERIAL_digest",
    "d2i_PKCS8_bio",
    "i2d_PKCS8_bio",
    "d2i_PKCS8_PRIV_KEY_INFO_bio",
    "i2d_PKCS8_PRIV_KEY_INFO_bio",
    "i2d_PKCS8PrivateKeyInfo_bio",
    "i2d_PrivateKey_bio",
    "d2i_PrivateKey_bio",
    "i2d_PUBKEY_bio",
    "d2i_PUBKEY_bio"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_attrib.o": [
    "d2i_X509_ATTRIBUTE",
    "i2d_X509_ATTRIBUTE",
    "X509_ATTRIBUTE_new",
    "X509_ATTRIBUTE_free",
    "X509_ATTRIBUTE_dup",
    "X509_ATTRIBUTE_create"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_bignum.o": [
    "bn_i2c",
    "bn_free",
    "bn_new",
    "bn_secure_new",
    "bn_print",
    "bn_c2i",
    "bn_secure_c2i"
],
"ghidra/libsgx_tsgxssl_crypto_a/xcbc_enc.o": [
    "DES_xcbc_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_crl.o": [
    "X509_REVOKED_cmp",
    "crl_inf_cb",
    "def_crl_verify",
    "crl_cb",
    "def_crl_lookup",
    "d2i_X509_REVOKED",
    "i2d_X509_REVOKED",
    "X509_REVOKED_new",
    "X509_REVOKED_free",
    "X509_REVOKED_dup",
    "d2i_X509_CRL_INFO",
    "i2d_X509_CRL_INFO",
    "X509_CRL_INFO_new",
    "X509_CRL_INFO_free",
    "d2i_X509_CRL",
    "i2d_X509_CRL",
    "X509_CRL_new",
    "X509_CRL_free",
    "X509_CRL_dup",
    "X509_CRL_add0_revoked",
    "X509_CRL_verify",
    "X509_CRL_get0_by_serial",
    "X509_CRL_get0_by_cert",
    "X509_CRL_set_default_method",
    "X509_CRL_METHOD_new",
    "X509_CRL_METHOD_free",
    "X509_CRL_set_meth_data",
    "X509_CRL_get_meth_data"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_exten.o": [
    "d2i_X509_EXTENSION",
    "i2d_X509_EXTENSION",
    "X509_EXTENSION_new",
    "X509_EXTENSION_free",
    "d2i_X509_EXTENSIONS",
    "i2d_X509_EXTENSIONS",
    "X509_EXTENSION_dup"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_info.o": [
    "X509_INFO_new",
    "X509_INFO_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_int64.o": [
    "uint64_clear",
    "uint32_clear",
    "uint32_i2c",
    "uint64_i2c",
    "uint32_free",
    "uint64_free",
    "uint32_print",
    "uint64_print",
    "uint64_new",
    "uint32_new",
    "uint64_c2i",
    "uint32_c2i"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_long.o": [
    "long_i2c",
    "long_print",
    "long_new",
    "long_free",
    "long_c2i"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_name.o": [
    "X509_NAME_ENTRY_free",
    "x509_name_ex_print",
    "local_sk_X509_NAME_ENTRY_pop_free",
    "x509_name_ex_free",
    "x509_name_ex_new",
    "d2i_X509_NAME_ENTRY",
    "i2d_X509_NAME_ENTRY",
    "X509_NAME_ENTRY_new",
    "x509_name_canon.part.0",
    "x509_name_ex_i2d",
    "X509_NAME_ENTRY_dup",
    "d2i_X509_NAME",
    "i2d_X509_NAME",
    "X509_NAME_new",
    "X509_NAME_free",
    "x509_name_ex_d2i",
    "X509_NAME_dup",
    "X509_NAME_set",
    "X509_NAME_print",
    "X509_NAME_get0_der"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_pkey.o": [
    "X509_PKEY_free",
    "X509_PKEY_new"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_pubkey.o": [
    "x509_pubkey_decode",
    "pubkey_cb",
    "d2i_X509_PUBKEY",
    "i2d_X509_PUBKEY",
    "X509_PUBKEY_new",
    "X509_PUBKEY_free",
    "X509_PUBKEY_set",
    "X509_PUBKEY_get0",
    "X509_PUBKEY_get",
    "d2i_PUBKEY",
    "i2d_PUBKEY",
    "d2i_RSA_PUBKEY",
    "i2d_RSA_PUBKEY",
    "d2i_DSA_PUBKEY",
    "i2d_DSA_PUBKEY",
    "d2i_EC_PUBKEY",
    "i2d_EC_PUBKEY",
    "X509_PUBKEY_set0_param",
    "X509_PUBKEY_get0_param",
    "X509_get0_pubkey_bitstr"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_req.o": [
    "rinf_cb",
    "d2i_X509_REQ_INFO",
    "i2d_X509_REQ_INFO",
    "X509_REQ_INFO_new",
    "X509_REQ_INFO_free",
    "d2i_X509_REQ",
    "i2d_X509_REQ",
    "X509_REQ_new",
    "X509_REQ_free",
    "X509_REQ_dup"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_sig.o": [
    "d2i_X509_SIG",
    "i2d_X509_SIG",
    "X509_SIG_new",
    "X509_SIG_free",
    "X509_SIG_get0",
    "X509_SIG_getm"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_spki.o": [
    "d2i_NETSCAPE_SPKAC",
    "i2d_NETSCAPE_SPKAC",
    "NETSCAPE_SPKAC_new",
    "NETSCAPE_SPKAC_free",
    "d2i_NETSCAPE_SPKI",
    "i2d_NETSCAPE_SPKI",
    "NETSCAPE_SPKI_new",
    "NETSCAPE_SPKI_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/xts128.o": [
    "CRYPTO_xts128_encrypt"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_val.o": [
    "d2i_X509_VAL",
    "i2d_X509_VAL",
    "X509_VAL_new",
    "X509_VAL_free"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_x509a.o": [
    "d2i_X509_CERT_AUX",
    "i2d_X509_CERT_AUX",
    "X509_CERT_AUX_new",
    "X509_CERT_AUX_free",
    "X509_trusted",
    "X509_alias_set1",
    "X509_keyid_set1",
    "X509_alias_get0",
    "X509_keyid_get0",
    "X509_add1_trust_object",
    "X509_add1_reject_object",
    "X509_trust_clear",
    "X509_reject_clear",
    "X509_get0_trust_objects",
    "X509_get0_reject_objects"
],
"ghidra/libsgx_tsgxssl_crypto_a/x_x509.o": [
    "x509_cb",
    "d2i_X509_CINF",
    "i2d_X509_CINF",
    "X509_CINF_new",
    "X509_CINF_free",
    "d2i_X509",
    "i2d_X509",
    "X509_new",
    "X509_free",
    "X509_dup",
    "X509_set_ex_data",
    "X509_get_ex_data",
    "d2i_X509_AUX",
    "i2d_X509_AUX",
    "i2d_re_X509_tbs",
    "X509_get0_signature",
    "X509_get_signature_nid"
],
"ghidra/libsgx_tsgxssl_ssl_a/bio_ssl.o": [
    "ssl_callback_ctrl",
    "ssl_puts",
    "ssl_new",
    "ssl_read",
    "ssl_write",
    "ssl_free",
    "ssl_ctrl",
    "BIO_f_ssl",
    "BIO_new_ssl",
    "BIO_new_ssl_connect",
    "BIO_new_buffer_ssl_connect",
    "BIO_ssl_copy_session_id",
    "BIO_ssl_shutdown"
],
"ghidra/libsgx_tsgxssl_ssl_a/d1_lib.o": [
    "dtls1_handshake_write",
    "dtls1_default_timeout",
    "dtls1_new",
    "dtls1_clear_received_buffer",
    "dtls1_clear_sent_buffer",
    "dtls1_free",
    "dtls1_clear",
    "dtls1_start_timer",
    "dtls1_get_timeout",
    "dtls1_is_timer_expired",
    "dtls1_stop_timer",
    "dtls1_check_timeout_num",
    "dtls1_handle_timeout",
    "dtls1_ctrl",
    "DTLSv1_listen",
    "dtls1_min_mtu",
    "dtls1_query_mtu",
    "DTLS_get_data_mtu",
    "DTLS_set_timer_cb"
],
"ghidra/libsgx_tsgxssl_ssl_a/d1_msg.o": [
    "dtls1_write_app_data_bytes",
    "dtls1_dispatch_alert"
],
"ghidra/libsgx_tsgxssl_ssl_a/d1_srtp.o": [
    "ssl_ctx_make_profiles",
    "SSL_CTX_set_tlsext_use_srtp",
    "SSL_set_tlsext_use_srtp",
    "SSL_get_srtp_profiles",
    "SSL_get_selected_srtp_profile"
],
"ghidra/libsgx_tsgxssl_ssl_a/dtls1_bitmap.o": [
    "dtls1_record_replay_check",
    "dtls1_record_bitmap_update"
],
"ghidra/libsgx_tsgxssl_ssl_a/extensions_clnt.o": [
    "use_ecc",
    "tls_construct_ctos_renegotiate",
    "tls_construct_ctos_server_name",
    "tls_construct_ctos_maxfragmentlen",
    "tls_construct_ctos_ec_pt_formats",
    "tls_construct_ctos_supported_groups",
    "tls_construct_ctos_session_ticket",
    "tls_construct_ctos_sig_algs",
    "tls_construct_ctos_status_request",
    "tls_construct_ctos_npn",
    "tls_construct_ctos_alpn",
    "tls_construct_ctos_use_srtp",
    "tls_construct_ctos_etm",
    "tls_construct_ctos_sct",
    "tls_construct_ctos_ems",
    "tls_construct_ctos_supported_versions",
    "tls_construct_ctos_psk_kex_modes",
    "tls_construct_ctos_key_share",
    "tls_construct_ctos_cookie",
    "tls_construct_ctos_early_data",
    "tls_construct_ctos_padding",
    "tls_construct_ctos_psk",
    "tls_construct_ctos_post_handshake_auth",
    "tls_parse_stoc_renegotiate",
    "tls_parse_stoc_maxfragmentlen",
    "tls_parse_stoc_server_name",
    "tls_parse_stoc_ec_pt_formats",
    "tls_parse_stoc_session_ticket",
    "tls_parse_stoc_status_request",
    "tls_parse_stoc_sct",
    "tls_parse_stoc_npn",
    "tls_parse_stoc_alpn",
    "tls_parse_stoc_use_srtp",
    "tls_parse_stoc_etm",
    "tls_parse_stoc_ems",
    "tls_parse_stoc_supported_versions",
    "tls_parse_stoc_key_share",
    "tls_parse_stoc_cookie",
    "tls_parse_stoc_early_data",
    "tls_parse_stoc_psk"
],
"ghidra/libsgx_tsgxssl_ssl_a/extensions_cust.o": [
    "custom_ext_add_old_cb_wrap",
    "custom_ext_free_old_cb_wrap",
    "custom_ext_parse_old_cb_wrap",
    "custom_ext_find",
    "custom_ext_init",
    "custom_ext_parse",
    "custom_ext_add",
    "custom_exts_copy_flags",
    "custom_exts_free",
    "custom_exts_copy",
    "SSL_CTX_has_client_custom_ext",
    "SSL_extension_supported",
    "SSL_CTX_add_custom_ext",
    "SSL_CTX_add_client_custom_ext",
    "SSL_CTX_add_server_custom_ext"
],
"ghidra/libsgx_tsgxssl_ssl_a/extensions.o": [
    "init_session_ticket",
    "init_npn",
    "init_etm",
    "init_ems",
    "init_srtp",
    "init_psk_kex_modes",
    "init_post_handshake_auth",
    "tls_construct_certificate_authorities",
    "init_certificate_authorities",
    "init_sig_algs",
    "init_sig_algs_cert",
    "init_alpn",
    "init_ec_point_formats",
    "final_alpn",
    "final_server_name",
    "final_psk",
    "final_sig_algs",
    "final_ems",
    "final_ec_pt_formats",
    "final_renegotiate",
    "tls_parse_certificate_authorities",
    "final_early_data",
    "final_key_share",
    "init_status_request",
    "init_server_name",
    "final_maxfragmentlen",
    "tls_validate_all_contexts",
    "extension_is_relevant",
    "tls_collect_extensions",
    "tls_parse_extension",
    "tls_parse_all_extensions",
    "should_add_extension",
    "tls_construct_extensions",
    "tls_psk_do_binder"
],
"ghidra/libsgx_tsgxssl_ssl_a/extensions_srvr.o": [
    "tls_parse_ctos_renegotiate",
    "tls_parse_ctos_server_name",
    "tls_parse_ctos_maxfragmentlen",
    "tls_parse_ctos_ec_pt_formats",
    "tls_parse_ctos_session_ticket",
    "tls_parse_ctos_sig_algs_cert",
    "tls_parse_ctos_sig_algs",
    "tls_parse_ctos_status_request",
    "tls_parse_ctos_npn",
    "tls_parse_ctos_alpn",
    "tls_parse_ctos_use_srtp",
    "tls_parse_ctos_etm",
    "tls_parse_ctos_psk_kex_modes",
    "tls_parse_ctos_key_share",
    "tls_parse_ctos_cookie",
    "tls_parse_ctos_supported_groups",
    "tls_parse_ctos_ems",
    "tls_parse_ctos_early_data",
    "tls_parse_ctos_psk",
    "tls_parse_ctos_post_handshake_auth",
    "tls_construct_stoc_renegotiate",
    "tls_construct_stoc_server_name",
    "tls_construct_stoc_maxfragmentlen",
    "tls_construct_stoc_ec_pt_formats",
    "tls_construct_stoc_supported_groups",
    "tls_construct_stoc_session_ticket",
    "tls_construct_stoc_status_request",
    "tls_construct_stoc_next_proto_neg",
    "tls_construct_stoc_alpn",
    "tls_construct_stoc_use_srtp",
    "tls_construct_stoc_etm",
    "tls_construct_stoc_ems",
    "tls_construct_stoc_supported_versions",
    "tls_construct_stoc_key_share",
    "tls_construct_stoc_cookie",
    "tls_construct_stoc_cryptopro_bug",
    "tls_construct_stoc_early_data",
    "tls_construct_stoc_psk"
],
"ghidra/libsgx_tsgxssl_ssl_a/methods.o": [
    "TLS_method",
    "tlsv1_3_method",
    "tlsv1_2_method",
    "tlsv1_1_method",
    "tlsv1_method",
    "TLS_server_method",
    "tlsv1_3_server_method",
    "tlsv1_2_server_method",
    "tlsv1_1_server_method",
    "tlsv1_server_method",
    "TLS_client_method",
    "tlsv1_3_client_method",
    "tlsv1_2_client_method",
    "tlsv1_1_client_method",
    "tlsv1_client_method",
    "dtlsv1_method",
    "dtlsv1_2_method",
    "DTLS_method",
    "dtlsv1_server_method",
    "dtlsv1_2_server_method",
    "DTLS_server_method",
    "dtlsv1_client_method",
    "dtls_bad_ver_client_method",
    "dtlsv1_2_client_method",
    "DTLS_client_method"
],
"ghidra/libsgx_tsgxssl_ssl_a/packet.o": [
    "WPACKET_set_flags",
    "WPACKET_fill_lengths",
    "WPACKET_close",
    "WPACKET_finish",
    "WPACKET_set_max_size",
    "WPACKET_get_total_written",
    "WPACKET_get_length",
    "WPACKET_get_curr",
    "WPACKET_reserve_bytes",
    "WPACKET_allocate_bytes",
    "WPACKET_init_static_len",
    "WPACKET_start_sub_packet_len__",
    "WPACKET_start_sub_packet",
    "WPACKET_sub_allocate_bytes__",
    "WPACKET_put_bytes__",
    "WPACKET_memset",
    "WPACKET_memcpy",
    "WPACKET_sub_memcpy__",
    "WPACKET_init_len",
    "WPACKET_init",
    "WPACKET_sub_reserve_bytes__",
    "WPACKET_cleanup"
],
"ghidra/libsgx_tsgxssl_ssl_a/pqueue.o": [
    "pitem_new",
    "pitem_free",
    "pqueue_new",
    "pqueue_free",
    "pqueue_insert",
    "pqueue_peek",
    "pqueue_pop",
    "pqueue_find",
    "pqueue_next",
    "pqueue_size"
],
"ghidra/libsgx_tsgxssl_ssl_a/rec_layer_d1.o": [
    "DTLS_RECORD_LAYER_new",
    "DTLS_RECORD_LAYER_clear",
    "DTLS_RECORD_LAYER_free",
    "DTLS_RECORD_LAYER_set_saved_w_epoch",
    "DTLS_RECORD_LAYER_set_write_sequence",
    "dtls1_buffer_record",
    "dtls1_retrieve_buffered_record",
    "dtls1_read_bytes",
    "do_dtls1_write",
    "dtls1_write_bytes",
    "dtls1_get_bitmap",
    "dtls1_process_buffered_records",
    "dtls1_reset_seq_numbers"
],
"ghidra/libsgx_tsgxssl_ssl_a/rec_layer_s3.o": [
    "RECORD_LAYER_init",
    "RECORD_LAYER_release",
    "RECORD_LAYER_read_pending",
    "RECORD_LAYER_processed_read_pending",
    "RECORD_LAYER_write_pending",
    "RECORD_LAYER_reset_read_sequence",
    "RECORD_LAYER_reset_write_sequence",
    "RECORD_LAYER_clear",
    "ssl3_pending",
    "SSL_CTX_set_default_read_buffer_len",
    "SSL_set_default_read_buffer_len",
    "SSL_rstate_string_long",
    "SSL_rstate_string",
    "ssl3_read_n",
    "ssl3_write_pending",
    "do_ssl3_write",
    "ssl3_write_bytes",
    "ssl3_read_bytes",
    "ssl3_record_sequence_update",
    "RECORD_LAYER_is_sslv2_record",
    "RECORD_LAYER_get_rrec_length"
],
"ghidra/libsgx_tsgxssl_ssl_a/s3_cbc.o": [
    "tls1_md5_final_raw",
    "tls1_sha1_final_raw",
    "tls1_sha256_final_raw",
    "tls1_sha512_final_raw",
    "ssl3_cbc_record_digest_supported",
    "ssl3_cbc_digest_record"
],
"ghidra/libsgx_tsgxssl_ssl_a/s3_enc.o": [
    "ssl3_change_cipher_state",
    "ssl3_cleanup_key_block",
    "ssl3_setup_key_block",
    "ssl3_free_digest_list",
    "ssl3_init_finished_mac",
    "ssl3_finish_mac",
    "ssl3_digest_cached_records",
    "ssl3_final_finish_mac",
    "ssl3_generate_master_secret",
    "ssl3_alert_code"
],
"ghidra/libsgx_tsgxssl_ssl_a/s3_lib.o": [
    "cipher_compare",
    "ssl3_handshake_write",
    "ssl3_set_handshake_header",
    "ssl_sort_cipher_list",
    "ssl3_default_timeout",
    "ssl3_num_ciphers",
    "ssl3_get_cipher",
    "ssl3_new",
    "ssl3_free",
    "ssl3_clear",
    "ssl3_callback_ctrl",
    "ssl3_ctx_callback_ctrl",
    "ssl3_get_cipher_by_id",
    "ssl3_get_cipher_by_std_name",
    "ssl3_get_cipher_by_char",
    "ssl3_put_cipher_by_char",
    "ssl3_choose_cipher",
    "ssl3_get_req_cert_type",
    "ssl3_shutdown",
    "ssl3_renegotiate",
    "ssl3_renegotiate_check",
    "ssl3_write",
    "ssl3_peek",
    "ssl3_read",
    "ssl_get_algorithm2",
    "ssl_fill_hello_random",
    "ssl_generate_master_secret",
    "ssl_generate_pkey",
    "ssl_generate_pkey_group",
    "ssl_generate_param_group",
    "ssl_derive",
    "ssl_dh_to_pkey",
    "ssl3_ctrl",
    "ssl3_ctx_ctrl"
],
"ghidra/libsgx_tsgxssl_ssl_a/s3_msg.o": [
    "ssl3_do_change_cipher_spec",
    "ssl3_send_alert",
    "ssl3_dispatch_alert"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl3_buffer.o": [
    "SSL3_BUFFER_set_data",
    "SSL3_BUFFER_clear",
    "SSL3_BUFFER_release",
    "ssl3_setup_read_buffer",
    "ssl3_setup_write_buffer",
    "ssl3_setup_buffers",
    "ssl3_release_write_buffer",
    "ssl3_release_read_buffer"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl3_record.o": [
    "SSL3_RECORD_clear",
    "SSL3_RECORD_release",
    "SSL3_RECORD_set_seq_num",
    "early_data_count_ok",
    "ssl3_do_uncompress",
    "ssl3_do_compress",
    "n_ssl3_mac",
    "tls1_mac",
    "ssl3_cbc_remove_padding",
    "ssl3_enc",
    "tls1_cbc_remove_padding",
    "tls1_enc",
    "ssl3_cbc_copy_mac",
    "ssl3_get_record",
    "dtls1_process_record",
    "dtls1_get_record",
    "dtls_buffer_listen_record"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl3_record_tls13.o": [
    "tls13_enc"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl_asn1.o": [
    "i2d_SSL_SESSION",
    "d2i_SSL_SESSION"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl_cert.o": [
    "ssl_x509_store_ctx_init_ossl_",
    "xname_cmp",
    "xname_sk_cmp",
    "SSL_get_ex_data_X509_STORE_CTX_idx",
    "ssl_cert_new",
    "ssl_cert_clear_certs",
    "ssl_cert_free",
    "ssl_cert_dup",
    "ssl_cert_set0_chain",
    "ssl_cert_set1_chain",
    "ssl_cert_add0_chain_cert",
    "ssl_cert_add1_chain_cert",
    "ssl_cert_select_current",
    "ssl_cert_set_current",
    "ssl_cert_set_cert_cb",
    "ssl_verify_cert_chain",
    "SSL_dup_CA_list",
    "SSL_set0_CA_list",
    "SSL_CTX_set0_CA_list",
    "SSL_CTX_get0_CA_list",
    "SSL_get0_CA_list",
    "SSL_CTX_set_client_CA_list",
    "SSL_CTX_get_client_CA_list",
    "SSL_set_client_CA_list",
    "SSL_get0_peer_CA_list",
    "SSL_get_client_CA_list",
    "SSL_add1_to_CA_list",
    "SSL_CTX_add1_to_CA_list",
    "SSL_add_client_CA",
    "SSL_CTX_add_client_CA",
    "SSL_load_client_CA_file",
    "SSL_add_file_cert_subjects_to_stack",
    "SSL_add_dir_cert_subjects_to_stack",
    "ssl_build_cert_chain",
    "ssl_cert_set_cert_store",
    "ssl_cert_get_cert_store",
    "ssl_get_security_level_bits",
    "ssl_security_default_callback",
    "ssl_security",
    "ssl_ctx_security",
    "ssl_cert_lookup_by_nid",
    "ssl_cert_lookup_by_pkey",
    "ssl_cert_lookup_by_idx"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl_ciph.o": [
    "sk_comp_cmp",
    "ssl_cipher_apply_rule",
    "do_load_builtin_compressions_ossl_",
    "cmeth_free",
    "ciphersuite_cb",
    "ssl_cipher_apply_rule.constprop.0",
    "ssl_cipher_apply_rule.constprop.1",
    "ssl_cipher_strength_sort",
    "ssl_cipher_process_rulestr.isra.0",
    "ssl_cipher_apply_rule.constprop.2",
    "update_cipher_list",
    "ssl_load_ciphers",
    "ssl_cipher_get_evp",
    "ssl_md",
    "ssl_handshake_md",
    "ssl_prf_md",
    "SSL_CTX_set_ciphersuites",
    "SSL_set_ciphersuites",
    "ssl_create_cipher_list",
    "SSL_CIPHER_description",
    "SSL_CIPHER_get_version",
    "SSL_CIPHER_get_name",
    "SSL_CIPHER_standard_name",
    "OPENSSL_cipher_name",
    "SSL_CIPHER_get_bits",
    "SSL_CIPHER_get_id",
    "SSL_CIPHER_get_protocol_id",
    "ssl3_comp_find",
    "SSL_COMP_get_compression_methods",
    "SSL_COMP_set0_compression_methods",
    "ssl_comp_free_compression_methods_int",
    "SSL_COMP_add_compression_method",
    "SSL_COMP_get_name",
    "SSL_COMP_get0_name",
    "SSL_COMP_get_id",
    "ssl_get_cipher_by_char",
    "SSL_CIPHER_find",
    "SSL_CIPHER_get_cipher_nid",
    "SSL_CIPHER_get_digest_nid",
    "SSL_CIPHER_get_kx_nid",
    "SSL_CIPHER_get_auth_nid",
    "SSL_CIPHER_get_handshake_digest",
    "SSL_CIPHER_is_aead",
    "ssl_cipher_get_overhead",
    "ssl_cert_is_disabled"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl_conf.o": [
    "cmd_NumTickets",
    "cmd_RecordPadding",
    "cmd_Groups",
    "cmd_ClientSignatureAlgorithms",
    "cmd_SignatureAlgorithms",
    "cmd_DHParameters",
    "cmd_RequestCAPath",
    "cmd_RequestCAFile",
    "cmd_ServerInfoFile",
    "cmd_PrivateKey",
    "cmd_Certificate",
    "cmd_VerifyMode",
    "cmd_Options",
    "cmd_Protocol",
    "cmd_Ciphersuites",
    "cmd_CipherString",
    "ssl_conf_cmd_lookup.part.0",
    "cmd_VerifyCAPath",
    "cmd_MaxProtocol",
    "cmd_ECDHParameters",
    "cmd_MinProtocol",
    "cmd_ClientCAFile",
    "cmd_ClientCAPath",
    "cmd_Curves",
    "ssl_set_option_list",
    "cmd_VerifyCAFile",
    "cmd_ChainCAPath",
    "cmd_ChainCAFile",
    "SSL_CONF_cmd",
    "SSL_CONF_cmd_argv",
    "SSL_CONF_cmd_value_type",
    "SSL_CONF_CTX_new",
    "SSL_CONF_CTX_finish",
    "SSL_CONF_CTX_free",
    "SSL_CONF_CTX_set_flags",
    "SSL_CONF_CTX_clear_flags",
    "SSL_CONF_CTX_set1_prefix",
    "SSL_CONF_CTX_set_ssl",
    "SSL_CONF_CTX_set_ssl_ctx"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl_err.o": [
    "ERR_load_SSL_strings"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl_init.o": [
    "ossl_init_no_load_ssl_strings_ossl_",
    "ossl_init_load_ssl_strings_ossl_",
    "ossl_init_ssl_base_ossl_",
    "ssl_library_stop",
    "OPENSSL_init_ssl"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl_lib.o": [
    "ssl_io_intern",
    "ssl_do_handshake_intern",
    "ct_permissive",
    "ssl_undefined_function",
    "ssl_undefined_function_6",
    "ssl_undefined_function_5",
    "ssl_start_async_job",
    "ssl_check_allowed_versions",
    "ssl_session_hash",
    "ssl_session_cmp",
    "dup_ca_names.part.0",
    "ct_move_scts",
    "ct_strict",
    "tlsa_free",
    "SSL_CTX_set_ssl_version",
    "SSL_is_dtls",
    "SSL_up_ref",
    "SSL_CTX_set_session_id_context",
    "SSL_set_session_id_context",
    "SSL_CTX_set_generate_session_id",
    "SSL_set_generate_session_id",
    "SSL_has_matching_session_id",
    "SSL_CTX_set_purpose",
    "SSL_set_purpose",
    "SSL_CTX_set_trust",
    "SSL_set_trust",
    "SSL_set1_host",
    "SSL_add1_host",
    "SSL_set_hostflags",
    "SSL_get0_peername",
    "SSL_CTX_dane_enable",
    "SSL_CTX_dane_set_flags",
    "SSL_CTX_dane_clear_flags",
    "SSL_dane_set_flags",
    "SSL_dane_clear_flags",
    "SSL_get0_dane_authority",
    "SSL_get0_dane_tlsa",
    "SSL_get0_dane",
    "SSL_dane_tlsa_add",
    "SSL_CTX_dane_mtype_set",
    "SSL_CTX_set1_param",
    "SSL_set1_param",
    "SSL_CTX_get0_param",
    "SSL_get0_param",
    "SSL_certs_clear",
    "SSL_set0_rbio",
    "SSL_set0_wbio",
    "SSL_get_rbio",
    "SSL_get_wbio",
    "SSL_set_bio",
    "SSL_get_rfd",
    "SSL_get_wfd",
    "SSL_set_fd",
    "SSL_set_wfd",
    "SSL_set_rfd",
    "SSL_get_finished",
    "SSL_get_peer_finished",
    "SSL_get_verify_mode",
    "SSL_get_verify_depth",
    "SSL_get_verify_callback",
    "SSL_CTX_get_verify_mode",
    "SSL_CTX_get_verify_depth",
    "SSL_CTX_get_verify_callback",
    "SSL_set_verify",
    "SSL_set_verify_depth",
    "SSL_set_read_ahead",
    "SSL_get_read_ahead",
    "SSL_pending",
    "SSL_has_pending",
    "SSL_get_peer_certificate",
    "SSL_get_peer_cert_chain",
    "SSL_copy_session_id",
    "SSL_CTX_check_private_key",
    "SSL_check_private_key",
    "SSL_waiting_for_async",
    "SSL_get_all_async_fds",
    "SSL_get_changed_async_fds",
    "SSL_get_default_timeout",
    "ssl_read_internal",
    "SSL_read",
    "SSL_read_ex",
    "SSL_get_early_data_status",
    "SSL_peek",
    "SSL_peek_ex",
    "ssl_write_internal",
    "SSL_write",
    "SSL_write_ex",
    "SSL_shutdown",
    "SSL_key_update",
    "SSL_get_key_update_type",
    "SSL_renegotiate",
    "SSL_renegotiate_abbreviated",
    "SSL_renegotiate_pending",
    "SSL_ctrl",
    "SSL_dane_enable",
    "SSL_callback_ctrl",
    "SSL_CTX_sessions",
    "SSL_CTX_ctrl",
    "SSL_CTX_callback_ctrl",
    "ssl_cipher_id_cmp",
    "ssl_cipher_ptr_id_cmp",
    "SSL_get_ciphers",
    "SSL_get_client_ciphers",
    "SSL_get1_supported_ciphers",
    "ssl_get_ciphers_by_id",
    "SSL_get_cipher_list",
    "SSL_CTX_get_ciphers",
    "SSL_CTX_set_cipher_list",
    "SSL_set_cipher_list",
    "SSL_get_shared_ciphers",
    "SSL_get_servername",
    "SSL_get_servername_type",
    "SSL_select_next_proto",
    "SSL_get0_next_proto_negotiated",
    "SSL_CTX_set_next_protos_advertised_cb",
    "SSL_CTX_set_next_proto_select_cb",
    "SSL_CTX_set_alpn_protos",
    "SSL_set_alpn_protos",
    "SSL_CTX_set_alpn_select_cb",
    "SSL_get0_alpn_selected",
    "SSL_export_keying_material",
    "SSL_export_keying_material_early",
    "SSL_CTX_up_ref",
    "SSL_CTX_free",
    "SSL_CTX_new",
    "SSL_CTX_set_default_passwd_cb",
    "SSL_CTX_set_default_passwd_cb_userdata",
    "SSL_CTX_get_default_passwd_cb",
    "SSL_CTX_get_default_passwd_cb_userdata",
    "SSL_set_default_passwd_cb",
    "SSL_set_default_passwd_cb_userdata",
    "SSL_get_default_passwd_cb",
    "SSL_get_default_passwd_cb_userdata",
    "SSL_CTX_set_cert_verify_callback",
    "SSL_CTX_set_verify",
    "SSL_CTX_set_verify_depth",
    "SSL_CTX_set_cert_cb",
    "SSL_set_cert_cb",
    "ssl_check_srvr_ecc_cert_and_alg",
    "ssl_get_server_cert_serverinfo",
    "ssl_update_cache",
    "SSL_CTX_get_ssl_method",
    "SSL_get_ssl_method",
    "SSL_set_ssl_method",
    "SSL_do_handshake",
    "ssl_undefined_void_function",
    "ssl_undefined_const_function",
    "ssl_bad_method",
    "ssl_protocol_to_string",
    "SSL_get_version",
    "ssl_clear_cipher_ctx",
    "SSL_get_certificate",
    "SSL_get_privatekey",
    "SSL_CTX_get0_certificate",
    "SSL_CTX_get0_privatekey",
    "SSL_get_current_cipher",
    "SSL_get_pending_cipher",
    "SSL_get_current_compression",
    "SSL_get_current_expansion",
    "ssl_init_wbio_buffer",
    "ssl_free_wbio_buffer",
    "SSL_CTX_set_quiet_shutdown",
    "SSL_CTX_get_quiet_shutdown",
    "SSL_set_quiet_shutdown",
    "SSL_get_quiet_shutdown",
    "SSL_set_shutdown",
    "SSL_get_shutdown",
    "SSL_version",
    "ssl_set_masks",
    "SSL_client_version",
    "SSL_get_SSL_CTX",
    "SSL_set_SSL_CTX",
    "SSL_CTX_set_default_verify_paths",
    "SSL_CTX_set_default_verify_dir",
    "SSL_CTX_set_default_verify_file",
    "SSL_CTX_load_verify_locations",
    "SSL_set_info_callback",
    "SSL_get_info_callback",
    "SSL_set_verify_result",
    "SSL_get_verify_result",
    "SSL_get_client_random",
    "SSL_get_server_random",
    "SSL_SESSION_get_master_key",
    "SSL_SESSION_set1_master_key",
    "SSL_set_ex_data",
    "SSL_get_ex_data",
    "SSL_CTX_set_ex_data",
    "SSL_CTX_get_ex_data",
    "SSL_CTX_get_cert_store",
    "SSL_CTX_set_cert_store",
    "SSL_CTX_set1_cert_store",
    "SSL_want",
    "SSL_get_error",
    "SSL_CTX_set_tmp_dh_callback",
    "SSL_set_tmp_dh_callback",
    "SSL_CTX_use_psk_identity_hint",
    "SSL_use_psk_identity_hint",
    "SSL_get_psk_identity_hint",
    "SSL_get_psk_identity",
    "SSL_set_psk_client_callback",
    "SSL_CTX_set_psk_client_callback",
    "SSL_set_psk_server_callback",
    "SSL_CTX_set_psk_server_callback",
    "SSL_set_psk_find_session_callback",
    "SSL_CTX_set_psk_find_session_callback",
    "SSL_set_psk_use_session_callback",
    "SSL_CTX_set_psk_use_session_callback",
    "SSL_CTX_set_msg_callback",
    "SSL_set_msg_callback",
    "SSL_CTX_set_not_resumable_session_callback",
    "SSL_set_not_resumable_session_callback",
    "SSL_CTX_set_record_padding_callback",
    "SSL_CTX_set_record_padding_callback_arg",
    "SSL_CTX_get_record_padding_callback_arg",
    "SSL_CTX_set_block_padding",
    "SSL_set_record_padding_callback",
    "SSL_set_record_padding_callback_arg",
    "SSL_get_record_padding_callback_arg",
    "SSL_set_block_padding",
    "SSL_set_num_tickets",
    "SSL_get_num_tickets",
    "SSL_CTX_set_num_tickets",
    "SSL_CTX_get_num_tickets",
    "ssl_clear_hash_ctx",
    "SSL_clear",
    "ssl_replace_hash",
    "SSL_set_accept_state",
    "SSL_accept",
    "SSL_read_early_data",
    "SSL_set_connect_state",
    "SSL_connect",
    "SSL_write_early_data",
    "SSL_free",
    "ssl_handshake_hash",
    "SSL_session_reused",
    "SSL_is_server",
    "SSL_set_debug",
    "SSL_set_security_level",
    "SSL_get_security_level",
    "SSL_set_security_callback",
    "SSL_get_security_callback",
    "SSL_set0_security_ex_data",
    "SSL_get0_security_ex_data",
    "SSL_CTX_set_security_level",
    "SSL_CTX_get_security_level",
    "SSL_CTX_set_security_callback",
    "SSL_CTX_get_security_callback",
    "SSL_CTX_set0_security_ex_data",
    "SSL_CTX_get0_security_ex_data",
    "SSL_CTX_get_options",
    "SSL_get_options",
    "SSL_CTX_set_options",
    "SSL_set_options",
    "SSL_CTX_clear_options",
    "SSL_clear_options",
    "SSL_get0_verified_chain",
    "OBJ_bsearch_ssl_cipher_id",
    "SSL_get0_peer_scts",
    "SSL_set_ct_validation_callback",
    "SSL_new",
    "SSL_dup",
    "SSL_CTX_set_ct_validation_callback",
    "SSL_ct_is_enabled",
    "SSL_CTX_ct_is_enabled",
    "ssl_validate_ct",
    "SSL_CTX_enable_ct",
    "SSL_enable_ct",
    "SSL_CTX_set_default_ctlog_list_file",
    "SSL_CTX_set_ctlog_list_file",
    "SSL_CTX_set0_ctlog_store",
    "SSL_CTX_get0_ctlog_store",
    "SSL_CTX_set_client_hello_cb",
    "SSL_client_hello_isv2",
    "SSL_client_hello_get0_legacy_version",
    "SSL_client_hello_get0_random",
    "SSL_client_hello_get0_session_id",
    "SSL_client_hello_get0_ciphers",
    "SSL_client_hello_get0_compression_methods",
    "SSL_client_hello_get1_extensions_present",
    "SSL_client_hello_get0_ext",
    "SSL_free_buffers",
    "SSL_CTX_set_keylog_callback",
    "SSL_CTX_get_keylog_callback",
    "ssl_log_rsa_client_key_exchange",
    "ssl_log_secret",
    "ssl_cache_cipherlist",
    "bytes_to_cipher_list",
    "SSL_bytes_to_cipher_list",
    "SSL_CTX_set_max_early_data",
    "SSL_CTX_get_max_early_data",
    "SSL_set_max_early_data",
    "SSL_get_max_early_data",
    "SSL_CTX_set_recv_max_early_data",
    "SSL_CTX_get_recv_max_early_data",
    "SSL_set_recv_max_early_data",
    "SSL_get_recv_max_early_data",
    "ssl_get_max_send_fragment",
    "ssl_get_split_send_fragment",
    "SSL_stateless",
    "SSL_CTX_set_post_handshake_auth",
    "SSL_set_post_handshake_auth",
    "SSL_verify_client_post_handshake",
    "SSL_CTX_set_session_ticket_cb",
    "SSL_CTX_set_allow_early_data_cb",
    "SSL_set_allow_early_data_cb"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl_mcnf.o": [
    "ssl_do_config",
    "SSL_add_ssl_module",
    "SSL_config",
    "SSL_CTX_config",
    "ssl_ctx_system_config"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl_rsa.o": [
    "serverinfoex_srv_parse_cb",
    "serverinfo_srv_parse_cb",
    "ssl_set_cert",
    "ssl_set_pkey",
    "ssl_set_cert_and_key",
    "serverinfo_process_buffer.part.0",
    "serverinfoex_srv_add_cb",
    "serverinfo_srv_add_cb",
    "SSL_use_certificate",
    "SSL_use_certificate_file",
    "SSL_use_certificate_ASN1",
    "SSL_use_RSAPrivateKey",
    "SSL_use_RSAPrivateKey_file",
    "SSL_use_RSAPrivateKey_ASN1",
    "SSL_use_PrivateKey",
    "SSL_use_PrivateKey_file",
    "SSL_use_PrivateKey_ASN1",
    "SSL_CTX_use_certificate",
    "use_certificate_chain_file",
    "SSL_CTX_use_certificate_file",
    "SSL_CTX_use_certificate_ASN1",
    "SSL_CTX_use_RSAPrivateKey",
    "SSL_CTX_use_RSAPrivateKey_file",
    "SSL_CTX_use_RSAPrivateKey_ASN1",
    "SSL_CTX_use_PrivateKey",
    "SSL_CTX_use_PrivateKey_file",
    "SSL_CTX_use_PrivateKey_ASN1",
    "SSL_CTX_use_certificate_chain_file",
    "SSL_use_certificate_chain_file",
    "SSL_CTX_use_serverinfo_ex",
    "SSL_CTX_use_serverinfo",
    "SSL_CTX_use_serverinfo_file",
    "SSL_use_cert_and_key",
    "SSL_CTX_use_cert_and_key"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl_sess.o": [
    "def_generate_session_id",
    "SSL_get_session",
    "SSL_SESSION_set_ex_data",
    "SSL_SESSION_get_ex_data",
    "SSL_SESSION_new",
    "SSL_SESSION_get_id",
    "SSL_SESSION_get0_id_context",
    "SSL_SESSION_get_compress_id",
    "ssl_generate_session_id",
    "SSL_SESSION_free",
    "ssl_session_dup",
    "SSL_SESSION_dup",
    "ssl_get_new_session",
    "timeout_cb",
    "SSL_CTX_remove_session",
    "SSL_SESSION_up_ref",
    "SSL_get1_session",
    "SSL_CTX_add_session",
    "lookup_sess_in_cache",
    "ssl_get_prev_session",
    "SSL_SESSION_set1_id",
    "SSL_SESSION_set_timeout",
    "SSL_SESSION_get_timeout",
    "SSL_SESSION_get_time",
    "SSL_SESSION_set_time",
    "SSL_SESSION_get_protocol_version",
    "SSL_SESSION_set_protocol_version",
    "SSL_SESSION_get0_cipher",
    "SSL_SESSION_set_cipher",
    "SSL_SESSION_get0_hostname",
    "SSL_SESSION_set1_hostname",
    "SSL_SESSION_has_ticket",
    "SSL_SESSION_get_ticket_lifetime_hint",
    "SSL_SESSION_get0_ticket",
    "SSL_SESSION_get_max_early_data",
    "SSL_SESSION_set_max_early_data",
    "SSL_SESSION_get0_alpn_selected",
    "SSL_SESSION_set1_alpn_selected",
    "SSL_SESSION_get0_peer",
    "SSL_SESSION_set1_id_context",
    "SSL_SESSION_is_resumable",
    "SSL_CTX_set_timeout",
    "SSL_CTX_get_timeout",
    "SSL_set_session_secret_cb",
    "SSL_set_session_ticket_ext_cb",
    "SSL_set_session_ticket_ext",
    "SSL_CTX_flush_sessions",
    "ssl_clear_bad_session",
    "SSL_set_session",
    "SSL_CTX_sess_set_new_cb",
    "SSL_CTX_sess_get_new_cb",
    "SSL_CTX_sess_set_remove_cb",
    "SSL_CTX_sess_get_remove_cb",
    "SSL_CTX_sess_set_get_cb",
    "SSL_CTX_sess_get_get_cb",
    "SSL_CTX_set_info_callback",
    "SSL_CTX_get_info_callback",
    "SSL_CTX_set_client_cert_cb",
    "SSL_CTX_get_client_cert_cb",
    "SSL_CTX_set_client_cert_engine",
    "SSL_CTX_set_cookie_generate_cb",
    "SSL_CTX_set_cookie_verify_cb",
    "SSL_SESSION_set1_ticket_appdata",
    "SSL_SESSION_get0_ticket_appdata",
    "SSL_CTX_set_stateless_cookie_generate_cb",
    "SSL_CTX_set_stateless_cookie_verify_cb",
    "PEM_read_bio_SSL_SESSION",
    "PEM_write_bio_SSL_SESSION"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl_stat.o": [
    "SSL_state_string_long",
    "SSL_state_string",
    "SSL_alert_type_string_long",
    "SSL_alert_type_string",
    "SSL_alert_desc_string",
    "SSL_alert_desc_string_long"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl_txt.o": [
    "SSL_SESSION_print",
    "SSL_SESSION_print_keylog"
],
"ghidra/libsgx_tsgxssl_ssl_a/ssl_utst.o": [],
"ghidra/libsgx_tsgxssl_ssl_a/statem_clnt.o": [
    "tls_construct_client_hello",
    "set_client_ciphersuite",
    "tls_construct_cke_gost",
    "tls_construct_client_certificate",
    "tls_construct_end_of_early_data",
    "tls_construct_cke_psk_preamble",
    "tls_construct_client_key_exchange",
    "tls_construct_next_proto",
    "ossl_statem_client_read_transition",
    "ossl_statem_client_write_transition",
    "ossl_statem_client_pre_work",
    "ossl_statem_client_construct_message",
    "ossl_statem_client_max_message_size",
    "dtls_process_hello_verify",
    "tls_process_server_hello",
    "tls_process_server_certificate",
    "tls_process_certificate_request",
    "tls_process_new_session_ticket",
    "tls_process_cert_status_body",
    "tls_process_cert_status",
    "tls_client_key_exchange_post_work",
    "ossl_statem_client_post_work",
    "ssl3_check_cert_and_algorithm",
    "tls_process_key_exchange",
    "tls_process_initial_server_flight",
    "tls_process_server_done",
    "tls_process_hello_req",
    "ossl_statem_client_process_message",
    "ssl_do_client_cert_cb",
    "tls_prepare_client_certificate",
    "ossl_statem_client_post_process_message"
],
"ghidra/libsgx_tsgxssl_ssl_a/statem_dtls.o": [
    "dtls1_hm_fragment_new",
    "dtls1_preprocess_fragment",
    "dtls1_hm_fragment_free",
    "dtls1_reassemble_fragment",
    "dtls1_do_write",
    "dtls_construct_change_cipher_spec",
    "dtls1_read_failed",
    "dtls1_get_queue_priority",
    "dtls1_buffer_message",
    "dtls1_retransmit_message",
    "dtls1_retransmit_buffered_messages",
    "dtls1_set_message_header",
    "dtls1_get_message_header",
    "dtls_get_reassembled_message",
    "dtls_get_message",
    "dtls1_set_handshake_header",
    "dtls1_close_construct_packet"
],
"ghidra/libsgx_tsgxssl_ssl_a/statem_lib.o": [
    "ssl_add_cert_to_wpacket",
    "ca_dn_cmp",
    "get_cert_verify_tbs_data",
    "ssl3_do_write",
    "tls_close_construct_packet",
    "tls_construct_cert_verify",
    "tls_process_cert_verify",
    "tls_construct_finished",
    "tls_construct_key_update",
    "tls_process_key_update",
    "ssl3_take_mac",
    "tls_process_change_cipher_spec",
    "tls_construct_change_cipher_spec",
    "ssl3_output_cert_chain",
    "tls_finish_handshake",
    "tls_get_message_header",
    "tls_get_message_body",
    "ssl_x509err2alert",
    "ssl_allow_compression",
    "ssl_version_supported",
    "ssl_check_version_downgrade",
    "ssl_set_version_bound",
    "ssl_choose_server_version",
    "ssl_get_min_max_version",
    "tls_setup_handshake",
    "ssl_choose_client_version",
    "ssl_set_client_hello_version",
    "check_in_list",
    "create_synthetic_message_hash",
    "parse_ca_names",
    "get_ca_names",
    "construct_ca_names",
    "construct_key_exchange_tbs",
    "tls13_save_handshake_digest_for_pha",
    "tls_process_finished",
    "tls13_restore_handshake_digest_for_pha"
],
"ghidra/libsgx_tsgxssl_ssl_a/statem.o": [
    "SSL_get_state",
    "SSL_in_init",
    "SSL_is_init_finished",
    "SSL_in_before",
    "ossl_statem_clear",
    "ossl_statem_set_renegotiate",
    "ossl_statem_fatal",
    "state_machine.part.0",
    "ossl_statem_in_error",
    "ossl_statem_set_in_init",
    "ossl_statem_get_in_handshake",
    "ossl_statem_set_in_handshake",
    "ossl_statem_skip_early_data",
    "ossl_statem_check_finish_init",
    "ossl_statem_set_hello_verify_done",
    "ossl_statem_connect",
    "ossl_statem_accept",
    "statem_flush",
    "ossl_statem_app_data_allowed",
    "ossl_statem_export_allowed",
    "ossl_statem_export_early_allowed"
],
"ghidra/libsgx_tsgxssl_ssl_a/statem_srvr.o": [
    "tls_construct_encrypted_extensions",
    "tls_construct_server_hello",
    "create_ticket_prequel",
    "tls_construct_server_key_exchange",
    "tls_construct_certificate_request",
    "tls_process_cke_psk_preamble",
    "tls_construct_server_certificate",
    "tls_construct_new_session_ticket",
    "tls_construct_server_done",
    "d2i_GOST_KX_MESSAGE",
    "i2d_GOST_KX_MESSAGE",
    "GOST_KX_MESSAGE_new",
    "GOST_KX_MESSAGE_free",
    "ossl_statem_server_read_transition",
    "send_certificate_request",
    "ossl_statem_server_write_transition",
    "ossl_statem_server_pre_work",
    "ossl_statem_server_post_work",
    "ossl_statem_server_construct_message",
    "ossl_statem_server_max_message_size",
    "dtls_raw_hello_verify_request",
    "dtls_construct_hello_verify_request",
    "tls_process_client_hello",
    "tls_handle_alpn",
    "tls_post_process_client_hello",
    "tls_process_client_key_exchange",
    "tls_post_process_client_key_exchange",
    "ossl_statem_server_post_process_message",
    "tls_process_client_certificate",
    "tls_construct_cert_status_body",
    "tls_construct_cert_status",
    "tls_process_next_proto",
    "tls_process_end_of_early_data",
    "ossl_statem_server_process_message"
],
"ghidra/libsgx_tsgxssl_ssl_a/t1_enc.o": [
    "tls1_PRF.constprop.0",
    "tls1_change_cipher_state",
    "tls1_setup_key_block",
    "tls1_final_finish_mac",
    "tls1_generate_master_secret",
    "tls1_export_keying_material",
    "tls1_alert_code"
],
"ghidra/libsgx_tsgxssl_ssl_a/t1_lib.o": [
    "nid_cb",
    "tls1_check_pkey_comp.part.0",
    "get_sigorhash",
    "sig_cb",
    "check_cert_usable.isra.0",
    "tls1_check_sig_alg.part.0",
    "tls1_default_timeout",
    "tls1_new",
    "tls1_free",
    "tls1_clear",
    "tls1_group_id_lookup",
    "tls1_get_supported_groups",
    "tls_curve_allowed",
    "tls1_shared_group",
    "tls1_set_groups",
    "tls1_set_groups_list",
    "tls1_check_group_id",
    "tls1_check_cert_param",
    "tls1_get_formatlist",
    "tls1_check_ec_tmp_key",
    "tls1_lookup_md",
    "find_sig_alg",
    "tls12_get_psigalgs",
    "tls_check_sigalg_curve",
    "tls12_check_peer_sigalg",
    "SSL_get_peer_signature_type_nid",
    "SSL_get_signature_type_nid",
    "ssl_cipher_disabled",
    "tls12_sigalg_allowed.part.0",
    "tls12_shared_sigalgs",
    "tls1_get_legacy_sigalg",
    "tls1_set_peer_legacy_sigalg",
    "tls_use_ticket",
    "tls_decrypt_ticket",
    "tls_get_ticket_from_client",
    "ssl_set_sig_mask",
    "ssl_set_client_disabled",
    "tls12_copy_sigalgs",
    "tls1_save_u16",
    "tls1_save_sigalgs",
    "tls1_process_sigalgs",
    "tls1_set_server_sigalgs",
    "SSL_get_sigalgs",
    "SSL_get_shared_sigalgs",
    "tls1_set_raw_sigalgs",
    "tls1_set_sigalgs_list",
    "tls1_set_sigalgs",
    "tls1_check_chain",
    "tls1_set_cert_validity",
    "SSL_check_chain",
    "ssl_get_auto_dh",
    "ssl_security_cert",
    "ssl_security_cert_chain",
    "tls_choose_sigalg",
    "SSL_CTX_set_tlsext_max_fragment_length",
    "SSL_set_tlsext_max_fragment_length",
    "SSL_SESSION_get_max_fragment_length"
],
"ghidra/libsgx_tsgxssl_ssl_a/t1_trce.o": [],
"ghidra/libsgx_tsgxssl_ssl_a/tls13_enc.o": [
    "tls13_hkdf_expand",
    "tls13_derive_key",
    "tls13_derive_iv",
    "derive_secret_key_and_iv",
    "tls13_derive_finishedkey",
    "tls13_generate_secret",
    "tls13_generate_handshake_secret",
    "tls13_generate_master_secret",
    "tls13_final_finish_mac",
    "tls13_setup_key_block",
    "tls13_change_cipher_state",
    "tls13_update_key",
    "tls13_alert_code",
    "tls13_export_keying_material",
    "tls13_export_keying_material_early"
],
"ghidra/libsgx_tsgxssl_ssl_a/tls_srp.o": []